Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\androidTest\java\com\example\ozon\ExampleInstrumentedTest.java
package com.example.ozon;

import android.content.Context;

import androidx.test.platform.app.InstrumentationRegistry;
import androidx.test.ext.junit.runners.AndroidJUnit4;

import org.junit.Test;
import org.junit.runner.RunWith;

import static org.junit.Assert.*;

/**
 * Instrumented test, which will execute on an Android device.
 *
 * @see <a href="http://d.android.com/tools/testing">Testing documentation</a>
 */
@RunWith(AndroidJUnit4.class)
public class ExampleInstrumentedTest {
    @Test
    public void useAppContext() {
        // Context of the app under test.
        Context appContext = InstrumentationRegistry.getInstrumentation().getTargetContext();
        assertEquals("com.example.ozon", appContext.getPackageName());
    }
}

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\java\com\example\ozon\AutorizationForSellerActivity.java
package com.example.ozon;

import android.app.AlertDialog;
import android.content.Intent;
import android.content.SharedPreferences;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ProgressBar;
import android.widget.TextView;
import android.widget.Toast;
import androidx.activity.EdgeToEdge;
import androidx.appcompat.app.AppCompatActivity;
import com.google.firebase.firestore.DocumentSnapshot;
import com.google.firebase.firestore.FirebaseFirestore;
import java.util.Random;
import java.util.regex.Pattern;

/**
 * РљР»Р°СЃСЃ AutorizationForSellerActivity РїСЂРµРґСЃС‚Р°РІР»СЏРµС‚ СЃРѕР±РѕР№ Р°РєС‚РёРІРЅРѕСЃС‚СЊ РґР»СЏ Р°РІС‚РѕСЂРёР·Р°С†РёРё РїСЂРѕРґР°РІС†Р°
 * РІ РїСЂРёР»РѕР¶РµРЅРёРё "OZON". РћРЅ РїСЂРµРґРѕСЃС‚Р°РІР»СЏРµС‚ РёРЅС‚РµСЂС„РµР№СЃ РґР»СЏ РІРІРѕРґР° Р»РѕРіРёРЅР° Рё РїР°СЂРѕР»СЏ,
 * РїСЂРѕРІРµСЂРєРё СѓС‡РµС‚РЅС‹С… РґР°РЅРЅС‹С… С‡РµСЂРµР· Firebase Firestore, Р° С‚Р°РєР¶Рµ С„СѓРЅРєС†РёРѕРЅР°Р» РІРѕСЃСЃС‚Р°РЅРѕРІР»РµРЅРёСЏ РїР°СЂРѕР»СЏ
 * СЃ РѕС‚РїСЂР°РІРєРѕР№ РєРѕРґР° РїРѕРґС‚РІРµСЂР¶РґРµРЅРёСЏ РЅР° email. РљР»Р°СЃСЃ РїРѕРґРґРµСЂР¶РёРІР°РµС‚ РїРµСЂРµРєР»СЋС‡РµРЅРёРµ РЅР° Р°РІС‚РѕСЂРёР·Р°С†РёСЋ
 * РїРѕРєСѓРїР°С‚РµР»СЏ Рё РїРµСЂРµРЅР°РїСЂР°РІР»РµРЅРёРµ Р°РІС‚РѕСЂРёР·РѕРІР°РЅРЅРѕРіРѕ РїСЂРѕРґР°РІС†Р° РЅР° РіР»Р°РІРЅС‹Р№ СЌРєСЂР°РЅ РїСЂРѕРґР°РІС†Р° (SellerMainActivity).
 */
public class AutorizationForSellerActivity extends AppCompatActivity {
    private TextView buyerAuthLink;
    private TextView forgotPasswordLink;
    private EditText loginField, passwordField;
    private FirebaseFirestore db;
    private SharedPreferences sharedPrefs;
    private static final Pattern SPECIAL_CHAR_PATTERN = Pattern.compile("[!@#$%^&*(),.?\":{}|<>]");

    /**
     * РРЅРёС†РёР°Р»РёР·РёСЂСѓРµС‚ Р°РєС‚РёРІРЅРѕСЃС‚СЊ AutorizationForSellerActivity. РџСЂРѕРІРµСЂСЏРµС‚, Р°РІС‚РѕСЂРёР·РѕРІР°РЅ Р»Рё РїРѕР»СЊР·РѕРІР°С‚РµР»СЊ,
     * Рё РµСЃР»Рё РґР°, РїРµСЂРµРЅР°РїСЂР°РІР»СЏРµС‚ РµРіРѕ РЅР° РіР»Р°РІРЅС‹Р№ СЌРєСЂР°РЅ РїСЂРѕРґР°РІС†Р°. РРЅР°С‡Рµ Р·Р°РіСЂСѓР¶Р°РµС‚ РёРЅС‚РµСЂС„РµР№СЃ Р°РІС‚РѕСЂРёР·Р°С†РёРё,
     * РЅР°СЃС‚СЂР°РёРІР°РµС‚ СЌР»РµРјРµРЅС‚С‹ UI (РїРѕР»СЏ РІРІРѕРґР°, СЃСЃС‹Р»РєРё, РєРЅРѕРїРєРё) Рё СѓСЃС‚Р°РЅР°РІР»РёРІР°РµС‚ РѕР±СЂР°Р±РѕС‚С‡РёРєРё СЃРѕР±С‹С‚РёР№ РґР»СЏ
     * РїРµСЂРµС…РѕРґР° Рє Р°РІС‚РѕСЂРёР·Р°С†РёРё РїРѕРєСѓРїР°С‚РµР»СЏ, РІРѕСЃСЃС‚Р°РЅРѕРІР»РµРЅРёСЏ РїР°СЂРѕР»СЏ Рё РІС…РѕРґР° РІ СЃРёСЃС‚РµРјСѓ.
     *
     * savedInstanceState РЎРѕС…СЂР°РЅРµРЅРЅРѕРµ СЃРѕСЃС‚РѕСЏРЅРёРµ Р°РєС‚РёРІРЅРѕСЃС‚Рё.
     */
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        EdgeToEdge.enable(this);
        sharedPrefs = getSharedPreferences("AppPrefs", MODE_PRIVATE);
        if (sharedPrefs.getBoolean("isLoggedIn", false)) {
            String userId = sharedPrefs.getString("userId", "");
            String userRole = sharedPrefs.getString("userRole", "");
            if ("seller".equals(userRole)) {
                startSellerMainActivity(userId);
            }
            return;
        }
        setContentView(R.layout.autorization_for_seller);
        buyerAuthLink = findViewById(R.id.buyerAuthLink);
        buyerAuthLink.setOnClickListener(v -> {
            Intent intent = new Intent(AutorizationForSellerActivity.this, MainActivity.class);
            startActivity(intent);
        });
        forgotPasswordLink = findViewById(R.id.forgotPasswordLink);
        forgotPasswordLink.setOnClickListener(v -> showForgotPasswordDialog());
        db = FirebaseFirestore.getInstance();
        loginField = findViewById(R.id.loginField);
        passwordField = findViewById(R.id.passwordField);
        findViewById(R.id.loginButton).setOnClickListener(v -> loginUser());
    }

    /**
     * РћС‚РѕР±СЂР°Р¶Р°РµС‚ РґРёР°Р»РѕРіРѕРІРѕРµ РѕРєРЅРѕ РґР»СЏ РІРѕСЃСЃС‚Р°РЅРѕРІР»РµРЅРёСЏ РїР°СЂРѕР»СЏ РїСЂРѕРґР°РІС†Р°. РџРѕР·РІРѕР»СЏРµС‚ РїРѕР»СЊР·РѕРІР°С‚РµР»СЋ РІРІРµСЃС‚Рё
     * email, РѕС‚РїСЂР°РІРёС‚СЊ РєРѕРґ РїРѕРґС‚РІРµСЂР¶РґРµРЅРёСЏ Рё РІРІРµСЃС‚Рё РїРѕР»СѓС‡РµРЅРЅС‹Р№ РєРѕРґ РґР»СЏ РїРµСЂРµС…РѕРґР° Рє СЃРјРµРЅРµ РїР°СЂРѕР»СЏ.
     * РџСЂРѕРІРµСЂСЏРµС‚ СЃСѓС‰РµСЃС‚РІРѕРІР°РЅРёРµ РїРѕР»СЊР·РѕРІР°С‚РµР»СЏ РІ Р±Р°Р·Рµ РґР°РЅРЅС‹С… Firebase Firestore Рё Р°РєС‚РёРІРёСЂСѓРµС‚ РєРЅРѕРїРєСѓ
     * СЃРјРµРЅС‹ РїР°СЂРѕР»СЏ РїРѕСЃР»Рµ СѓСЃРїРµС€РЅРѕР№ РѕС‚РїСЂР°РІРєРё РєРѕРґР°.
     */
    private void showForgotPasswordDialog() {
        AlertDialog.Builder builder = new AlertDialog.Builder(this);
        View view = getLayoutInflater().inflate(R.layout.password_recovery, null);
        builder.setView(view);
        EditText emailField = view.findViewById(R.id.loginField);
        EditText codeField = view.findViewById(R.id.codeField);
        Button sendCodeButton = view.findViewById(R.id.sendCodeButton);
        Button changePasswordButton = view.findViewById(R.id.changePasswordButton);
        changePasswordButton.setEnabled(false);
        changePasswordButton.setAlpha(0.5f);
        AlertDialog dialog = builder.create();
        String[] generatedCode = {null};
        sendCodeButton.setOnClickListener(v -> {
            String email = emailField.getText().toString().trim();
            if (email.isEmpty()) {
                Toast.makeText(AutorizationForSellerActivity.this, "Р’РІРµРґРёС‚Рµ email", Toast.LENGTH_SHORT).show();
            } else {
                db.collection("users")
                        .whereEqualTo("email", email)
                        .whereEqualTo("role", "seller")
                        .get()
                        .addOnSuccessListener(queryDocumentSnapshots -> {
                            if (queryDocumentSnapshots.isEmpty()) {
                                Toast.makeText(AutorizationForSellerActivity.this, "РџРѕР»СЊР·РѕРІР°С‚РµР»СЊ СЃ С‚Р°РєРёРј email РЅРµ РЅР°Р№РґРµРЅ РёР»Рё РЅРµ СЏРІР»СЏРµС‚СЃСЏ РїСЂРѕРґР°РІС†РѕРј", Toast.LENGTH_SHORT).show();
                            } else {
                                generatedCode[0] = generateVerificationCode();
                                sendPasswordRecoveryEmail(email, generatedCode[0]);
                                changePasswordButton.setEnabled(true);
                                changePasswordButton.setAlpha(1.0f);
                            }
                        })
                        .addOnFailureListener(e -> {
                            Toast.makeText(AutorizationForSellerActivity.this, "РћС€РёР±РєР° РїСЂРё РїСЂРѕРІРµСЂРєРµ email: " + e.getMessage(), Toast.LENGTH_SHORT).show();
                        });
            }
        });
        changePasswordButton.setOnClickListener(v -> {
            String email = emailField.getText().toString().trim();
            String enteredCode = codeField.getText().toString().trim();
            if (email.isEmpty() || enteredCode.isEmpty()) {
                Toast.makeText(this, "Р—Р°РїРѕР»РЅРёС‚Рµ РІСЃРµ РїРѕР»СЏ", Toast.LENGTH_SHORT).show();
            } else if (generatedCode[0] == null) {
                Toast.makeText(this, "РЎРЅР°С‡Р°Р»Р° РѕС‚РїСЂР°РІСЊС‚Рµ РєРѕРґ", Toast.LENGTH_SHORT).show();
            } else if (!enteredCode.equals(generatedCode[0])) {
                Toast.makeText(this, "РќРµРІРµСЂРЅС‹Р№ РєРѕРґ", Toast.LENGTH_SHORT).show();
            } else {
                dialog.dismiss();
                showChangePasswordDialog(email);
            }
        });
        dialog.show();
    }

    /**
     * РћС‚РѕР±СЂР°Р¶Р°РµС‚ РґРёР°Р»РѕРіРѕРІРѕРµ РѕРєРЅРѕ РґР»СЏ СЃРјРµРЅС‹ РїР°СЂРѕР»СЏ РїСЂРѕРґР°РІС†Р°. РџРѕР»СЊР·РѕРІР°С‚РµР»СЊ РІРІРѕРґРёС‚ РЅРѕРІС‹Р№ РїР°СЂРѕР»СЊ
     * Рё РїРѕРґС‚РІРµСЂР¶РґР°РµС‚ РµРіРѕ, РїРѕСЃР»Рµ С‡РµРіРѕ РґР°РЅРЅС‹Рµ РѕР±РЅРѕРІР»СЏСЋС‚СЃСЏ РІ Р±Р°Р·Рµ Firebase Firestore. РњРµС‚РѕРґ РІС‹Р·С‹РІР°РµС‚СЃСЏ
     * РїРѕСЃР»Рµ СѓСЃРїРµС€РЅРѕР№ РїСЂРѕРІРµСЂРєРё РєРѕРґР° РїРѕРґС‚РІРµСЂР¶РґРµРЅРёСЏ, РѕС‚РїСЂР°РІР»РµРЅРЅРѕРіРѕ РЅР° email.
     *
     *  email Email РїРѕР»СЊР·РѕРІР°С‚РµР»СЏ, РґР»СЏ РєРѕС‚РѕСЂРѕРіРѕ РІС‹РїРѕР»РЅСЏРµС‚СЃСЏ СЃРјРµРЅР° РїР°СЂРѕР»СЏ.
     */
    private void showChangePasswordDialog(String email) {
        AlertDialog.Builder builder = new AlertDialog.Builder(this);
        View view = getLayoutInflater().inflate(R.layout.change_password_layout, null);
        builder.setView(view);
        EditText newPasswordField = view.findViewById(R.id.newPasswordField);
        EditText confirmPasswordField = view.findViewById(R.id.confirmPasswordField);
        Button savePasswordButton = view.findViewById(R.id.savePasswordButton);
        AlertDialog dialog = builder.create();
        savePasswordButton.setOnClickListener(v -> {
            String newPassword = newPasswordField.getText().toString().trim();
            String confirmPassword = confirmPasswordField.getText().toString().trim();
            if (validateNewPassword(newPassword, confirmPassword)) {
                db.collection("users")
                        .whereEqualTo("email", email)
                        .whereEqualTo("role", "seller")
                        .get()
                        .addOnSuccessListener(queryDocumentSnapshots -> {
                            if (!queryDocumentSnapshots.isEmpty()) {
                                String userDocumentId = queryDocumentSnapshots.getDocuments().get(0).getId();
                                db.collection("users")
                                        .document(userDocumentId)
                                        .update("password", newPassword)
                                        .addOnSuccessListener(aVoid -> {
                                            dialog.dismiss();
                                        })
                                        .addOnFailureListener(e -> {
                                            Toast.makeText(this, "РћС€РёР±РєР° РїСЂРё РёР·РјРµРЅРµРЅРёРё РїР°СЂРѕР»СЏ: " + e.getMessage(), Toast.LENGTH_SHORT).show();
                                        });
                            } else {
                                Toast.makeText(this, "РџРѕР»СЊР·РѕРІР°С‚РµР»СЊ РЅРµ РЅР°Р№РґРµРЅ РёР»Рё РЅРµ СЏРІР»СЏРµС‚СЃСЏ РїСЂРѕРґР°РІС†РѕРј", Toast.LENGTH_SHORT).show();
                            }
                        })
                        .addOnFailureListener(e -> {
                        });
            }
        });

        dialog.show();
    }

    /**
     * РџСЂРѕРІРµСЂСЏРµС‚ РєРѕСЂСЂРµРєС‚РЅРѕСЃС‚СЊ РЅРѕРІРѕРіРѕ РїР°СЂРѕР»СЏ РїСЂРё РµРіРѕ СЃРјРµРЅРµ. РЈР±РµР¶РґР°РµС‚СЃСЏ, С‡С‚Рѕ РїР°СЂРѕР»СЊ Рё РµРіРѕ РїРѕРґС‚РІРµСЂР¶РґРµРЅРёРµ
     * СЃРѕРІРїР°РґР°СЋС‚, Р° С‚Р°РєР¶Рµ СЃРѕРѕС‚РІРµС‚СЃС‚РІСѓСЋС‚ С‚СЂРµР±РѕРІР°РЅРёСЏРј: РјРёРЅРёРјСѓРј 7 СЃРёРјРІРѕР»РѕРІ, РЅР°Р»РёС‡РёРµ Р·Р°РіР»Р°РІРЅРѕР№ Рё СЃС‚СЂРѕС‡РЅРѕР№
     * Р±СѓРєРІ, С†РёС„СЂС‹ Рё СЃРїРµС†РёР°Р»СЊРЅРѕРіРѕ СЃРёРјРІРѕР»Р°. Р’РѕР·РІСЂР°С‰Р°РµС‚ true, РµСЃР»Рё РїР°СЂРѕР»СЊ РІР°Р»РёРґРµРЅ, РёРЅР°С‡Рµ РѕС‚РѕР±СЂР°Р¶Р°РµС‚
     * СЃРѕРѕР±С‰РµРЅРёРµ РѕР± РѕС€РёР±РєРµ Рё РІРѕР·РІСЂР°С‰Р°РµС‚ false.
     *
     *  newPassword РќРѕРІС‹Р№ РїР°СЂРѕР»СЊ.
     *  confirmPassword РџРѕРґС‚РІРµСЂР¶РґРµРЅРёРµ РЅРѕРІРѕРіРѕ РїР°СЂРѕР»СЏ.
     * @return true, РµСЃР»Рё РїР°СЂРѕР»СЊ РІР°Р»РёРґРµРЅ, РёРЅР°С‡Рµ false.
     */
    private boolean validateNewPassword(String newPassword, String confirmPassword) {
        if (newPassword.isEmpty() || confirmPassword.isEmpty()) {
            Toast.makeText(this, "Р—Р°РїРѕР»РЅРёС‚Рµ РІСЃРµ РїРѕР»СЏ", Toast.LENGTH_SHORT).show();
            return false;
        }
        if (!newPassword.equals(confirmPassword)) {
            Toast.makeText(this, "РџР°СЂРѕР»Рё РЅРµ СЃРѕРІРїР°РґР°СЋС‚", Toast.LENGTH_SHORT).show();
            return false;
        }
        if (newPassword.length() < 7) {
            Toast.makeText(this, "РџР°СЂРѕР»СЊ РґРѕР»Р¶РµРЅ СЃРѕРґРµСЂР¶Р°С‚СЊ РјРёРЅРёРјСѓРј 7 СЃРёРјРІРѕР»РѕРІ", Toast.LENGTH_SHORT).show();
            return false;
        }
        if (!Pattern.compile("[A-Z]").matcher(newPassword).find()) {
            Toast.makeText(this, "РџР°СЂРѕР»СЊ РґРѕР»Р¶РµРЅ СЃРѕРґРµСЂР¶Р°С‚СЊ С…РѕС‚СЏ Р±С‹ РѕРґРЅСѓ Р·Р°РіР»Р°РІРЅСѓСЋ Р±СѓРєРІСѓ", Toast.LENGTH_SHORT).show();
            return false;
        }
        if (!Pattern.compile("[a-z]").matcher(newPassword).find()) {
            Toast.makeText(this, "РџР°СЂРѕР»СЊ РґРѕР»Р¶РµРЅ СЃРѕРґРµСЂР¶Р°С‚СЊ С…РѕС‚СЏ Р±С‹ РѕРґРЅСѓ СЃС‚СЂРѕС‡РЅСѓСЋ Р±СѓРєРІСѓ", Toast.LENGTH_SHORT).show();
            return false;
        }
        if (!Pattern.compile("[0-9]").matcher(newPassword).find()) {
            Toast.makeText(this, "РџР°СЂРѕР»СЊ РґРѕР»Р¶РµРЅ СЃРѕРґРµСЂР¶Р°С‚СЊ С…РѕС‚СЏ Р±С‹ РѕРґРЅСѓ С†РёС„СЂСѓ", Toast.LENGTH_SHORT).show();
            return false;
        }
        if (!SPECIAL_CHAR_PATTERN.matcher(newPassword).find()) {
            Toast.makeText(this, "РџР°СЂРѕР»СЊ РґРѕР»Р¶РµРЅ СЃРѕРґРµСЂР¶Р°С‚СЊ С…РѕС‚СЏ Р±С‹ РѕРґРёРЅ СЃРїРµС†РёР°Р»СЊРЅС‹Р№ СЃРёРјРІРѕР» (!@#$%^&*(),.?\":{}|<>)", Toast.LENGTH_SHORT).show();
            return false;
        }
        return true;
    }

    /**
     * Р“РµРЅРµСЂРёСЂСѓРµС‚ СЃР»СѓС‡Р°Р№РЅС‹Р№ РїСЏС‚РёР·РЅР°С‡РЅС‹Р№ РєРѕРґ РїРѕРґС‚РІРµСЂР¶РґРµРЅРёСЏ РґР»СЏ РІРѕСЃСЃС‚Р°РЅРѕРІР»РµРЅРёСЏ РїР°СЂРѕР»СЏ. РСЃРїРѕР»СЊР·СѓРµС‚
     * РєР»Р°СЃСЃ Random РґР»СЏ СЃРѕР·РґР°РЅРёСЏ С‡РёСЃР»Р° РІ РґРёР°РїР°Р·РѕРЅРµ РѕС‚ 10000 РґРѕ 99999. Р’РѕР·РІСЂР°С‰Р°РµС‚ РєРѕРґ РІ РІРёРґРµ СЃС‚СЂРѕРєРё.
     *
     * @return РЎРіРµРЅРµСЂРёСЂРѕРІР°РЅРЅС‹Р№ РєРѕРґ РїРѕРґС‚РІРµСЂР¶РґРµРЅРёСЏ.
     */
    private String generateVerificationCode() {
        Random random = new Random();
        int code = 10000 + random.nextInt(90000);
        return String.valueOf(code);
    }

    /**
     * Р¤РѕСЂРјРёСЂСѓРµС‚ Рё РѕС‚РїСЂР°РІР»СЏРµС‚ email СЃ РєРѕРґРѕРј РїРѕРґС‚РІРµСЂР¶РґРµРЅРёСЏ РґР»СЏ РІРѕСЃСЃС‚Р°РЅРѕРІР»РµРЅРёСЏ РїР°СЂРѕР»СЏ. РЎРѕР·РґР°РµС‚
     * HTML-С€Р°Р±Р»РѕРЅ РїРёСЃСЊРјР° СЃ РєРѕРґРѕРј, С‚РµРјРѕР№ "Р’РѕСЃСЃС‚Р°РЅРѕРІР»РµРЅРёРµ РїР°СЂРѕР»СЏ Ozon" Рё РёРЅС„РѕСЂРјР°С†РёРµР№ Рѕ СЃСЂРѕРєРµ РґРµР№СЃС‚РІРёСЏ
     * РєРѕРґР° (10 РјРёРЅСѓС‚). РСЃРїРѕР»СЊР·СѓРµС‚ Р°СЃРёРЅС…СЂРѕРЅРЅСѓСЋ Р·Р°РґР°С‡Сѓ SendEmailTask РґР»СЏ РѕС‚РїСЂР°РІРєРё РїРёСЃСЊРјР°.
     *
     *  email Email РїРѕР»СЊР·РѕРІР°С‚РµР»СЏ, РЅР° РєРѕС‚РѕСЂС‹Р№ РѕС‚РїСЂР°РІР»СЏРµС‚СЃСЏ РєРѕРґ.
     *  code РљРѕРґ РїРѕРґС‚РІРµСЂР¶РґРµРЅРёСЏ РґР»СЏ РІРѕСЃСЃС‚Р°РЅРѕРІР»РµРЅРёСЏ РїР°СЂРѕР»СЏ.
     */
    private void sendPasswordRecoveryEmail(String email, String code) {
        String subject = "Р’РѕСЃСЃС‚Р°РЅРѕРІР»РµРЅРёРµ РїР°СЂРѕР»СЏ Ozon";
        String body = "<!DOCTYPE html>" +
                "<html lang='ru'>" +
                "<head>" +
                "<meta charset='UTF-8'>" +
                "<meta name='viewport' content='width=device-width, initial-scale=1.0'>" +
                "<title>Р’РѕСЃСЃС‚Р°РЅРѕРІР»РµРЅРёРµ РїР°СЂРѕР»СЏ</title>" +
                "</head>" +
                "<body style='margin: 0; padding: 0; font-family: Arial, sans-serif; background-color: #f4f4f4;'>" +
                "<table role='presentation' cellpadding='0' cellspacing='0' style='width: 100%; max-width: 600px; margin: 20px auto; background-color: #ffffff; border-radius: 8px; box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);'>" +
                "<tr>" +
                "<td style='background-color: #005BFF; padding: 20px; text-align: center; border-top-left-radius: 8px; border-top-right-radius: 8px;'>" +
                "<h1 style='color: #ffffff; margin: 0; font-size: 24px;'>Ozon</h1>" +
                "<h2 style='color: #ffffff; margin: 5px 0 0; font-size: 18px;'>Р’РѕСЃСЃС‚Р°РЅРѕРІР»РµРЅРёРµ РїР°СЂРѕР»СЏ</h2>" +
                "</td>" +
                "</tr>" +
                "<tr>" +
                "<td style='padding: 30px; text-align: center;'>" +
                "<h3 style='color: #001A34; font-size: 20px; margin: 0 0 10px;'>Р’Р°С€ РєРѕРґ РґР»СЏ РІРѕСЃСЃС‚Р°РЅРѕРІР»РµРЅРёСЏ РїР°СЂРѕР»СЏ</h3>" +
                "<p style='color: #666666; font-size: 16px; margin: 0 0 20px;'>РСЃРїРѕР»СЊР·СѓР№С‚Рµ СЌС‚РѕС‚ РєРѕРґ РґР»СЏ СЃР±СЂРѕСЃР° РїР°СЂРѕР»СЏ РІ РїСЂРёР»РѕР¶РµРЅРёРё Ozon:</p>" +
                "<div style='background-color: #E6F0FF; padding: 15px; border-radius: 5px; display: inline-block;'>" +
                "<span style='font-size: 24px; font-weight: bold; color: #005BFF; letter-spacing: 2px;'>" + code + "</span>" +
                "</div>" +
                "<p style='color: #666666; font-size: 14px; margin: 20px 0 0;'>РљРѕРґ РґРµР№СЃС‚РІРёС‚РµР»РµРЅ РІ С‚РµС‡РµРЅРёРµ 10 РјРёРЅСѓС‚.</p>" +
                "</td>" +
                "</tr>" +
                "<tr>" +
                "<td style='padding: 20px; text-align: center; background-color: #f9f9f9; border-bottom-left-radius: 8px; border-bottom-right-radius: 8px;'>" +
                "<p style='color: #999999; font-size: 12px; margin: 0;'>Р•СЃР»Рё РІС‹ РЅРµ Р·Р°РїСЂР°С€РёРІР°Р»Рё РІРѕСЃСЃС‚Р°РЅРѕРІР»РµРЅРёРµ РїР°СЂРѕР»СЏ, РїСЂРѕРёРіРЅРѕСЂРёСЂСѓР№С‚Рµ СЌС‚Рѕ СЃРѕРѕР±С‰РµРЅРёРµ.</p>" +
                "<p style='color: #999999; font-size: 12px; margin: 5px 0 0;'>РЎРІСЏР¶РёС‚РµСЃСЊ СЃ РЅР°РјРё: <a href='mailto:support@ozon.ru' style='color: #005BFF; text-decoration: none;'>support@ozon.ru</a></p>" +
                "</td>" +
                "</tr>" +
                "</table>" +
                "</body>" +
                "</html>";
        new SendEmailTask(this, email, subject, body, true).execute();
    }

    /**
     * РћР±СЂР°Р±Р°С‚С‹РІР°РµС‚ РїСЂРѕС†РµСЃСЃ Р°РІС‚РѕСЂРёР·Р°С†РёРё РїСЂРѕРґР°РІС†Р°. РџСЂРѕРІРµСЂСЏРµС‚ РІРІРµРґРµРЅРЅС‹Рµ email Рё РїР°СЂРѕР»СЊ, РѕС‚РїСЂР°РІР»СЏРµС‚
     * Р·Р°РїСЂРѕСЃ РІ Firebase Firestore РґР»СЏ РїРѕРёСЃРєР° РїРѕР»СЊР·РѕРІР°С‚РµР»СЏ СЃ СѓРєР°Р·Р°РЅРЅС‹РјРё РґР°РЅРЅС‹РјРё Рё СЂРѕР»СЊСЋ "seller".
     * РџСЂРё СѓСЃРїРµС€РЅРѕР№ Р°РІС‚РѕСЂРёР·Р°С†РёРё СЃРѕС…СЂР°РЅСЏРµС‚ РґР°РЅРЅС‹Рµ РїРѕР»СЊР·РѕРІР°С‚РµР»СЏ РІ SharedPreferences Рё РїРµСЂРµРЅР°РїСЂР°РІР»СЏРµС‚
     * РЅР° РіР»Р°РІРЅС‹Р№ СЌРєСЂР°РЅ РїСЂРѕРґР°РІС†Р° (SellerMainActivity). РћС‚РѕР±СЂР°Р¶Р°РµС‚ РёРЅРґРёРєР°С‚РѕСЂ Р·Р°РіСЂСѓР·РєРё Рё СЃРѕРѕР±С‰РµРЅРёСЏ
     * РѕР± РѕС€РёР±РєР°С… РїСЂРё РЅРµРѕР±С…РѕРґРёРјРѕСЃС‚Рё.
     */
    private void loginUser() {
        String email = loginField.getText().toString().trim();
        String password = passwordField.getText().toString().trim();
        if (email.isEmpty() || password.isEmpty()) {
            Toast.makeText(this, "Р—Р°РїРѕР»РЅРёС‚Рµ РІСЃРµ РїРѕР»СЏ", Toast.LENGTH_SHORT).show();
            return;
        }
        findViewById(R.id.loginButton).setEnabled(false);
        ProgressBar progressBar = findViewById(R.id.progressBar);
        if (progressBar != null) {
            progressBar.setVisibility(View.VISIBLE);
        }
        new Thread(() -> {
            db.collection("users")
                    .whereEqualTo("email", email)
                    .whereEqualTo("password", password)
                    .whereEqualTo("role", "seller")
                    .get()
                    .addOnSuccessListener(queryDocumentSnapshots -> {
                        runOnUiThread(() -> {
                            if (progressBar != null) {
                                progressBar.setVisibility(View.GONE);
                            }
                            findViewById(R.id.loginButton).setEnabled(true);
                            if (queryDocumentSnapshots.isEmpty()) {
                                Toast.makeText(this, "РќРµРІРµСЂРЅС‹Р№ Р»РѕРіРёРЅ РёР»Рё РїР°СЂРѕР»СЊ", Toast.LENGTH_SHORT).show();
                            } else {
                                DocumentSnapshot userDoc = queryDocumentSnapshots.getDocuments().get(0);
                                String userDocumentId = userDoc.getId();
                                String sellerName = userDoc.getString("name");
                                String sellerShop = userDoc.getString("shop");
                                String sellerOGRNIP = userDoc.getString("ogrnip");
                                String sellerINN = userDoc.getString("inn");
                                SharedPreferences.Editor editor = sharedPrefs.edit();
                                editor.putBoolean("isLoggedIn", true);
                                editor.putString("userId", userDocumentId);
                                editor.putString("userRole", "seller");
                                editor.putString("sellerName", sellerName);
                                editor.putString("sellerLogin", email);
                                editor.putString("sellerShop", sellerShop);
                                editor.putString("sellerOGRNIP", sellerOGRNIP);
                                editor.putString("sellerINN", sellerINN);
                                boolean success = editor.commit();
                                if (success) {
                                    startSellerMainActivity(userDocumentId);
                                } else {
                                    Toast.makeText(this, "РћС€РёР±РєР° СЃРѕС…СЂР°РЅРµРЅРёСЏ РґР°РЅРЅС‹С…", Toast.LENGTH_SHORT).show();
                                }
                            }
                        });
                    })
                    .addOnFailureListener(e -> {
                        runOnUiThread(() -> {
                            if (progressBar != null) {
                                progressBar.setVisibility(View.GONE);
                            }
                            findViewById(R.id.loginButton).setEnabled(true);
                            Toast.makeText(this, "РћС€РёР±РєР° РїСЂРё Р°РІС‚РѕСЂРёР·Р°С†РёРё: " + e.getMessage(), Toast.LENGTH_SHORT).show();
                        });
                    });
        }).start();
    }

    /**
     * Р—Р°РїСѓСЃРєР°РµС‚ РіР»Р°РІРЅС‹Р№ СЌРєСЂР°РЅ РїСЂРѕРґР°РІС†Р° (SellerMainActivity) РїРѕСЃР»Рµ СѓСЃРїРµС€РЅРѕР№ Р°РІС‚РѕСЂРёР·Р°С†РёРё. РџРµСЂРµРґР°РµС‚
     * РёРґРµРЅС‚РёС„РёРєР°С‚РѕСЂ РїРѕР»СЊР·РѕРІР°С‚РµР»СЏ (userId) Рё СЂРѕР»СЊ ("seller") С‡РµСЂРµР· Intent, Р·Р°РІРµСЂС€Р°СЏ С‚РµРєСѓС‰СѓСЋ Р°РєС‚РёРІРЅРѕСЃС‚СЊ.
     *
     *  userId РРґРµРЅС‚РёС„РёРєР°С‚РѕСЂ РїРѕР»СЊР·РѕРІР°С‚РµР»СЏ РІ Р±Р°Р·Рµ РґР°РЅРЅС‹С….
     */
    private void startSellerMainActivity(String userId) {
        Intent intent = new Intent(this, SellerMainActivity.class);
        intent.putExtra("USER_DOCUMENT_ID", userId);
        intent.putExtra("USER_ROLE", "seller");
        startActivity(intent);
        finish();
    }
}

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\java\com\example\ozon\Cart.java
package com.example.ozon;

import com.google.firebase.firestore.DocumentId;

/**
 * РљР»Р°СЃСЃ Cart РїСЂРµРґСЃС‚Р°РІР»СЏРµС‚ РјРѕРґРµР»СЊ РґР°РЅРЅС‹С… РґР»СЏ СЌР»РµРјРµРЅС‚Р° РєРѕСЂР·РёРЅС‹ РІ РїСЂРёР»РѕР¶РµРЅРёРё "OZON".
 * РЎРѕРґРµСЂР¶РёС‚ РёРЅС„РѕСЂРјР°С†РёСЋ Рѕ С‚РѕРІР°СЂРµ РІ РєРѕСЂР·РёРЅРµ, РІРєР»СЋС‡Р°СЏ РёРґРµРЅС‚РёС„РёРєР°С‚РѕСЂ РґРѕРєСѓРјРµРЅС‚Р°, РёРґРµРЅС‚РёС„РёРєР°С‚РѕСЂ С‚РѕРІР°СЂР°,
 * РЅР°Р·РІР°РЅРёРµ, С†РµРЅСѓ, РєРѕР»РёС‡РµСЃС‚РІРѕ, РёР·РѕР±СЂР°Р¶РµРЅРёРµ РІ С„РѕСЂРјР°С‚Рµ Base64 Рё РёРґРµРЅС‚РёС„РёРєР°С‚РѕСЂ РїРѕР»СЊР·РѕРІР°С‚РµР»СЏ.
 */
public class Cart {
    @DocumentId
    private String documentId;
    private String productId;
    private String name;
    private int price;
    private int quantity;
    private String imageBase64;
    private String userId;

    /**
     * РљРѕРЅСЃС‚СЂСѓРєС‚РѕСЂ РїРѕ СѓРјРѕР»С‡Р°РЅРёСЋ РґР»СЏ СЃРѕР·РґР°РЅРёСЏ РїСѓСЃС‚РѕРіРѕ РѕР±СЉРµРєС‚Р° Cart.
     * РСЃРїРѕР»СЊР·СѓРµС‚СЃСЏ Firebase Firestore РґР»СЏ РґРµСЃРµСЂРёР°Р»РёР·Р°С†РёРё РґР°РЅРЅС‹С….
     */
    public Cart() {}

    /**
     * РљРѕРЅСЃС‚СЂСѓРєС‚РѕСЂ РґР»СЏ СЃРѕР·РґР°РЅРёСЏ РѕР±СЉРµРєС‚Р° Cart СЃ Р·Р°РґР°РЅРЅС‹РјРё Р·РЅР°С‡РµРЅРёСЏРјРё.
     * РРЅРёС†РёР°Р»РёР·РёСЂСѓРµС‚ РїРѕР»СЏ РєР»Р°СЃСЃР°: РёРґРµРЅС‚РёС„РёРєР°С‚РѕСЂ С‚РѕРІР°СЂР°, РЅР°Р·РІР°РЅРёРµ, С†РµРЅСѓ, РєРѕР»РёС‡РµСЃС‚РІРѕ,
     * РёР·РѕР±СЂР°Р¶РµРЅРёРµ РІ С„РѕСЂРјР°С‚Рµ Base64 Рё РёРґРµРЅС‚РёС„РёРєР°С‚РѕСЂ РїРѕР»СЊР·РѕРІР°С‚РµР»СЏ.
     */
    public Cart(String productId, String name, int price, int quantity,
                String imageBase64, String userId) {
        this.productId = productId;
        this.name = name;
        this.price = price;
        this.quantity = quantity;
        this.imageBase64 = imageBase64;
        this.userId = userId;
    }

    /**
     * Р’РѕР·РІСЂР°С‰Р°РµС‚ РёРґРµРЅС‚РёС„РёРєР°С‚РѕСЂ РґРѕРєСѓРјРµРЅС‚Р° РєРѕСЂР·РёРЅС‹ РІ Р±Р°Р·Рµ РґР°РЅРЅС‹С… Firebase Firestore.
     */
    public String getDocumentId() {
        return documentId;
    }

    /**
     * РЈСЃС‚Р°РЅР°РІР»РёРІР°РµС‚ РёРґРµРЅС‚РёС„РёРєР°С‚РѕСЂ РґРѕРєСѓРјРµРЅС‚Р° РєРѕСЂР·РёРЅС‹ РІ Р±Р°Р·Рµ РґР°РЅРЅС‹С… Firebase Firestore.
     */
    public void setDocumentId(String documentId) {
        this.documentId = documentId;
    }

    /**
     * Р’РѕР·РІСЂР°С‰Р°РµС‚ РёРґРµРЅС‚РёС„РёРєР°С‚РѕСЂ С‚РѕРІР°СЂР°, РґРѕР±Р°РІР»РµРЅРЅРѕРіРѕ РІ РєРѕСЂР·РёРЅСѓ.
     */
    public String getProductId() {
        return productId;
    }

    /**
     * РЈСЃС‚Р°РЅР°РІР»РёРІР°РµС‚ РёРґРµРЅС‚РёС„РёРєР°С‚РѕСЂ С‚РѕРІР°СЂР°, РґРѕР±Р°РІР»РµРЅРЅРѕРіРѕ РІ РєРѕСЂР·РёРЅСѓ.
     */
    public void setProductId(String productId) {
        this.productId = productId;
    }

    /**
     * Р’РѕР·РІСЂР°С‰Р°РµС‚ РёРґРµРЅС‚РёС„РёРєР°С‚РѕСЂ РїРѕР»СЊР·РѕРІР°С‚РµР»СЏ, РєРѕС‚РѕСЂРѕРјСѓ РїСЂРёРЅР°РґР»РµР¶РёС‚ РєРѕСЂР·РёРЅР°.
     */
    public String getUserId() {
        return userId;
    }

    /**
     * РЈСЃС‚Р°РЅР°РІР»РёРІР°РµС‚ РёРґРµРЅС‚РёС„РёРєР°С‚РѕСЂ РїРѕР»СЊР·РѕРІР°С‚РµР»СЏ, РєРѕС‚РѕСЂРѕРјСѓ РїСЂРёРЅР°РґР»РµР¶РёС‚ РєРѕСЂР·РёРЅР°.
     */
    public void setUserId(String userId) {
        this.userId = userId;
    }

    /**
     * Р’РѕР·РІСЂР°С‰Р°РµС‚ РЅР°Р·РІР°РЅРёРµ С‚РѕРІР°СЂР° РІ РєРѕСЂР·РёРЅРµ.
     */
    public String getName() {
        return name;
    }

    /**
     * РЈСЃС‚Р°РЅР°РІР»РёРІР°РµС‚ РЅР°Р·РІР°РЅРёРµ С‚РѕРІР°СЂР° РІ РєРѕСЂР·РёРЅРµ.
     */
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Р’РѕР·РІСЂР°С‰Р°РµС‚ С†РµРЅСѓ С‚РѕРІР°СЂР° РІ РєРѕСЂР·РёРЅРµ.
     */
    public int getPrice() {
        return price;
    }

    /**
     * РЈСЃС‚Р°РЅР°РІР»РёРІР°РµС‚ С†РµРЅСѓ С‚РѕРІР°СЂР° РІ РєРѕСЂР·РёРЅРµ.
     */
    public void setPrice(int price) {
        this.price = price;
    }

    /**
     * Р’РѕР·РІСЂР°С‰Р°РµС‚ РєРѕР»РёС‡РµСЃС‚РІРѕ РµРґРёРЅРёС† С‚РѕРІР°СЂР° РІ РєРѕСЂР·РёРЅРµ.
     */
    public int getQuantity() {
        return quantity;
    }

    /**
     * РЈСЃС‚Р°РЅР°РІР»РёРІР°РµС‚ РєРѕР»РёС‡РµСЃС‚РІРѕ РµРґРёРЅРёС† С‚РѕРІР°СЂР° РІ РєРѕСЂР·РёРЅРµ.
     */
    public void setQuantity(int quantity) {
        this.quantity = quantity;
    }

    /**
     * Р’РѕР·РІСЂР°С‰Р°РµС‚ РёР·РѕР±СЂР°Р¶РµРЅРёРµ С‚РѕРІР°СЂР° РІ С„РѕСЂРјР°С‚Рµ Base64.
     */
    public String getImageBase64() {
        return imageBase64;
    }

    /**
     * РЈСЃС‚Р°РЅР°РІР»РёРІР°РµС‚ РёР·РѕР±СЂР°Р¶РµРЅРёРµ С‚РѕРІР°СЂР° РІ С„РѕСЂРјР°С‚Рµ Base64.
     */
    public void setImageBase64(String imageBase64) {
        this.imageBase64 = imageBase64;
    }
}

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\java\com\example\ozon\CartActivity.java
package com.example.ozon;

import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import android.widget.Toast;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.fragment.app.Fragment;
import androidx.recyclerview.widget.LinearLayoutManager;
import androidx.recyclerview.widget.RecyclerView;
import com.firebase.ui.firestore.FirestoreRecyclerOptions;
import com.google.firebase.firestore.DocumentSnapshot;
import com.google.firebase.firestore.FirebaseFirestore;
import com.google.firebase.firestore.Query;

/**
 * РљР»Р°СЃСЃ CartActivity РїСЂРµРґСЃС‚Р°РІР»СЏРµС‚ СЃРѕР±РѕР№ С„СЂР°РіРјРµРЅС‚ РґР»СЏ РѕС‚РѕР±СЂР°Р¶РµРЅРёСЏ РєРѕСЂР·РёРЅС‹ РїРѕР»СЊР·РѕРІР°С‚РµР»СЏ
 * РІ РїСЂРёР»РѕР¶РµРЅРёРё "OZON". РћС‚РѕР±СЂР°Р¶Р°РµС‚ СЃРїРёСЃРѕРє С‚РѕРІР°СЂРѕРІ РІ РєРѕСЂР·РёРЅРµ, РѕР±С‰СѓСЋ СЃСѓРјРјСѓ,
 * РїСЂРµРґРѕСЃС‚Р°РІР»СЏРµС‚ РІРѕР·РјРѕР¶РЅРѕСЃС‚СЊ РѕС‡РёСЃС‚РёС‚СЊ РєРѕСЂР·РёРЅСѓ РёР»Рё РїРµСЂРµР№С‚Рё Рє РѕС„РѕСЂРјР»РµРЅРёСЋ Р·Р°РєР°Р·Р°.
 * РСЃРїРѕР»СЊР·СѓРµС‚ Firebase Firestore РґР»СЏ Р·Р°РіСЂСѓР·РєРё РґР°РЅРЅС‹С… Рё FirestoreRecyclerAdapter РґР»СЏ РґРёРЅР°РјРёС‡РµСЃРєРѕРіРѕ
 * РѕР±РЅРѕРІР»РµРЅРёСЏ СЃРїРёСЃРєР° С‚РѕРІР°СЂРѕРІ.
 */
public class CartActivity extends Fragment {
    private RecyclerView cartRecyclerView;
    private CartAdapter cartAdapter;
    private TextView totalAmount;
    private Button clearCartButton, checkoutButton;
    private String userDocumentId, userRole;

    /**
     * РЎРѕР·РґР°РµС‚ Рё РІРѕР·РІСЂР°С‰Р°РµС‚ РїСЂРµРґСЃС‚Р°РІР»РµРЅРёРµ С„СЂР°РіРјРµРЅС‚Р° РєРѕСЂР·РёРЅС‹. РРЅРёС†РёР°Р»РёР·РёСЂСѓРµС‚ СЌР»РµРјРµРЅС‚С‹ UI,
     * С‚Р°РєРёРµ РєР°Рє RecyclerView РґР»СЏ СЃРїРёСЃРєР° С‚РѕРІР°СЂРѕРІ, С‚РµРєСЃС‚РѕРІРѕРµ РїРѕР»Рµ РґР»СЏ РѕР±С‰РµР№ СЃСѓРјРјС‹ Рё РєРЅРѕРїРєРё
     * РґР»СЏ РѕС‡РёСЃС‚РєРё РєРѕСЂР·РёРЅС‹ Рё РїРµСЂРµС…РѕРґР° Рє РѕС„РѕСЂРјР»РµРЅРёСЋ Р·Р°РєР°Р·Р°. РЈСЃС‚Р°РЅР°РІР»РёРІР°РµС‚ РѕР±СЂР°Р±РѕС‚С‡РёРєРё СЃРѕР±С‹С‚РёР№
     * РґР»СЏ РєРЅРѕРїРѕРє Рё РёР·РІР»РµРєР°РµС‚ РґР°РЅРЅС‹Рµ РїРѕР»СЊР·РѕРІР°С‚РµР»СЏ РёР· Р°СЂРіСѓРјРµРЅС‚РѕРІ С„СЂР°РіРјРµРЅС‚Р°.
     */
    @Override
    public View onCreateView(@NonNull LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
        View view = inflater.inflate(R.layout.cart_layout, container, false);
        cartRecyclerView = view.findViewById(R.id.cartRecyclerView);
        totalAmount = view.findViewById(R.id.totalAmount);
        clearCartButton = view.findViewById(R.id.clearCartButton);
        checkoutButton = view.findViewById(R.id.checkoutButton);
        cartRecyclerView.setLayoutManager(new LinearLayoutManager(getContext()));
        if (getArguments() != null) {
            userDocumentId = getArguments().getString("USER_DOCUMENT_ID");
            userRole = getArguments().getString("USER_ROLE");
        } else {
            Toast.makeText(getContext(), "РќРµ СѓРґР°Р»РѕСЃСЊ Р·Р°РіСЂСѓР·РёС‚СЊ РєРѕСЂР·РёРЅСѓ", Toast.LENGTH_SHORT).show();
        }
        clearCartButton.setOnClickListener(v -> clearCart());
        checkoutButton.setOnClickListener(v -> {
            Bundle bundle = new Bundle();
            bundle.putString("USER_DOCUMENT_ID", userDocumentId);
            bundle.putString("USER_ROLE", userRole);
            OrderActivity checkoutFragment = new OrderActivity();
            checkoutFragment.setArguments(bundle);
            getParentFragmentManager().beginTransaction()
                    .replace(R.id.frameLayout, checkoutFragment)
                    .addToBackStack(null)
                    .commit();
        });
        return view;
    }

    /**
     * Р’С‹Р·С‹РІР°РµС‚СЃСЏ РїРѕСЃР»Рµ СЃРѕР·РґР°РЅРёСЏ Р°РєС‚РёРІРЅРѕСЃС‚Рё, СЃРѕРґРµСЂР¶Р°С‰РµР№ С„СЂР°РіРјРµРЅС‚. РРЅРёС†РёРёСЂСѓРµС‚ Р·Р°РіСЂСѓР·РєСѓ РґР°РЅРЅС‹С…
     * РєРѕСЂР·РёРЅС‹ РїРѕР»СЊР·РѕРІР°С‚РµР»СЏ С‡РµСЂРµР· РІС‹Р·РѕРІ РјРµС‚РѕРґР° loadCarts().
     */
    @Override
    public void onActivityCreated(@Nullable Bundle savedInstanceState) {
        super.onActivityCreated(savedInstanceState);
        loadCarts();
    }

    /**
     * Р—Р°РіСЂСѓР¶Р°РµС‚ РґР°РЅРЅС‹Рµ РєРѕСЂР·РёРЅС‹ РїРѕР»СЊР·РѕРІР°С‚РµР»СЏ РёР· Firebase Firestore. РЎРѕР·РґР°РµС‚ Р·Р°РїСЂРѕСЃ РґР»СЏ РїРѕР»СѓС‡РµРЅРёСЏ
     * С‚РѕРІР°СЂРѕРІ, СЃРІСЏР·Р°РЅРЅС‹С… СЃ С‚РµРєСѓС‰РёРј РїРѕР»СЊР·РѕРІР°С‚РµР»РµРј, Рё РЅР°СЃС‚СЂР°РёРІР°РµС‚ FirestoreRecyclerAdapter РґР»СЏ
     * РѕС‚РѕР±СЂР°Р¶РµРЅРёСЏ СЃРїРёСЃРєР° С‚РѕРІР°СЂРѕРІ РІ RecyclerView. РўР°РєР¶Рµ РѕР±РЅРѕРІР»СЏРµС‚ РѕР±С‰СѓСЋ СЃСѓРјРјСѓ РєРѕСЂР·РёРЅС‹ РІ СЂРµР°Р»СЊРЅРѕРј
     * РІСЂРµРјРµРЅРё Рё СѓРїСЂР°РІР»СЏРµС‚ СЃРѕСЃС‚РѕСЏРЅРёРµРј РєРЅРѕРїРєРё РѕС„РѕСЂРјР»РµРЅРёСЏ Р·Р°РєР°Р·Р° РІ Р·Р°РІРёСЃРёРјРѕСЃС‚Рё РѕС‚ РЅР°Р»РёС‡РёСЏ С‚РѕРІР°СЂРѕРІ.
     */
    private void loadCarts() {
        if (userDocumentId != null) {
            Query query = FirebaseFirestore.getInstance().collection("cart")
                    .whereEqualTo("userId", userDocumentId);
            FirestoreRecyclerOptions<Cart> options = new FirestoreRecyclerOptions.Builder<Cart>()
                    .setQuery(query, Cart.class)
                    .build();
            cartAdapter = new CartAdapter(options);
            cartRecyclerView.setAdapter(cartAdapter);
            cartAdapter.startListening();
            query.addSnapshotListener((value, error) -> {
                if (error != null) {
                    return;
                }
                if (value != null) {
                    int total = 0;
                    boolean isEmpty = value.isEmpty();
                    for (DocumentSnapshot document : value.getDocuments()) {
                        Cart cart = document.toObject(Cart.class);
                        if (cart != null) {
                            int price = cart.getPrice();
                            int quantity = cart.getQuantity();
                            total += price * quantity;
                        }
                    }
                    totalAmount.setText("РС‚РѕРіРѕ: " + total + " в‚Ѕ");
                    if (isAdded() && getContext() != null) {
                        if (isEmpty) {
                            checkoutButton.setEnabled(false);
                            checkoutButton.setBackgroundColor(getResources().getColor(R.color.light_gray));
                        } else {
                            checkoutButton.setEnabled(true);
                            checkoutButton.setBackgroundColor(getResources().getColor(R.color.highlight_color));
                        }
                    }
                }
            });
        } else {
            if (isAdded() && getContext() != null) {
                Toast.makeText(getContext(), "РќРµ СѓРґР°Р»РѕСЃСЊ Р·Р°РіСЂСѓР·РёС‚СЊ РєРѕСЂР·РёРЅСѓ", Toast.LENGTH_SHORT).show();
            }
        }
    }

    /**
     * РћС‡РёС‰Р°РµС‚ РєРѕСЂР·РёРЅСѓ РїРѕР»СЊР·РѕРІР°С‚РµР»СЏ, СѓРґР°Р»СЏСЏ РІСЃРµ СЃРІСЏР·Р°РЅРЅС‹Рµ Р·Р°РїРёСЃРё РёР· РєРѕР»Р»РµРєС†РёРё "cart" РІ Firebase Firestore.
     * Р’С‹РїРѕР»РЅСЏРµС‚ Р·Р°РїСЂРѕСЃ РЅР° СѓРґР°Р»РµРЅРёРµ РІСЃРµС… РґРѕРєСѓРјРµРЅС‚РѕРІ, СЃРѕРѕС‚РІРµС‚СЃС‚РІСѓСЋС‰РёС… С‚РµРєСѓС‰РµРјСѓ РїРѕР»СЊР·РѕРІР°С‚РµР»СЋ, Рё РѕС‚РѕР±СЂР°Р¶Р°РµС‚
     * СЃРѕРѕР±С‰РµРЅРёРµ РѕР± РѕС€РёР±РєРµ РІ СЃР»СѓС‡Р°Рµ РЅРµСѓРґР°С‡Рё.
     */
    private void clearCart() {
        FirebaseFirestore.getInstance().collection("cart")
                .whereEqualTo("userId", userDocumentId)
                .get()
                .addOnSuccessListener(queryDocumentSnapshots -> {
                    for (DocumentSnapshot document : queryDocumentSnapshots.getDocuments()) {
                        document.getReference().delete();
                    }
                })
                .addOnFailureListener(e -> {
                    Toast.makeText(getContext(), "РћС€РёР±РєР° РїСЂРё РѕС‡РёСЃС‚РєРµ РєРѕСЂР·РёРЅС‹", Toast.LENGTH_SHORT).show();
                });
    }

    /**
     * Р’С‹Р·С‹РІР°РµС‚СЃСЏ РїСЂРё РѕСЃС‚Р°РЅРѕРІРєРµ С„СЂР°РіРјРµРЅС‚Р°. РћСЃС‚Р°РЅР°РІР»РёРІР°РµС‚ РїСЂРѕСЃР»СѓС€РёРІР°РЅРёРµ РёР·РјРµРЅРµРЅРёР№ РІ РґР°РЅРЅС‹С… РєРѕСЂР·РёРЅС‹
     * С‡РµСЂРµР· FirestoreRecyclerAdapter, С‡С‚РѕР±С‹ РёР·Р±РµР¶Р°С‚СЊ СѓС‚РµС‡РµРє РїР°РјСЏС‚Рё.
     */
    @Override
    public void onStop() {
        super.onStop();
        if (cartAdapter != null) {
            cartAdapter.stopListening();
        }
    }
}

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\java\com\example\ozon\CartAdapter.java
package com.example.ozon;

import android.content.Context;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.util.Base64;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import android.widget.Toast;
import androidx.annotation.NonNull;
import androidx.recyclerview.widget.RecyclerView;
import com.firebase.ui.firestore.FirestoreRecyclerAdapter;
import com.firebase.ui.firestore.FirestoreRecyclerOptions;
import com.google.firebase.firestore.FirebaseFirestore;

/**
 * РљР»Р°СЃСЃ CartAdapter СЏРІР»СЏРµС‚СЃСЏ Р°РґР°РїС‚РµСЂРѕРј РґР»СЏ РѕС‚РѕР±СЂР°Р¶РµРЅРёСЏ СЃРїРёСЃРєР° С‚РѕРІР°СЂРѕРІ РІ РєРѕСЂР·РёРЅРµ РїРѕР»СЊР·РѕРІР°С‚РµР»СЏ
 * РІ РїСЂРёР»РѕР¶РµРЅРёРё "OZON". РСЃРїРѕР»СЊР·СѓРµС‚ FirestoreRecyclerAdapter РґР»СЏ РґРёРЅР°РјРёС‡РµСЃРєРѕРіРѕ
 * РѕР±РЅРѕРІР»РµРЅРёСЏ РґР°РЅРЅС‹С… РёР· Firebase Firestore. РџСЂРµРґРѕСЃС‚Р°РІР»СЏРµС‚ С„СѓРЅРєС†РёРѕРЅР°Р» РґР»СЏ РёР·РјРµРЅРµРЅРёСЏ РєРѕР»РёС‡РµСЃС‚РІР°
 * С‚РѕРІР°СЂРѕРІ, СѓРґР°Р»РµРЅРёСЏ С‚РѕРІР°СЂРѕРІ РёР· РєРѕСЂР·РёРЅС‹ Рё РѕС‚РѕР±СЂР°Р¶РµРЅРёСЏ РёС… РёР·РѕР±СЂР°Р¶РµРЅРёР№ РІ С„РѕСЂРјР°С‚Рµ Base64.
 */
public class CartAdapter extends FirestoreRecyclerAdapter<Cart, CartAdapter.CartViewHolder> {

    /**
     * РљРѕРЅСЃС‚СЂСѓРєС‚РѕСЂ Р°РґР°РїС‚РµСЂР° CartAdapter. РРЅРёС†РёР°Р»РёР·РёСЂСѓРµС‚ Р°РґР°РїС‚РµСЂ СЃ Р·Р°РґР°РЅРЅС‹РјРё РїР°СЂР°РјРµС‚СЂР°РјРё Р·Р°РїСЂРѕСЃР°
     * РґР»СЏ РїРѕР»СѓС‡РµРЅРёСЏ РґР°РЅРЅС‹С… Рѕ С‚РѕРІР°СЂР°С… РІ РєРѕСЂР·РёРЅРµ РёР· Firebase Firestore.
     */
    public CartAdapter(@NonNull FirestoreRecyclerOptions<Cart> options) {
        super(options);
    }

    /**
     * РЎРІСЏР·С‹РІР°РµС‚ РґР°РЅРЅС‹Рµ Рѕ С‚РѕРІР°СЂРµ РёР· РєРѕСЂР·РёРЅС‹ СЃ СЌР»РµРјРµРЅС‚Р°РјРё РїСЂРµРґСЃС‚Р°РІР»РµРЅРёСЏ РІ ViewHolder.
     * РЈСЃС‚Р°РЅР°РІР»РёРІР°РµС‚ РЅР°Р·РІР°РЅРёРµ, С†РµРЅСѓ, РєРѕР»РёС‡РµСЃС‚РІРѕ Рё РёР·РѕР±СЂР°Р¶РµРЅРёРµ С‚РѕРІР°СЂР°. РќР°СЃС‚СЂР°РёРІР°РµС‚ РѕР±СЂР°Р±РѕС‚С‡РёРєРё
     * СЃРѕР±С‹С‚РёР№ РґР»СЏ РєРЅРѕРїРѕРє СѓРІРµР»РёС‡РµРЅРёСЏ/СѓРјРµРЅСЊС€РµРЅРёСЏ РєРѕР»РёС‡РµСЃС‚РІР° Рё СѓРґР°Р»РµРЅРёСЏ С‚РѕРІР°СЂР° РёР· РєРѕСЂР·РёРЅС‹.
     */
    @Override
    protected void onBindViewHolder(@NonNull CartViewHolder holder, int position, @NonNull Cart cart) {
        holder.productName.setText(cart.getName());
        holder.productPrice.setText(String.valueOf(cart.getPrice()) + " в‚Ѕ");
        holder.productQuantity.setText("" + cart.getQuantity());
        if (cart.getImageBase64() != null && !cart.getImageBase64().isEmpty()) {
            Bitmap bitmap = base64ToBitmap(cart.getImageBase64());
            if (bitmap != null) {
                holder.productImage.setImageBitmap(bitmap);
            } else {
                holder.productImage.setImageResource(R.drawable.no_photo);
            }
        } else {
            holder.productImage.setImageResource(R.drawable.no_photo);
        }
        holder.increaseQuantity.setOnClickListener(v -> {
            int newQuantity = cart.getQuantity() + 1;
            updateQuantity(cart.getDocumentId(), newQuantity, holder.itemView.getContext());
        });
        holder.decreaseQuantity.setOnClickListener(v -> {
            int newQuantity = cart.getQuantity() - 1;
            if (newQuantity > 0) {
                updateQuantity(cart.getDocumentId(), newQuantity, holder.itemView.getContext());
            } else {
                deleteCartItem(cart.getDocumentId(), holder.itemView.getContext());
            }
        });
        holder.deleteItemButton.setOnClickListener(v -> {
            deleteCartItem(cart.getDocumentId(), holder.itemView.getContext());
        });
    }

    /**
     * РћР±РЅРѕРІР»СЏРµС‚ РєРѕР»РёС‡РµСЃС‚РІРѕ С‚РѕРІР°СЂР° РІ РєРѕСЂР·РёРЅРµ РІ Р±Р°Р·Рµ РґР°РЅРЅС‹С… Firebase Firestore. РџСЂРѕРІРµСЂСЏРµС‚
     * РґРѕСЃС‚СѓРїРЅРѕРµ РєРѕР»РёС‡РµСЃС‚РІРѕ С‚РѕРІР°СЂР° РЅР° СЃРєР»Р°РґРµ РїРµСЂРµРґ РѕР±РЅРѕРІР»РµРЅРёРµРј. Р•СЃР»Рё С‚РѕРІР°СЂР° РЅРµРґРѕСЃС‚Р°С‚РѕС‡РЅРѕ,
     * РѕС‚РѕР±СЂР°Р¶Р°РµС‚ СЃРѕРѕР±С‰РµРЅРёРµ РѕР± РѕС€РёР±РєРµ.
     */
    private void updateQuantity(String cartItemId, int newQuantity, Context context) {
        FirebaseFirestore db = FirebaseFirestore.getInstance();
        db.collection("cart")
                .document(cartItemId)
                .get()
                .addOnSuccessListener(cartDocument -> {
                    Cart cart = cartDocument.toObject(Cart.class);
                    if (cart != null) {
                        String productId = cart.getProductId();
                        db.collection("products")
                                .document(productId)
                                .get()
                                .addOnSuccessListener(productDocument -> {
                                    if (productDocument.exists()) {
                                        int availableQuantity = productDocument.getLong("quantity").intValue();
                                        if (newQuantity <= availableQuantity) {
                                            db.collection("cart")
                                                    .document(cartItemId)
                                                    .update("quantity", newQuantity)
                                                    .addOnSuccessListener(aVoid -> {
                                                    });
                                        } else {
                                            Toast.makeText(context,
                                                    "РќРµРґРѕСЃС‚Р°С‚РѕС‡РЅРѕ С‚РѕРІР°СЂР° РЅР° СЃРєР»Р°РґРµ", Toast.LENGTH_SHORT).show();
                                        }
                                    } else {
                                        Toast.makeText(context,
                                                "РўРѕРІР°СЂ РЅРµ РЅР°Р№РґРµРЅ", Toast.LENGTH_SHORT).show();
                                    }
                                });
                    }
                });
    }

    /**
     * РЈРґР°Р»СЏРµС‚ С‚РѕРІР°СЂ РёР· РєРѕСЂР·РёРЅС‹, СѓРґР°Р»СЏСЏ СЃРѕРѕС‚РІРµС‚СЃС‚РІСѓСЋС‰РёР№ РґРѕРєСѓРјРµРЅС‚ РёР· РєРѕР»Р»РµРєС†РёРё "cart" РІ Firebase Firestore.
     * РћС‚РѕР±СЂР°Р¶Р°РµС‚ СЃРѕРѕР±С‰РµРЅРёРµ РѕР± РѕС€РёР±РєРµ РІ СЃР»СѓС‡Р°Рµ РЅРµСѓРґР°С‡Рё.
     */
    private void deleteCartItem(String documentId, Context context) {
        FirebaseFirestore.getInstance().collection("cart")
                .document(documentId)
                .delete()
                .addOnSuccessListener(aVoid -> {
                })
                .addOnFailureListener(e -> {
                    Toast.makeText(context, "РћС€РёР±РєР° РїСЂРё СѓРґР°Р»РµРЅРёРё С‚РѕРІР°СЂР°", Toast.LENGTH_SHORT).show();
                });
    }

    /**
     * РџСЂРµРѕР±СЂР°Р·СѓРµС‚ СЃС‚СЂРѕРєСѓ РІ С„РѕСЂРјР°С‚Рµ Base64 РІ РѕР±СЉРµРєС‚ Bitmap РґР»СЏ РѕС‚РѕР±СЂР°Р¶РµРЅРёСЏ РёР·РѕР±СЂР°Р¶РµРЅРёСЏ С‚РѕРІР°СЂР°.
     * Р’РѕР·РІСЂР°С‰Р°РµС‚ null РІ СЃР»СѓС‡Р°Рµ РѕС€РёР±РєРё РґРµРєРѕРґРёСЂРѕРІР°РЅРёСЏ.
     */
    private Bitmap base64ToBitmap(String base64String) {
        try {
            byte[] decodedBytes = Base64.decode(base64String, Base64.DEFAULT);
            return BitmapFactory.decodeByteArray(decodedBytes, 0, decodedBytes.length);
        } catch (IllegalArgumentException e) {
            return null;
        }
    }

    /**
     * РЎРѕР·РґР°РµС‚ РЅРѕРІС‹Р№ ViewHolder РґР»СЏ СЌР»РµРјРµРЅС‚Р° СЃРїРёСЃРєР° РєРѕСЂР·РёРЅС‹. РСЃРїРѕР»СЊР·СѓРµС‚ СЂР°Р·РјРµС‚РєСѓ item_cart
     * РґР»СЏ СЃРѕР·РґР°РЅРёСЏ РїСЂРµРґСЃС‚Р°РІР»РµРЅРёСЏ РєР°Р¶РґРѕРіРѕ С‚РѕРІР°СЂР°.
     */
    @NonNull
    @Override
    public CartViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
        View view = LayoutInflater.from(parent.getContext()).inflate(R.layout.item_cart, parent, false);
        return new CartViewHolder(view);
    }

    /**
     * Р’Р»РѕР¶РµРЅРЅС‹Р№ РєР»Р°СЃСЃ CartViewHolder РїСЂРµРґСЃС‚Р°РІР»СЏРµС‚ ViewHolder РґР»СЏ СЌР»РµРјРµРЅС‚Р° СЃРїРёСЃРєР° РєРѕСЂР·РёРЅС‹.
     * РЎРѕРґРµСЂР¶РёС‚ СЃСЃС‹Р»РєРё РЅР° СЌР»РµРјРµРЅС‚С‹ UI, С‚Р°РєРёРµ РєР°Рє РЅР°Р·РІР°РЅРёРµ, С†РµРЅР°, РєРѕР»РёС‡РµСЃС‚РІРѕ, РёР·РѕР±СЂР°Р¶РµРЅРёРµ С‚РѕРІР°СЂР°
     * Рё РєРЅРѕРїРєРё РґР»СЏ СѓРїСЂР°РІР»РµРЅРёСЏ РєРѕР»РёС‡РµСЃС‚РІРѕРј Рё СѓРґР°Р»РµРЅРёСЏ С‚РѕРІР°СЂР°.
     */
    static class CartViewHolder extends RecyclerView.ViewHolder {
        TextView productName, productPrice, productQuantity;
        ImageView productImage, increaseQuantity, decreaseQuantity, deleteItemButton;

        /**
         * РљРѕРЅСЃС‚СЂСѓРєС‚РѕСЂ ViewHolder. РРЅРёС†РёР°Р»РёР·РёСЂСѓРµС‚ СЌР»РµРјРµРЅС‚С‹ UI РґР»СЏ РѕС‚РѕР±СЂР°Р¶РµРЅРёСЏ РґР°РЅРЅС‹С… Рѕ С‚РѕРІР°СЂРµ
         * РІ РєРѕСЂР·РёРЅРµ, РІРєР»СЋС‡Р°СЏ С‚РµРєСЃС‚РѕРІС‹Рµ РїРѕР»СЏ Рё РєРЅРѕРїРєРё СѓРїСЂР°РІР»РµРЅРёСЏ.
         */
        public CartViewHolder(@NonNull View itemView) {
            super(itemView);
            productName = itemView.findViewById(R.id.productName);
            productPrice = itemView.findViewById(R.id.productPrice);
            productQuantity = itemView.findViewById(R.id.productQuantity);
            productImage = itemView.findViewById(R.id.productImage);
            increaseQuantity = itemView.findViewById(R.id.increaseQuantity);
            decreaseQuantity = itemView.findViewById(R.id.decreaseQuantity);
            deleteItemButton = itemView.findViewById(R.id.deleteItemButton);
        }
    }
}

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\java\com\example\ozon\CatalogActivity.java
package com.example.ozon;

import android.app.AlertDialog;
import android.content.Context;
import android.os.Bundle;
import android.text.Editable;
import android.text.TextWatcher;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.view.inputmethod.EditorInfo;
import android.view.inputmethod.InputMethodManager;
import android.widget.ArrayAdapter;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.EditText;
import android.widget.SeekBar;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.fragment.app.Fragment;
import androidx.fragment.app.FragmentManager;
import androidx.fragment.app.FragmentTransaction;
import androidx.recyclerview.widget.GridLayoutManager;
import androidx.recyclerview.widget.RecyclerView;
import com.google.android.material.button.MaterialButton;
import com.google.firebase.firestore.DocumentSnapshot;
import com.google.firebase.firestore.FirebaseFirestore;
import com.google.firebase.firestore.Query;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

/**
 * РљР»Р°СЃСЃ CatalogActivity РїСЂРµРґСЃС‚Р°РІР»СЏРµС‚ СЃРѕР±РѕР№ С„СЂР°РіРјРµРЅС‚ РґР»СЏ РѕС‚РѕР±СЂР°Р¶РµРЅРёСЏ РєР°С‚Р°Р»РѕРіР° С‚РѕРІР°СЂРѕРІ
 * РІ РїСЂРёР»РѕР¶РµРЅРёРё "OZON". РџСЂРµРґРѕСЃС‚Р°РІР»СЏРµС‚ С„СѓРЅРєС†РёРѕРЅР°Р» РїРѕРёСЃРєР°, С„РёР»СЊС‚СЂР°С†РёРё
 * С‚РѕРІР°СЂРѕРІ РїРѕ РєР°С‚РµРіРѕСЂРёРё, С†РµРЅРµ Рё РїРѕРїСѓР»СЏСЂРЅРѕСЃС‚Рё, Р° С‚Р°РєР¶Рµ РїРµСЂРµС…РѕРґ Рє РґРµС‚Р°Р»СЊРЅРѕР№ РёРЅС„РѕСЂРјР°С†РёРё
 * Рѕ С‚РѕРІР°СЂРµ. РСЃРїРѕР»СЊР·СѓРµС‚ Firebase Firestore РґР»СЏ Р·Р°РіСЂСѓР·РєРё РґР°РЅРЅС‹С… Рѕ С‚РѕРІР°СЂР°С….
 */
public class CatalogActivity extends Fragment {
    private static final String TAG = "CatalogActivity";
    private RecyclerView recyclerView;
    private ProductAdapter productAdapter;
    private FirebaseFirestore db;
    private EditText searchBar;
    private MaterialButton searchButton;
    private MaterialButton filterButton;
    private String selectedCategory = "";
    private int maxPrice = 1000000;
    private int currentPrice;
    private boolean filterByPopularity = false;
    private String userDocumentId;
    private String userRole;
    private TextView emptyView;

    /**
     * РЎРѕР·РґР°РµС‚ Рё РІРѕР·РІСЂР°С‰Р°РµС‚ РїСЂРµРґСЃС‚Р°РІР»РµРЅРёРµ С„СЂР°РіРјРµРЅС‚Р° РєР°С‚Р°Р»РѕРіР°. РРЅРёС†РёР°Р»РёР·РёСЂСѓРµС‚ СЌР»РµРјРµРЅС‚С‹ UI,
     * С‚Р°РєРёРµ РєР°Рє RecyclerView РґР»СЏ СЃРїРёСЃРєР° С‚РѕРІР°СЂРѕРІ, РїРѕР»Рµ РїРѕРёСЃРєР° Рё РєРЅРѕРїРєРё С„РёР»СЊС‚СЂР°С†РёРё.
     * РР·РІР»РµРєР°РµС‚ РґР°РЅРЅС‹Рµ РїРѕР»СЊР·РѕРІР°С‚РµР»СЏ РёР· Р°СЂРіСѓРјРµРЅС‚РѕРІ С„СЂР°РіРјРµРЅС‚Р°, РЅР°СЃС‚СЂР°РёРІР°РµС‚ Р°РґР°РїС‚РµСЂ РґР»СЏ
     * РѕС‚РѕР±СЂР°Р¶РµРЅРёСЏ С‚РѕРІР°СЂРѕРІ Рё Р·Р°РіСЂСѓР¶Р°РµС‚ РјР°РєСЃРёРјР°Р»СЊРЅСѓСЋ С†РµРЅСѓ РёР· Р±Р°Р·С‹ РґР°РЅРЅС‹С… РґР»СЏ РЅР°СЃС‚СЂРѕР№РєРё С„РёР»СЊС‚СЂРѕРІ.
     */
    @Override
    public View onCreateView(@NonNull LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
        View view = inflater.inflate(R.layout.catalog_layout, container, false);
        db = FirebaseFirestore.getInstance();
        searchBar = view.findViewById(R.id.searchBar);
        searchButton = view.findViewById(R.id.searchButton);
        filterButton = view.findViewById(R.id.filterButton);
        recyclerView = view.findViewById(R.id.recyclerView);
        emptyView = view.findViewById(R.id.emptyView);
        Bundle bundle = getArguments();
        if (bundle != null) {
            userDocumentId = bundle.getString("USER_DOCUMENT_ID");
            userRole = bundle.getString("USER_ROLE");
        }
        productAdapter = new ProductAdapter(product -> {
            openProductDetail(product.getId(), userDocumentId);
        }, userDocumentId, userRole);
        recyclerView.setLayoutManager(new GridLayoutManager(getContext(), 2));
        recyclerView.setAdapter(productAdapter);
        loadMaxPriceFromDB(() -> {
            currentPrice = maxPrice;
            performSearch("");
        });
        setupSearch();
        setupFilters();
        return view;
    }

    /**
     * РќР°СЃС‚СЂР°РёРІР°РµС‚ С„СѓРЅРєС†РёРѕРЅР°Р» РїРѕРёСЃРєР° С‚РѕРІР°СЂРѕРІ. РЈСЃС‚Р°РЅР°РІР»РёРІР°РµС‚ СЃР»СѓС€Р°С‚РµР»Рё РґР»СЏ РїРѕР»СЏ РїРѕРёСЃРєР°,
     * РєРЅРѕРїРєРё РїРѕРёСЃРєР° Рё РґРµР№СЃС‚РІРёСЏ РєР»Р°РІРёР°С‚СѓСЂС‹, С‡С‚РѕР±С‹ РёРЅРёС†РёРёСЂРѕРІР°С‚СЊ РїРѕРёСЃРє РїСЂРё РІРІРѕРґРµ С‚РµРєСЃС‚Р°
     * РёР»Рё РЅР°Р¶Р°С‚РёРё РЅР° РєРЅРѕРїРєСѓ.
     */
    private void setupSearch() {
        searchBar.addTextChangedListener(new TextWatcher() {
            @Override
            public void beforeTextChanged(CharSequence s, int start, int count, int after) {}
            @Override
            public void onTextChanged(CharSequence s, int start, int before, int count) {
                performSearch(s.toString());
            }
            @Override
            public void afterTextChanged(Editable s) {}
        });
        searchButton.setOnClickListener(v -> {
            performSearch(searchBar.getText().toString());
            hideKeyboard();
        });
        searchBar.setOnEditorActionListener((v, actionId, event) -> {
            if (actionId == EditorInfo.IME_ACTION_SEARCH) {
                performSearch(searchBar.getText().toString());
                hideKeyboard();
                return true;
            }
            return false;
        });
    }

    /**
     * РЎРєСЂС‹РІР°РµС‚ СЌРєСЂР°РЅРЅСѓСЋ РєР»Р°РІРёР°С‚СѓСЂСѓ РїРѕСЃР»Рµ РІС‹РїРѕР»РЅРµРЅРёСЏ РїРѕРёСЃРєР°.
     */
    private void hideKeyboard() {
        InputMethodManager imm = (InputMethodManager) getActivity().getSystemService(Context.INPUT_METHOD_SERVICE);
        imm.hideSoftInputFromWindow(searchBar.getWindowToken(), 0);
    }

    /**
     * РќР°СЃС‚СЂР°РёРІР°РµС‚ С„СѓРЅРєС†РёРѕРЅР°Р» С„РёР»СЊС‚СЂР°С†РёРё С‚РѕРІР°СЂРѕРІ. РЈСЃС‚Р°РЅР°РІР»РёРІР°РµС‚ РѕР±СЂР°Р±РѕС‚С‡РёРє СЃРѕР±С‹С‚РёСЏ
     * РґР»СЏ РєРЅРѕРїРєРё С„РёР»СЊС‚СЂРѕРІ, РєРѕС‚РѕСЂС‹Р№ РѕС‚РєСЂС‹РІР°РµС‚ РґРёР°Р»РѕРіРѕРІРѕРµ РѕРєРЅРѕ СЃ РїР°СЂР°РјРµС‚СЂР°РјРё С„РёР»СЊС‚СЂР°С†РёРё.
     */
    private void setupFilters() {
        filterButton.setOnClickListener(v -> showFiltersDialog());
    }

    /**
     * Р’С‹РїРѕР»РЅСЏРµС‚ РїРѕРёСЃРє С‚РѕРІР°СЂРѕРІ РЅР° РѕСЃРЅРѕРІРµ РІРІРµРґРµРЅРЅРѕРіРѕ Р·Р°РїСЂРѕСЃР° СЃ СѓС‡РµС‚РѕРј С‚РµРєСѓС‰РёС… С„РёР»СЊС‚СЂРѕРІ
     * (РєР°С‚РµРіРѕСЂРёСЏ, РјР°РєСЃРёРјР°Р»СЊРЅР°СЏ С†РµРЅР°, СЃРѕСЂС‚РёСЂРѕРІРєР° РїРѕ РїРѕРїСѓР»СЏСЂРЅРѕСЃС‚Рё).
     */
    private void performSearch(String query) {
        setupRecyclerView(query, selectedCategory, currentPrice, filterByPopularity);
    }

    /**
     * Р—Р°РіСЂСѓР¶Р°РµС‚ РјР°РєСЃРёРјР°Р»СЊРЅСѓСЋ С†РµРЅСѓ С‚РѕРІР°СЂР° РёР· Р±Р°Р·С‹ РґР°РЅРЅС‹С… Firebase Firestore РґР»СЏ РЅР°СЃС‚СЂРѕР№РєРё
     * РґРёР°РїР°Р·РѕРЅР° С†РµРЅ РІ С„РёР»СЊС‚СЂР°С…. РџРѕСЃР»Рµ Р·Р°РіСЂСѓР·РєРё РІС‹РїРѕР»РЅСЏРµС‚ РїРµСЂРµРґР°РЅРЅС‹Р№ callback.
     */
    private void loadMaxPriceFromDB(Runnable onComplete) {
        db.collection("products").orderBy("price", Query.Direction.DESCENDING).limit(1)
                .get()
                .addOnSuccessListener(queryDocumentSnapshots -> {
                    if (!queryDocumentSnapshots.isEmpty()) {
                        DocumentSnapshot document = queryDocumentSnapshots.getDocuments().get(0);
                        maxPrice = document.getLong("price").intValue();
                    }
                    onComplete.run();
                })
                .addOnFailureListener(e -> {
                    onComplete.run();
                });
    }

    /**
     * РћС‚РѕР±СЂР°Р¶Р°РµС‚ РґРёР°Р»РѕРіРѕРІРѕРµ РѕРєРЅРѕ РґР»СЏ РЅР°СЃС‚СЂРѕР№РєРё С„РёР»СЊС‚СЂРѕРІ. РџРѕР·РІРѕР»СЏРµС‚ РІС‹Р±СЂР°С‚СЊ РєР°С‚РµРіРѕСЂРёСЋ,
     * РјР°РєСЃРёРјР°Р»СЊРЅСѓСЋ С†РµРЅСѓ Рё СЃРѕСЂС‚РёСЂРѕРІРєСѓ РїРѕ РїРѕРїСѓР»СЏСЂРЅРѕСЃС‚Рё. РџСЂРёРјРµРЅСЏРµС‚ РёР»Рё СЃР±СЂР°СЃС‹РІР°РµС‚ С„РёР»СЊС‚СЂС‹
     * РїРѕ РЅР°Р¶Р°С‚РёСЋ СЃРѕРѕС‚РІРµС‚СЃС‚РІСѓСЋС‰РёС… РєРЅРѕРїРѕРє.
     */
    private void showFiltersDialog() {
        AlertDialog.Builder builder = new AlertDialog.Builder(getContext());
        View dialogView = LayoutInflater.from(getContext()).inflate(R.layout.filters_dialog, null);
        builder.setView(dialogView);
        AlertDialog dialog = builder.create();
        SeekBar priceSeekBar = dialogView.findViewById(R.id.priceSeekBar);
        TextView priceRangeText = dialogView.findViewById(R.id.priceRangeText);
        Spinner categorySpinner = dialogView.findViewById(R.id.categorySpinner);
        CheckBox popularityCheckBox = dialogView.findViewById(R.id.popularityCheckBox);
        Button applyFiltersButton = dialogView.findViewById(R.id.applyFiltersButton);
        Button resetFiltersButton = dialogView.findViewById(R.id.resetFiltersButton);
        priceSeekBar.setMax(maxPrice);
        priceSeekBar.setProgress(currentPrice);
        priceRangeText.setText(currentPrice + " в‚Ѕ");
        popularityCheckBox.setChecked(filterByPopularity);
        loadCategories(categorySpinner, selectedCategory);
        priceSeekBar.setOnSeekBarChangeListener(new SeekBar.OnSeekBarChangeListener() {
            @Override
            public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {
                currentPrice = progress;
                priceRangeText.setText(currentPrice + " в‚Ѕ");
            }
            @Override public void onStartTrackingTouch(SeekBar seekBar) {}
            @Override public void onStopTrackingTouch(SeekBar seekBar) {}
        });
        applyFiltersButton.setOnClickListener(v -> {
            selectedCategory = categorySpinner.getSelectedItem().toString();
            filterByPopularity = popularityCheckBox.isChecked();
            performSearch(searchBar.getText().toString());
            dialog.dismiss();
        });
        resetFiltersButton.setOnClickListener(v -> {
            selectedCategory = "";
            filterByPopularity = false;
            currentPrice = maxPrice;
            priceSeekBar.setProgress(maxPrice);
            priceRangeText.setText(maxPrice + " в‚Ѕ");
            categorySpinner.setSelection(0);
            popularityCheckBox.setChecked(false);
            performSearch(searchBar.getText().toString());
        });
        dialog.show();
    }

    /**
     * Р—Р°РіСЂСѓР¶Р°РµС‚ СЃРїРёСЃРѕРє РєР°С‚РµРіРѕСЂРёР№ С‚РѕРІР°СЂРѕРІ РёР· Firebase Firestore Рё Р·Р°РїРѕР»РЅСЏРµС‚ РІС‹РїР°РґР°СЋС‰РёР№ СЃРїРёСЃРѕРє
     * (Spinner) РІ РґРёР°Р»РѕРіРѕРІРѕРј РѕРєРЅРµ С„РёР»СЊС‚СЂРѕРІ. РЈСЃС‚Р°РЅР°РІР»РёРІР°РµС‚ РІС‹Р±СЂР°РЅРЅСѓСЋ РєР°С‚РµРіРѕСЂРёСЋ, РµСЃР»Рё РѕРЅР° Р±С‹Р»Р°
     * Р·Р°РґР°РЅР° СЂР°РЅРµРµ.
     */
    private void loadCategories(Spinner categorySpinner, String selectedCategory) {
        List<String> categories = new ArrayList<>();
        categories.add("Р’СЃРµ РєР°С‚РµРіРѕСЂРёРё");
        db.collection("products")
                .get()
                .addOnSuccessListener(queryDocumentSnapshots -> {
                    Set<String> uniqueCategories = new HashSet<>();
                    for (DocumentSnapshot document : queryDocumentSnapshots) {
                        String productType = document.getString("productType");
                        if (productType != null && !productType.isEmpty()) {
                            uniqueCategories.add(productType);
                        }
                    }
                    categories.addAll(uniqueCategories);
                    ArrayAdapter<String> adapter = new ArrayAdapter<>(
                            getContext(),
                            android.R.layout.simple_spinner_item,
                            categories
                    );
                    adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
                    categorySpinner.setAdapter(adapter);
                    if (!selectedCategory.isEmpty()) {
                        int position = categories.indexOf(selectedCategory);
                        if (position >= 0) {
                            categorySpinner.setSelection(position);
                        }
                    }
                });
    }

    /**
     * РќР°СЃС‚СЂР°РёРІР°РµС‚ RecyclerView РґР»СЏ РѕС‚РѕР±СЂР°Р¶РµРЅРёСЏ СЃРїРёСЃРєР° С‚РѕРІР°СЂРѕРІ СЃ СѓС‡РµС‚РѕРј Р·Р°РґР°РЅРЅС‹С… С„РёР»СЊС‚СЂРѕРІ.
     * Р¤РѕСЂРјРёСЂСѓРµС‚ Р·Р°РїСЂРѕСЃ Рє Firebase Firestore СЃ СѓС‡РµС‚РѕРј РїРѕРёСЃРєРѕРІРѕРіРѕ Р·Р°РїСЂРѕСЃР°, РєР°С‚РµРіРѕСЂРёРё, РјР°РєСЃРёРјР°Р»СЊРЅРѕР№
     * С†РµРЅС‹ Рё СЃРѕСЂС‚РёСЂРѕРІРєРё РїРѕ РїРѕРїСѓР»СЏСЂРЅРѕСЃС‚Рё. РћР±РЅРѕРІР»СЏРµС‚ РґР°РЅРЅС‹Рµ РІ Р°РґР°РїС‚РµСЂРµ Рё СѓРїСЂР°РІР»СЏРµС‚ РІРёРґРёРјРѕСЃС‚СЊСЋ
     * СЃРїРёСЃРєР° Рё СЃРѕРѕР±С‰РµРЅРёСЏ Рѕ РїСѓСЃС‚РѕРј СЂРµР·СѓР»СЊС‚Р°С‚Рµ.
     */
    private void setupRecyclerView(String searchText, String selectedCategory,
                                   int maxPrice,
                                   boolean filterByPopularity) {
        Query query = db.collection("products");
        if (maxPrice > 0) {
            query = query.whereLessThanOrEqualTo("price", maxPrice);
        }
        if (!searchText.isEmpty()) {
            query = query.whereGreaterThanOrEqualTo("name", searchText)
                    .whereLessThanOrEqualTo("name", searchText + "\uf8ff");
        }
        if (!selectedCategory.isEmpty() && !selectedCategory.equals("Р’СЃРµ РєР°С‚РµРіРѕСЂРёРё")) {
            query = query.whereEqualTo("productType", selectedCategory);
        }
        query.get().addOnSuccessListener(queryDocumentSnapshots -> {
            List<Product> products = new ArrayList<>();
            for (DocumentSnapshot document : queryDocumentSnapshots) {
                Product product = document.toObject(Product.class);
                if (product != null) {
                    product.setId(document.getId());
                    products.add(product);
                }
            }
            if (products.isEmpty()) {
                emptyView.setVisibility(View.VISIBLE);
                recyclerView.setVisibility(View.GONE);
            } else {
                emptyView.setVisibility(View.GONE);
                recyclerView.setVisibility(View.VISIBLE);
                if (filterByPopularity) {
                    fetchPopularityData(productPopularityMap -> {
                        products.sort((p1, p2) -> {
                            int popularity1 = productPopularityMap.getOrDefault(p1.getName(), 0);
                            int popularity2 = productPopularityMap.getOrDefault(p2.getName(), 0);
                            return Integer.compare(popularity2, popularity1);
                        });
                        productAdapter.updateData(products, productPopularityMap);
                    });
                } else {
                    productAdapter.updateData(products, null);
                }
            }
        });
    }

    /**
     * Р—Р°РіСЂСѓР¶Р°РµС‚ РґР°РЅРЅС‹Рµ Рѕ РїРѕРїСѓР»СЏСЂРЅРѕСЃС‚Рё С‚РѕРІР°СЂРѕРІ РёР· РєРѕР»Р»РµРєС†РёРё Р·Р°РєР°Р·РѕРІ РІ Firebase Firestore.
     * РџРѕРґСЃС‡РёС‚С‹РІР°РµС‚ РєРѕР»РёС‡РµСЃС‚РІРѕ Р·Р°РєР°Р·Р°РЅРЅС‹С… РµРґРёРЅРёС† РєР°Р¶РґРѕРіРѕ С‚РѕРІР°СЂР° Рё РїРµСЂРµРґР°РµС‚ СЂРµР·СѓР»СЊС‚Р°С‚
     * РІ РІРёРґРµ РєР°СЂС‚С‹ С‡РµСЂРµР· callback.
     */
    private void fetchPopularityData(OnPopularityDataFetchedListener listener) {
        db.collection("orders")
                .get()
                .addOnSuccessListener(queryDocumentSnapshots -> {
                    Map<String, Integer> productPopularityMap = new HashMap<>();
                    for (DocumentSnapshot orderDocument : queryDocumentSnapshots) {
                        List<Map<String, Object>> products = (List<Map<String, Object>>) orderDocument.get("products");
                        if (products != null) {
                            for (Map<String, Object> product : products) {
                                String productName = (String) product.get("name");
                                int quantity = ((Long) product.get("quantity")).intValue();
                                productPopularityMap.put(productName, productPopularityMap.getOrDefault(productName, 0) + quantity);
                            }
                        }
                    }
                    listener.onPopularityDataFetched(productPopularityMap);
                });
    }

    /**
     * РћС‚РєСЂС‹РІР°РµС‚ С„СЂР°РіРјРµРЅС‚ СЃ РґРµС‚Р°Р»СЊРЅРѕР№ РёРЅС„РѕСЂРјР°С†РёРµР№ Рѕ РІС‹Р±СЂР°РЅРЅРѕРј С‚РѕРІР°СЂРµ. РџРµСЂРµРґР°РµС‚ РёРґРµРЅС‚РёС„РёРєР°С‚РѕСЂ
     * С‚РѕРІР°СЂР° Рё РїРѕР»СЊР·РѕРІР°С‚РµР»СЏ РІ РЅРѕРІС‹Р№ С„СЂР°РіРјРµРЅС‚ ProductDetail С‡РµСЂРµР· Bundle.
     */
    private void openProductDetail(String productId, String userDocumentId) {
        ProductDetail productDetailFragment = new ProductDetail();
        Bundle bundle = new Bundle();
        bundle.putString("productId", productId);
        bundle.putString("userDocumentId", userDocumentId);
        productDetailFragment.setArguments(bundle);
        FragmentManager fragmentManager = getParentFragmentManager();
        FragmentTransaction transaction = fragmentManager.beginTransaction();
        transaction.replace(R.id.frameLayout, productDetailFragment);
        transaction.addToBackStack(null);
        transaction.commit();
    }

    /**
     * РРЅС‚РµСЂС„РµР№СЃ OnPopularityDataFetchedListener РёСЃРїРѕР»СЊР·СѓРµС‚СЃСЏ РґР»СЏ РїРµСЂРµРґР°С‡Рё РґР°РЅРЅС‹С… Рѕ РїРѕРїСѓР»СЏСЂРЅРѕСЃС‚Рё
     * С‚РѕРІР°СЂРѕРІ РїРѕСЃР»Рµ РёС… Р·Р°РіСЂСѓР·РєРё РёР· Firebase Firestore. РћРїСЂРµРґРµР»СЏРµС‚ РјРµС‚РѕРґ РѕР±СЂР°С‚РЅРѕРіРѕ РІС‹Р·РѕРІР° РґР»СЏ
     * РѕР±СЂР°Р±РѕС‚РєРё РїРѕР»СѓС‡РµРЅРЅРѕР№ РєР°СЂС‚С‹ РїРѕРїСѓР»СЏСЂРЅРѕСЃС‚Рё.
     */
    interface OnPopularityDataFetchedListener {
        void onPopularityDataFetched(Map<String, Integer> productPopularityMap);
    }
}

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\java\com\example\ozon\CreateProductActivity.java
package com.example.ozon;

import android.content.Intent;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.net.Uri;
import android.os.Bundle;
import android.provider.MediaStore;
import android.util.Base64;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ArrayAdapter;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.Spinner;
import android.widget.Toast;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.fragment.app.Fragment;
import com.google.firebase.firestore.FirebaseFirestore;
import com.google.firebase.firestore.QueryDocumentSnapshot;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * РљР»Р°СЃСЃ CreateProductActivity РїСЂРµРґСЃС‚Р°РІР»СЏРµС‚ СЃРѕР±РѕР№ С„СЂР°РіРјРµРЅС‚ РґР»СЏ СЃРѕР·РґР°РЅРёСЏ РЅРѕРІРѕРіРѕ С‚РѕРІР°СЂР°
 * РІ РїСЂРёР»РѕР¶РµРЅРёРё "OZON". РџРѕР·РІРѕР»СЏРµС‚ РїСЂРѕРґР°РІС†Сѓ РІРІРµСЃС‚Рё РґР°РЅРЅС‹Рµ Рѕ С‚РѕРІР°СЂРµ,
 * С‚Р°РєРёРµ РєР°Рє РЅР°Р·РІР°РЅРёРµ, С†РµРЅР°, РєРѕР»РёС‡РµСЃС‚РІРѕ, РѕРїРёСЃР°РЅРёРµ, С‚РёРї Рё РёР·РѕР±СЂР°Р¶РµРЅРёРµ, Рё СЃРѕС…СЂР°РЅРёС‚СЊ РёС…
 * РІ Р±Р°Р·Рµ РґР°РЅРЅС‹С… Firebase Firestore.
 */
public class CreateProductActivity extends Fragment {
    private static final int PICK_IMAGE_REQUEST = 1;
    private EditText productNameInput, productPriceInput, productDescriptionInput, productQuantityInput;
    private ImageView productImagePreview;
    private Uri imageUri;
    private FirebaseFirestore db;
    private String userDocumentId;
    private Spinner productTypeInput;
    private ArrayAdapter<String> spinnerAdapter;
    private List<String> productTypes = new ArrayList<>();

    /**
     * РЎРѕР·РґР°РµС‚ Рё РІРѕР·РІСЂР°С‰Р°РµС‚ РїСЂРµРґСЃС‚Р°РІР»РµРЅРёРµ С„СЂР°РіРјРµРЅС‚Р° РґР»СЏ СЃРѕР·РґР°РЅРёСЏ С‚РѕРІР°СЂР°. РРЅРёС†РёР°Р»РёР·РёСЂСѓРµС‚
     * СЌР»РµРјРµРЅС‚С‹ UI, С‚Р°РєРёРµ РєР°Рє РїРѕР»СЏ РІРІРѕРґР°, РІС‹РїР°РґР°СЋС‰РёР№ СЃРїРёСЃРѕРє С‚РёРїРѕРІ С‚РѕРІР°СЂРѕРІ Рё РєРЅРѕРїРєРё РґР»СЏ
     * РІС‹Р±РѕСЂР° РёР·РѕР±СЂР°Р¶РµРЅРёСЏ Рё СЃРѕС…СЂР°РЅРµРЅРёСЏ С‚РѕРІР°СЂР°. РР·РІР»РµРєР°РµС‚ РёРґРµРЅС‚РёС„РёРєР°С‚РѕСЂ РїРѕР»СЊР·РѕРІР°С‚РµР»СЏ РёР·
     * Р°СЂРіСѓРјРµРЅС‚РѕРІ С„СЂР°РіРјРµРЅС‚Р° Рё Р·Р°РіСЂСѓР¶Р°РµС‚ РґРѕСЃС‚СѓРїРЅС‹Рµ С‚РёРїС‹ С‚РѕРІР°СЂРѕРІ РёР· Р±Р°Р·С‹ РґР°РЅРЅС‹С….
     */
    @Nullable
    @Override
    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {
        View view = inflater.inflate(R.layout.create_product_layout, container, false);
        Bundle bundle = getArguments();
        if (bundle != null) {
            userDocumentId = bundle.getString("USER_DOCUMENT_ID");
        }
        db = FirebaseFirestore.getInstance();
        productNameInput = view.findViewById(R.id.productNameInput);
        productPriceInput = view.findViewById(R.id.productPriceInput);
        productQuantityInput = view.findViewById(R.id.productQuantityInput);
        productImagePreview = view.findViewById(R.id.productImagePreview);
        productDescriptionInput = view.findViewById(R.id.productDescriptionInput);
        productTypeInput = view.findViewById(R.id.productTypeSpinner);
        Button selectImageButton = view.findViewById(R.id.selectImageButton);
        Button saveProductButton = view.findViewById(R.id.saveProductButton);
        selectImageButton.setOnClickListener(v -> openImagePicker());
        saveProductButton.setOnClickListener(v -> saveProduct());
        spinnerAdapter = new ArrayAdapter<>(requireContext(), android.R.layout.simple_spinner_item, productTypes);
        spinnerAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
        productTypeInput.setAdapter(spinnerAdapter);
        loadProductTypes();
        return view;
    }

    /**
     * Р—Р°РіСЂСѓР¶Р°РµС‚ СЃРїРёСЃРѕРє С‚РёРїРѕРІ С‚РѕРІР°СЂРѕРІ РёР· РєРѕР»Р»РµРєС†РёРё "productType" РІ Firebase Firestore
     * Рё РѕР±РЅРѕРІР»СЏРµС‚ РІС‹РїР°РґР°СЋС‰РёР№ СЃРїРёСЃРѕРє (Spinner) РґР»СЏ РІС‹Р±РѕСЂР° С‚РёРїР° С‚РѕРІР°СЂР°.
     */
    private void loadProductTypes() {
        db.collection("productType")
                .get()
                .addOnCompleteListener(task -> {
                    if (task.isSuccessful()) {
                        productTypes.clear();
                        for (QueryDocumentSnapshot document : task.getResult()) {
                            String typeName = document.getString("name");
                            if (typeName != null) {
                                productTypes.add(typeName);
                            }
                        }
                        spinnerAdapter.notifyDataSetChanged();
                    } else {
                        Toast.makeText(getContext(), "РћС€РёР±РєР° Р·Р°РіСЂСѓР·РєРё С‚РёРїРѕРІ С‚РѕРІР°СЂРѕРІ", Toast.LENGTH_SHORT).show();
                    }
                });
    }

    /**
     * РћС‚РєСЂС‹РІР°РµС‚ СЃРёСЃС‚РµРјРЅС‹Р№ РІС‹Р±РѕСЂ РёР·РѕР±СЂР°Р¶РµРЅРёСЏ РґР»СЏ Р·Р°РіСЂСѓР·РєРё С„РѕС‚РѕРіСЂР°С„РёРё С‚РѕРІР°СЂР°.
     * Р—Р°РїСѓСЃРєР°РµС‚ Intent РґР»СЏ РІС‹Р±РѕСЂР° РёР·РѕР±СЂР°Р¶РµРЅРёСЏ РёР· РіР°Р»РµСЂРµРё СѓСЃС‚СЂРѕР№СЃС‚РІР°.
     */
    private void openImagePicker() {
        Intent intent = new Intent(Intent.ACTION_PICK, MediaStore.Images.Media.EXTERNAL_CONTENT_URI);
        startActivityForResult(intent, PICK_IMAGE_REQUEST);
    }

    /**
     * РћР±СЂР°Р±Р°С‚С‹РІР°РµС‚ СЂРµР·СѓР»СЊС‚Р°С‚ РІС‹Р±РѕСЂР° РёР·РѕР±СЂР°Р¶РµРЅРёСЏ РёР· РіР°Р»РµСЂРµРё. Р•СЃР»Рё РёР·РѕР±СЂР°Р¶РµРЅРёРµ РІС‹Р±СЂР°РЅРѕ,
     * СѓСЃС‚Р°РЅР°РІР»РёРІР°РµС‚ РµРіРѕ РІ РїСЂРµРґРІР°СЂРёС‚РµР»СЊРЅС‹Р№ РїСЂРѕСЃРјРѕС‚СЂ (ImageView).
     */
    @Override
    public void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {
        super.onActivityResult(requestCode, resultCode, data);
        if (requestCode == PICK_IMAGE_REQUEST && resultCode == getActivity().RESULT_OK && data != null) {
            imageUri = data.getData();
            productImagePreview.setImageURI(imageUri);
        }
    }

    /**
     * РЎРѕС…СЂР°РЅСЏРµС‚ РґР°РЅРЅС‹Рµ Рѕ РЅРѕРІРѕРј С‚РѕРІР°СЂРµ. РџСЂРѕРІРµСЂСЏРµС‚ РІРІРµРґРµРЅРЅС‹Рµ РґР°РЅРЅС‹Рµ, РїСЂРµРѕР±СЂР°Р·СѓРµС‚ РёР·РѕР±СЂР°Р¶РµРЅРёРµ
     * РІ С„РѕСЂРјР°С‚ Base64 (РµСЃР»Рё РѕРЅРѕ РІС‹Р±СЂР°РЅРѕ) РёР»Рё РёСЃРїРѕР»СЊР·СѓРµС‚ РёР·РѕР±СЂР°Р¶РµРЅРёРµ РїРѕ СѓРјРѕР»С‡Р°РЅРёСЋ, Рё РІС‹Р·С‹РІР°РµС‚
     * РјРµС‚РѕРґ РґР»СЏ СЃРѕС…СЂР°РЅРµРЅРёСЏ С‚РѕРІР°СЂР° РІ Firebase Firestore.
     */
    private void saveProduct() {
        String name = productNameInput.getText().toString().trim();
        String price = productPriceInput.getText().toString().trim();
        String quantity = productQuantityInput.getText().toString().trim();
        String type = productTypeInput.getSelectedItem() != null ? productTypeInput.getSelectedItem().toString() : "";
        String description = productDescriptionInput.getText().toString().trim();
        String imageBase64;
        if (!validateProductInput(name, price, quantity, type, description)) {
            return;
        }
        if (imageUri == null) {
            imageBase64 = drawableToBase64(R.drawable.no_photo);
        } else {
            imageBase64 = uriToBase64(imageUri);
        }
        if (imageBase64 == null) {
            Toast.makeText(getContext(), "РћС€РёР±РєР° Р·Р°РіСЂСѓР·РєРё РёР·РѕР±СЂР°Р¶РµРЅРёСЏ", Toast.LENGTH_SHORT).show();
            return;
        }
        int priceInt = Integer.parseInt(price);
        int quantityInt = Integer.parseInt(quantity);
        saveProductToFirestore(name, priceInt, type, imageBase64, description, quantityInt);
    }

    /**
     * РџСЂРѕРІРµСЂСЏРµС‚ РєРѕСЂСЂРµРєС‚РЅРѕСЃС‚СЊ РІРІРµРґРµРЅРЅС‹С… РґР°РЅРЅС‹С… Рѕ С‚РѕРІР°СЂРµ. РЈР±РµР¶РґР°РµС‚СЃСЏ, С‡С‚Рѕ РЅР°Р·РІР°РЅРёРµ, С†РµРЅР°,
     * РєРѕР»РёС‡РµСЃС‚РІРѕ, С‚РёРї Рё РѕРїРёСЃР°РЅРёРµ СЃРѕРѕС‚РІРµС‚СЃС‚РІСѓСЋС‚ Р·Р°РґР°РЅРЅС‹Рј С‚СЂРµР±РѕРІР°РЅРёСЏРј. Р’РѕР·РІСЂР°С‰Р°РµС‚ true,
     * РµСЃР»Рё РґР°РЅРЅС‹Рµ РІР°Р»РёРґРЅС‹, РёРЅР°С‡Рµ РѕС‚РѕР±СЂР°Р¶Р°РµС‚ СЃРѕРѕР±С‰РµРЅРёРµ РѕР± РѕС€РёР±РєРµ Рё РІРѕР·РІСЂР°С‰Р°РµС‚ false.
     */
    private boolean validateProductInput(String name, String price, String quantity, String type, String description) {
        if (name.length() < 4) {
            Toast.makeText(getContext(), "РќР°Р·РІР°РЅРёРµ РґРѕР»Р¶РЅРѕ СЃРѕРґРµСЂР¶Р°С‚СЊ РјРёРЅРёРјСѓРј 4 СЃРёРјРІРѕР»Р°", Toast.LENGTH_SHORT).show();
            return false;
        }
        if (price.isEmpty()) {
            Toast.makeText(getContext(), "Р’РІРµРґРёС‚Рµ С†РµРЅСѓ", Toast.LENGTH_SHORT).show();
            return false;
        }
        try {
            int priceInt = Integer.parseInt(price);
            if (priceInt < 1) {
                Toast.makeText(getContext(), "Р¦РµРЅР° РґРѕР»Р¶РЅР° Р±С‹С‚СЊ РЅРµ РјРµРЅРµРµ 1 СЂСѓР±Р»СЏ", Toast.LENGTH_SHORT).show();
                return false;
            }
        } catch (NumberFormatException e) {
            Toast.makeText(getContext(), "Р¦РµРЅР° РґРѕР»Р¶РЅР° Р±С‹С‚СЊ С‡РёСЃР»РѕРј", Toast.LENGTH_SHORT).show();
            return false;
        }
        if (quantity.isEmpty()) {
            Toast.makeText(getContext(), "Р’РІРµРґРёС‚Рµ РєРѕР»РёС‡РµСЃС‚РІРѕ", Toast.LENGTH_SHORT).show();
            return false;
        }
        try {
            int quantityInt = Integer.parseInt(quantity);
            if (quantityInt < 1) {
                Toast.makeText(getContext(), "РљРѕР»РёС‡РµСЃС‚РІРѕ РґРѕР»Р¶РЅРѕ Р±С‹С‚СЊ РЅРµ РјРµРЅРµРµ 1 С€С‚СѓРєРё", Toast.LENGTH_SHORT).show();
                return false;
            }
        } catch (NumberFormatException e) {
            Toast.makeText(getContext(), "РљРѕР»РёС‡РµСЃС‚РІРѕ РґРѕР»Р¶РЅРѕ Р±С‹С‚СЊ С‡РёСЃР»РѕРј", Toast.LENGTH_SHORT).show();
            return false;
        }
        if (type.isEmpty() || productTypes.isEmpty()) {
            Toast.makeText(getContext(), "Р’С‹Р±РµСЂРёС‚Рµ С‚РёРї С‚РѕРІР°СЂР°", Toast.LENGTH_SHORT).show();
            return false;
        }
        if (description.length() < 10) {
            Toast.makeText(getContext(), "РћРїРёСЃР°РЅРёРµ РґРѕР»Р¶РЅРѕ СЃРѕРґРµСЂР¶Р°С‚СЊ РјРёРЅРёРјСѓРј 10 СЃРёРјРІРѕР»РѕРІ", Toast.LENGTH_SHORT).show();
            return false;
        }
        return true;
    }

    /**
     * РџСЂРµРѕР±СЂР°Р·СѓРµС‚ РёР·РѕР±СЂР°Р¶РµРЅРёРµ РёР· СЂРµСЃСѓСЂСЃР° drawable РІ СЃС‚СЂРѕРєСѓ Base64. РСЃРїРѕР»СЊР·СѓРµС‚СЃСЏ РґР»СЏ СѓСЃС‚Р°РЅРѕРІРєРё
     * РёР·РѕР±СЂР°Р¶РµРЅРёСЏ РїРѕ СѓРјРѕР»С‡Р°РЅРёСЋ, РµСЃР»Рё РїРѕР»СЊР·РѕРІР°С‚РµР»СЊ РЅРµ РІС‹Р±СЂР°Р» С„РѕС‚Рѕ.
     */
    private String drawableToBase64(int drawableResId) {
        try {
            Bitmap bitmap = BitmapFactory.decodeResource(getResources(), drawableResId);
            ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();
            bitmap.compress(Bitmap.CompressFormat.JPEG, 100, byteArrayOutputStream);
            byte[] byteArray = byteArrayOutputStream.toByteArray();
            return Base64.encodeToString(byteArray, Base64.DEFAULT);
        } catch (Exception e) {
            e.printStackTrace();
            return null;
        }
    }

    /**
     * РџСЂРµРѕР±СЂР°Р·СѓРµС‚ РёР·РѕР±СЂР°Р¶РµРЅРёРµ, РІС‹Р±СЂР°РЅРЅРѕРµ РёР· РіР°Р»РµСЂРµРё (РїРѕ Uri), РІ СЃС‚СЂРѕРєСѓ Base64 РґР»СЏ С…СЂР°РЅРµРЅРёСЏ
     * РІ Р±Р°Р·Рµ РґР°РЅРЅС‹С…. Р’РѕР·РІСЂР°С‰Р°РµС‚ null РІ СЃР»СѓС‡Р°Рµ РѕС€РёР±РєРё.
     */
    private String uriToBase64(Uri uri) {
        try {
            Bitmap bitmap = MediaStore.Images.Media.getBitmap(requireActivity().getContentResolver(), uri);
            ByteArrayOutputStream baos = new ByteArrayOutputStream();
            bitmap.compress(Bitmap.CompressFormat.JPEG, 100, baos);
            byte[] imageBytes = baos.toByteArray();
            return Base64.encodeToString(imageBytes, Base64.DEFAULT);
        } catch (IOException e) {
            e.printStackTrace();
            return null;
        }
    }

    /**
     * РЎРѕС…СЂР°РЅСЏРµС‚ РґР°РЅРЅС‹Рµ Рѕ С‚РѕРІР°СЂРµ РІ РєРѕР»Р»РµРєС†РёСЋ "products" РІ Firebase Firestore. РЎРѕР·РґР°РµС‚
     * РґРѕРєСѓРјРµРЅС‚ СЃ РёРЅС„РѕСЂРјР°С†РёРµР№ Рѕ С‚РѕРІР°СЂРµ, РІРєР»СЋС‡Р°СЏ РЅР°Р·РІР°РЅРёРµ, С†РµРЅСѓ, С‚РёРї, РёР·РѕР±СЂР°Р¶РµРЅРёРµ, РѕРїРёСЃР°РЅРёРµ,
     * РєРѕР»РёС‡РµСЃС‚РІРѕ Рё РёРґРµРЅС‚РёС„РёРєР°С‚РѕСЂ РїСЂРѕРґР°РІС†Р°. РћС‡РёС‰Р°РµС‚ РїРѕР»СЏ РІРІРѕРґР° РїРѕСЃР»Рµ СѓСЃРїРµС€РЅРѕРіРѕ СЃРѕС…СЂР°РЅРµРЅРёСЏ.
     */
    private void saveProductToFirestore(String name, int price, String type, String imageBase64, String description, int quantity) {
        Map<String, Object> product = new HashMap<>();
        product.put("name", name);
        product.put("price", price);
        product.put("productType", type);
        product.put("imageBase64", imageBase64);
        product.put("description", description);
        product.put("sellerId", userDocumentId);
        product.put("quantity", quantity);

        db.collection("products").add(product)
                .addOnSuccessListener(documentReference -> {
                    clearInputFields();
                })
                .addOnFailureListener(e -> Toast.makeText(getContext(), "РћС€РёР±РєР° РїСЂРё РґРѕР±Р°РІР»РµРЅРёРё РїСЂРѕРґСѓРєС‚Р°", Toast.LENGTH_SHORT).show());
    }

    /**
     * РћС‡РёС‰Р°РµС‚ РІСЃРµ РїРѕР»СЏ РІРІРѕРґР° Рё СЃР±СЂР°СЃС‹РІР°РµС‚ РїСЂРµРґРІР°СЂРёС‚РµР»СЊРЅС‹Р№ РїСЂРѕСЃРјРѕС‚СЂ РёР·РѕР±СЂР°Р¶РµРЅРёСЏ РїРѕСЃР»Рµ
     * СѓСЃРїРµС€РЅРѕРіРѕ СЃРѕС…СЂР°РЅРµРЅРёСЏ С‚РѕРІР°СЂР°.
     */
    private void clearInputFields() {
        productNameInput.setText("");
        productPriceInput.setText("");
        productQuantityInput.setText("");
        productDescriptionInput.setText("");
        productTypeInput.setSelection(0);
        productImagePreview.setImageResource(R.drawable.no_photo);
        imageUri = null;
    }
}

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\java\com\example\ozon\CustomerMainActivity.java
package com.example.ozon;

import android.annotation.SuppressLint;
import android.content.pm.PackageManager;
import android.os.Build;
import android.os.Bundle;
import android.os.Handler;
import android.os.Looper;
import android.widget.Toast;
import android.Manifest;
import androidx.annotation.NonNull;
import androidx.appcompat.app.AppCompatActivity;
import androidx.core.app.ActivityCompat;
import androidx.fragment.app.Fragment;
import com.google.android.material.bottomnavigation.BottomNavigationView;
import com.google.firebase.firestore.DocumentSnapshot;
import com.google.firebase.firestore.FirebaseFirestore;
import java.util.Arrays;
import java.util.Calendar;
import java.util.Date;
import java.util.concurrent.TimeUnit;

/**
 * РљР»Р°СЃСЃ CustomerMainActivity РїСЂРµРґСЃС‚Р°РІР»СЏРµС‚ СЃРѕР±РѕР№ РѕСЃРЅРѕРІРЅСѓСЋ Р°РєС‚РёРІРЅРѕСЃС‚СЊ РґР»СЏ РїРѕРєСѓРїР°С‚РµР»СЏ
 * РІ РїСЂРёР»РѕР¶РµРЅРёРё "OZON". РћР±РµСЃРїРµС‡РёРІР°РµС‚ РЅР°РІРёРіР°С†РёСЋ РјРµР¶РґСѓ С„СЂР°РіРјРµРЅС‚Р°РјРё РєР°С‚Р°Р»РѕРіР°,
 * РєРѕСЂР·РёРЅС‹ Рё РїСЂРѕС„РёР»СЏ С‡РµСЂРµР· РЅРёР¶РЅРµРµ РјРµРЅСЋ. РЈРїСЂР°РІР»СЏРµС‚ Р·Р°РєР°Р·Р°РјРё РїРѕР»СЊР·РѕРІР°С‚РµР»СЏ, РїРµСЂРёРѕРґРёС‡РµСЃРєРё
 * РѕР±РЅРѕРІР»СЏСЏ РёС… СЃС‚Р°С‚СѓСЃ Рё РѕС‚РїСЂР°РІР»СЏСЏ СѓРІРµРґРѕРјР»РµРЅРёСЏ Рѕ РґРѕСЃС‚Р°РІРєРµ СЃ РёСЃРїРѕР»СЊР·РѕРІР°РЅРёРµРј Firebase Firestore.
 */
public class CustomerMainActivity extends AppCompatActivity {
    private static final String TAG = "CustomerMainActivity";
    private FirebaseFirestore db;
    private String userDocumentId;
    private OrderManager orderManager;
    private Handler handler;
    private Runnable recalculateRunnable;
    private static final long RECALCULATE_INTERVAL = 6 * 1000;

    /**
     * РРЅРёС†РёР°Р»РёР·РёСЂСѓРµС‚ Р°РєС‚РёРІРЅРѕСЃС‚СЊ РїРѕРєСѓРїР°С‚РµР»СЏ. РќР°СЃС‚СЂР°РёРІР°РµС‚ РЅРёР¶РЅРµРµ РјРµРЅСЋ РЅР°РІРёРіР°С†РёРё РґР»СЏ РїРµСЂРµРєР»СЋС‡РµРЅРёСЏ
     * РјРµР¶РґСѓ С„СЂР°РіРјРµРЅС‚Р°РјРё (РєР°С‚Р°Р»РѕРі, РєРѕСЂР·РёРЅР°, РїСЂРѕС„РёР»СЊ), Р·Р°РїСЂР°С€РёРІР°РµС‚ СЂР°Р·СЂРµС€РµРЅРёРµ РЅР° СѓРІРµРґРѕРјР»РµРЅРёСЏ,
     * РёРЅРёС†РёРёСЂСѓРµС‚ РїРµСЂРёРѕРґРёС‡РµСЃРєРѕРµ РѕР±РЅРѕРІР»РµРЅРёРµ СЃС‚Р°С‚СѓСЃР° Р·Р°РєР°Р·РѕРІ Рё РѕС‚РїСЂР°РІРєСѓ СѓРІРµРґРѕРјР»РµРЅРёР№.
     */
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.customer_layout);
        NotificationHelper.createNotificationChannel(this);
        db = FirebaseFirestore.getInstance();
        userDocumentId = getIntent().getStringExtra("USER_DOCUMENT_ID");
        String userRole = getIntent().getStringExtra("USER_ROLE");
        if (userDocumentId == null || userDocumentId.isEmpty()) {
            Toast.makeText(this, "РћС€РёР±РєР°: РёРґРµРЅС‚РёС„РёРєР°С‚РѕСЂ РїРѕР»СЊР·РѕРІР°С‚РµР»СЏ РЅРµ РЅР°Р№РґРµРЅ", Toast.LENGTH_LONG).show();
            finish();
            return;
        }
        orderManager = new OrderManager(this);
        BottomNavigationView bottomNavigationView = findViewById(R.id.bottom_navigation);
        bottomNavigationView.setOnNavigationItemSelectedListener(item -> {
            Fragment selectedFragment = null;
            if (item.getItemId() == R.id.nav_catalog) {
                selectedFragment = new CatalogActivity();
            } else if (item.getItemId() == R.id.nav_cart) {
                selectedFragment = new CartActivity();
            } else if (item.getItemId() == R.id.nav_profile) {
                selectedFragment = new ProfileActivity();
            }
            if (selectedFragment != null) {
                Bundle bundle = new Bundle();
                bundle.putString("USER_DOCUMENT_ID", userDocumentId);
                bundle.putString("USER_ROLE", userRole);
                selectedFragment.setArguments(bundle);
                getSupportFragmentManager().beginTransaction()
                        .replace(R.id.frameLayout, selectedFragment)
                        .commit();
            }
            return true;
        });
        if (savedInstanceState == null) {
            bottomNavigationView.setSelectedItemId(R.id.nav_catalog);
        }
        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.TIRAMISU) {
            if (ActivityCompat.checkSelfPermission(this, Manifest.permission.POST_NOTIFICATIONS) != PackageManager.PERMISSION_GRANTED) {
                ActivityCompat.requestPermissions(this, new String[]{Manifest.permission.POST_NOTIFICATIONS}, 1);
            }
        }
        if (NetworkUtil.isNetworkAvailable(this)) {
            recalculateUserOrders();
            startPeriodicRecalculation();
        } else {
            Toast.makeText(this, "РќРµС‚ РїРѕРґРєР»СЋС‡РµРЅРёСЏ Рє РёРЅС‚РµСЂРЅРµС‚Сѓ", Toast.LENGTH_LONG).show();
        }
    }

    /**
     * Р—Р°РїСѓСЃРєР°РµС‚ РїРµСЂРёРѕРґРёС‡РµСЃРєРѕРµ РѕР±РЅРѕРІР»РµРЅРёРµ СЃС‚Р°С‚СѓСЃР° Р·Р°РєР°Р·РѕРІ РїРѕР»СЊР·РѕРІР°С‚РµР»СЏ СЃ Р·Р°РґР°РЅРЅС‹Рј РёРЅС‚РµСЂРІР°Р»РѕРј.
     * РџСЂРѕРІРµСЂСЏРµС‚ РЅР°Р»РёС‡РёРµ РёРЅС‚РµСЂРЅРµС‚-СЃРѕРµРґРёРЅРµРЅРёСЏ РїРµСЂРµРґ РєР°Р¶РґС‹Рј РѕР±РЅРѕРІР»РµРЅРёРµРј.
     */
    private void startPeriodicRecalculation() {
        handler = new Handler(Looper.getMainLooper());
        recalculateRunnable = new Runnable() {
            @Override
            public void run() {
                if (NetworkUtil.isNetworkAvailable(CustomerMainActivity.this)) {
                    recalculateUserOrders();
                }
                handler.postDelayed(this, RECALCULATE_INTERVAL);
            }
        };
        handler.post(recalculateRunnable);
    }

    /**
     * Р—Р°РіСЂСѓР¶Р°РµС‚ Рё РѕР±РЅРѕРІР»СЏРµС‚ СЃС‚Р°С‚СѓСЃС‹ Р·Р°РєР°Р·РѕРІ РїРѕР»СЊР·РѕРІР°С‚РµР»СЏ РёР· Firebase Firestore. РџСЂРѕРІРµСЂСЏРµС‚
     * Р·Р°РєР°Р·С‹ СЃРѕ СЃС‚Р°С‚СѓСЃР°РјРё "СЃРѕР·РґР°РЅ", "РІ РїСЂРѕС†РµСЃСЃРµ" Рё "РґРѕСЃС‚Р°РІР»РµРЅ", Рё РѕР±РЅРѕРІР»СЏРµС‚ РёС… РІ Р·Р°РІРёСЃРёРјРѕСЃС‚Рё
     * РѕС‚ РІСЂРµРјРµРЅРё, РїСЂРѕС€РµРґС€РµРіРѕ СЃ РјРѕРјРµРЅС‚Р° СЃРѕР·РґР°РЅРёСЏ.
     */
    private void recalculateUserOrders() {
        if (userDocumentId == null || userDocumentId.isEmpty()) {
            return;
        }
        db.collection("orders")
                .whereEqualTo("userId", userDocumentId)
                .whereIn("status", Arrays.asList("СЃРѕР·РґР°РЅ", "РІ РїСЂРѕС†РµСЃСЃРµ", "РґРѕСЃС‚Р°РІР»РµРЅ"))
                .get()
                .addOnSuccessListener(queryDocumentSnapshots -> {
                    if (queryDocumentSnapshots.isEmpty()) {
                        return;
                    }
                    for (DocumentSnapshot doc : queryDocumentSnapshots) {
                        try {
                            checkAndUpdateOrder(doc);
                        } catch (Exception e) {}
                    }
                })
                .addOnFailureListener(e -> {
                    Toast.makeText(this, "РћС€РёР±РєР° Р·Р°РіСЂСѓР·РєРё Р·Р°РєР°Р·РѕРІ: " + e.getMessage(), Toast.LENGTH_LONG).show();
                });
    }

    /**
     * РџСЂРѕРІРµСЂСЏРµС‚ Рё РѕР±РЅРѕРІР»СЏРµС‚ СЃС‚Р°С‚СѓСЃ РєРѕРЅРєСЂРµС‚РЅРѕРіРѕ Р·Р°РєР°Р·Р°. Р Р°СЃСЃС‡РёС‚С‹РІР°РµС‚ РѕСЃС‚Р°РІС€РµРµСЃСЏ РІСЂРµРјСЏ РґРѕСЃС‚Р°РІРєРё
     * РЅР° РѕСЃРЅРѕРІРµ РґР°С‚С‹ СЃРѕР·РґР°РЅРёСЏ Р·Р°РєР°Р·Р° Рё РЅР°С‡Р°Р»СЊРЅРѕРіРѕ СЃСЂРѕРєР° РґРѕСЃС‚Р°РІРєРё. РћР±РЅРѕРІР»СЏРµС‚ СЃС‚Р°С‚СѓСЃ Р·Р°РєР°Р·Р°
     * РЅР° "РґРѕСЃС‚Р°РІР»РµРЅ", РµСЃР»Рё СЃСЂРѕРє РёСЃС‚РµРє, Рё РѕС‚РїСЂР°РІР»СЏРµС‚ СѓРІРµРґРѕРјР»РµРЅРёРµ РїРѕР»СЊР·РѕРІР°С‚РµР»СЋ.
     */
    @SuppressLint("MissingPermission")
    private void checkAndUpdateOrder(DocumentSnapshot doc) {
        try {
            Order order = doc.toObject(Order.class);
            if (order == null) {
                return;
            }
            Date orderDate = order.getOrderDate().toDate();
            Long initialDays = order.getInitialDays();
            if (orderDate == null) {
                return;
            }
            if (initialDays == null) {
                initialDays = 0L;
                order.setInitialDays(initialDays);
            }
            Calendar currentDate = Calendar.getInstance();
            Calendar orderCalendar = Calendar.getInstance();
            orderCalendar.setTime(orderDate);
            long millisecondsDiff = currentDate.getTimeInMillis() - orderCalendar.getTimeInMillis();
            long daysSinceCreation = TimeUnit.MILLISECONDS.toDays(millisecondsDiff);
            long remainingDays = Math.max(0, initialDays - daysSinceCreation - 1);
            Long originalDays = order.getDays();
            order.setDays(remainingDays);
            Boolean notificationSent = order.getNotificationSent() != null ? order.getNotificationSent() : false;
            Long lastNotifiedDays = order.getLastNotifiedDays();
            if (remainingDays <= 0) {
                if (!"РґРѕСЃС‚Р°РІР»РµРЅ".equals(order.getStatus())) {
                    order.setStatus("РґРѕСЃС‚Р°РІР»РµРЅ");
                    order.setNotificationSent(true);
                    order.setLastNotifiedDays(remainingDays);
                    updateOrderInFirestore(order, doc.getId(), true, remainingDays);
                } else if (!notificationSent) {
                    order.setNotificationSent(true);
                    order.setLastNotifiedDays(remainingDays);
                    updateOrderInFirestore(order, doc.getId(), true, remainingDays);
                }
            } else {
                if (!notificationSent || (lastNotifiedDays == null || lastNotifiedDays != remainingDays) ||
                        (originalDays != null && !originalDays.equals(remainingDays))) {
                    order.setNotificationSent(true);
                    order.setLastNotifiedDays(remainingDays);
                    updateOrderInFirestore(order, doc.getId(), false, remainingDays);
                }
            }
        } catch (Exception e) {
        }
    }

    /**
     * РћР±РЅРѕРІР»СЏРµС‚ РґР°РЅРЅС‹Рµ Р·Р°РєР°Р·Р° РІ Firebase Firestore Рё РѕС‚РїСЂР°РІР»СЏРµС‚ СѓРІРµРґРѕРјР»РµРЅРёРµ РїРѕР»СЊР·РѕРІР°С‚РµР»СЋ
     * Рѕ СЃС‚Р°С‚СѓСЃРµ РґРѕСЃС‚Р°РІРєРё. Р’С‹Р·С‹РІР°РµС‚ OrderManager РґР»СЏ Р»РѕРєР°Р»СЊРЅРѕРіРѕ СѓРїСЂР°РІР»РµРЅРёСЏ Р·Р°РєР°Р·РѕРј.
     */
    private void updateOrderInFirestore(Order order, String orderId, boolean isDelivered, long remainingDays) {
        db.collection("orders").document(orderId)
                .set(order)
                .addOnSuccessListener(aVoid -> {
                    orderManager.createOrUpdateOrder(order, orderId);
                    NotificationHelper.sendDeliveryNotification(this, orderId, isDelivered, remainingDays, userDocumentId, "customer");
                });
    }

    /**
     * РћР±СЂР°Р±Р°С‚С‹РІР°РµС‚ СЂРµР·СѓР»СЊС‚Р°С‚ Р·Р°РїСЂРѕСЃР° СЂР°Р·СЂРµС€РµРЅРёСЏ РЅР° РѕС‚РїСЂР°РІРєСѓ СѓРІРµРґРѕРјР»РµРЅРёР№. Р•СЃР»Рё СЂР°Р·СЂРµС€РµРЅРёРµ
     * РїРѕР»СѓС‡РµРЅРѕ, РёРЅРёС†РёРёСЂСѓРµС‚ РѕР±РЅРѕРІР»РµРЅРёРµ Р·Р°РєР°Р·РѕРІ, РёРЅР°С‡Рµ РѕС‚РѕР±СЂР°Р¶Р°РµС‚ СЃРѕРѕР±С‰РµРЅРёРµ Рѕ РЅРµРІРѕР·РјРѕР¶РЅРѕСЃС‚Рё
     * РѕС‚РїСЂР°РІРєРё СѓРІРµРґРѕРјР»РµРЅРёР№.
     */
    @Override
    public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults) {
        super.onRequestPermissionsResult(requestCode, permissions, grantResults);
        if (requestCode == 1) {
            if (grantResults.length > 0 && grantResults[0] == PackageManager.PERMISSION_GRANTED) {
                recalculateUserOrders();
            } else {
                Toast.makeText(this, "РЈРІРµРґРѕРјР»РµРЅРёСЏ РЅРµ РїСЂРёР№РґСѓС‚ Р±РµР· СЂР°Р·СЂРµС€РµРЅРёСЏ", Toast.LENGTH_LONG).show();
            }
        }
    }

    /**
     * Р’С‹Р·С‹РІР°РµС‚СЃСЏ РїСЂРё СѓРЅРёС‡С‚РѕР¶РµРЅРёРё Р°РєС‚РёРІРЅРѕСЃС‚Рё. РћСЃС‚Р°РЅР°РІР»РёРІР°РµС‚ РїРµСЂРёРѕРґРёС‡РµСЃРєРѕРµ РѕР±РЅРѕРІР»РµРЅРёРµ
     * СЃС‚Р°С‚СѓСЃР° Р·Р°РєР°Р·РѕРІ, С‡С‚РѕР±С‹ РёР·Р±РµР¶Р°С‚СЊ СѓС‚РµС‡РµРє РїР°РјСЏС‚Рё.
     */
    @Override
    protected void onDestroy() {
        super.onDestroy();
        if (handler != null && recalculateRunnable != null) {
            handler.removeCallbacks(recalculateRunnable);
        }
    }
}

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\java\com\example\ozon\DeliveryReminderReceiver.java
package com.example.ozon;

import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;

/**
 * РљР»Р°СЃСЃ DeliveryReminderReceiver РїСЂРµРґСЃС‚Р°РІР»СЏРµС‚ СЃРѕР±РѕР№ BroadcastReceiver РґР»СЏ РѕР±СЂР°Р±РѕС‚РєРё
 * СѓРІРµРґРѕРјР»РµРЅРёР№ Рѕ РґРѕСЃС‚Р°РІРєРµ РІ РїСЂРёР»РѕР¶РµРЅРёРё "OZON". РџРѕР»СѓС‡Р°РµС‚ РґР°РЅРЅС‹Рµ Рѕ Р·Р°РєР°Р·Рµ
 * Рё РІС‹Р·С‹РІР°РµС‚ РјРµС‚РѕРґ РѕС‚РїСЂР°РІРєРё СѓРІРµРґРѕРјР»РµРЅРёСЏ Рѕ СЃС‚Р°С‚СѓСЃРµ РґРѕСЃС‚Р°РІРєРё.
 */
public class DeliveryReminderReceiver extends BroadcastReceiver {

    /**
     * РћР±СЂР°Р±Р°С‚С‹РІР°РµС‚ РїРѕР»СѓС‡РµРЅРЅРѕРµ С€РёСЂРѕРєРѕРІРµС‰Р°С‚РµР»СЊРЅРѕРµ СЃРѕРѕР±С‰РµРЅРёРµ. РР·РІР»РµРєР°РµС‚ РґР°РЅРЅС‹Рµ Рѕ Р·Р°РєР°Р·Рµ,
     * С‚Р°РєРёРµ РєР°Рє РёРґРµРЅС‚РёС„РёРєР°С‚РѕСЂ Р·Р°РєР°Р·Р°, РѕСЃС‚Р°РІС€РёРµСЃСЏ РґРЅРё РґРѕСЃС‚Р°РІРєРё, РёРґРµРЅС‚РёС„РёРєР°С‚РѕСЂ РїРѕР»СЊР·РѕРІР°С‚РµР»СЏ
     * Рё РµРіРѕ СЂРѕР»СЊ, Рё РѕС‚РїСЂР°РІР»СЏРµС‚ СѓРІРµРґРѕРјР»РµРЅРёРµ Рѕ СЃС‚Р°С‚СѓСЃРµ РґРѕСЃС‚Р°РІРєРё С‡РµСЂРµР· NotificationHelper.
     */
    @Override
    public void onReceive(Context context, Intent intent) {
        String orderId = intent.getStringExtra("orderId");
        long days = intent.getLongExtra("days", 0);
        String userId = intent.getStringExtra("userId");
        String userRole = intent.getStringExtra("userRole");
        NotificationHelper.sendDeliveryNotification(context, orderId, false, days, userId, userRole);
    }
}

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\java\com\example\ozon\DeliveryWidgetProvider.java
package com.example.ozon;

import android.app.PendingIntent;
import android.appwidget.AppWidgetManager;
import android.appwidget.AppWidgetProvider;
import android.content.ComponentName;
import android.content.Context;
import android.content.Intent;
import android.content.SharedPreferences;
import android.os.Handler;
import android.os.Looper;
import android.widget.RemoteViews;
import com.google.firebase.firestore.FirebaseFirestore;
import com.google.firebase.firestore.Query;
import java.text.SimpleDateFormat;
import java.util.Arrays;
import java.util.Calendar;
import java.util.Locale;

/**
 * РљР»Р°СЃСЃ DeliveryWidgetProvider РїСЂРµРґСЃС‚Р°РІР»СЏРµС‚ СЃРѕР±РѕР№ РІРёРґР¶РµС‚ РґР»СЏ РѕС‚РѕР±СЂР°Р¶РµРЅРёСЏ РёРЅС„РѕСЂРјР°С†РёРё
 * Рѕ Р±Р»РёР¶Р°Р№С€РµРј Р·Р°РєР°Р·Рµ РїРѕР»СЊР·РѕРІР°С‚РµР»СЏ РІ РїСЂРёР»РѕР¶РµРЅРёРё "OZON". РџРѕРєР°Р·С‹РІР°РµС‚
 * РґР°С‚Сѓ РґРѕСЃС‚Р°РІРєРё Рё РѕСЃС‚Р°РІС€РµРµСЃСЏ РІСЂРµРјСЏ РґРѕ РґРѕСЃС‚Р°РІРєРё, РѕР±РЅРѕРІР»СЏСЏ РґР°РЅРЅС‹Рµ СЃ Р·Р°РґР°РЅРЅС‹Рј РёРЅС‚РµСЂРІР°Р»РѕРј.
 * РСЃРїРѕР»СЊР·СѓРµС‚ Firebase Firestore РґР»СЏ РїРѕР»СѓС‡РµРЅРёСЏ РґР°РЅРЅС‹С… Рѕ Р·Р°РєР°Р·Р°С….
 */
public class DeliveryWidgetProvider extends AppWidgetProvider {
    private static final String TAG = "DeliveryWidgetProvider";
    private static final String ACTION_UPDATE = "com.example.ozon.UPDATE_WIDGET";
    private static final Handler handler = new Handler(Looper.getMainLooper());
    private static Runnable updateRunnable;

    /**
     * Р’С‹Р·С‹РІР°РµС‚СЃСЏ РїСЂРё РѕР±РЅРѕРІР»РµРЅРёРё РІРёРґР¶РµС‚Р°. РћР±РЅРѕРІР»СЏРµС‚ СЃРѕРґРµСЂР¶РёРјРѕРµ РєР°Р¶РґРѕРіРѕ СЌРєР·РµРјРїР»СЏСЂР° РІРёРґР¶РµС‚Р°
     * Рё Р·Р°РїСѓСЃРєР°РµС‚ РїРµСЂРёРѕРґРёС‡РµСЃРєРѕРµ РѕР±РЅРѕРІР»РµРЅРёРµ РґР°РЅРЅС‹С….
     */
    @Override
    public void onUpdate(Context context, AppWidgetManager appWidgetManager, int[] appWidgetIds) {
        for (int appWidgetId : appWidgetIds) {
            updateWidget(context, appWidgetManager, appWidgetId);
        }
        startUpdating(context);
    }

    /**
     * РћР±СЂР°Р±Р°С‚С‹РІР°РµС‚ С€РёСЂРѕРєРѕРІРµС‰Р°С‚РµР»СЊРЅС‹Рµ СЃРѕРѕР±С‰РµРЅРёСЏ. Р•СЃР»Рё РїРѕР»СѓС‡РµРЅРѕ СЃРѕРѕР±С‰РµРЅРёРµ СЃ РґРµР№СЃС‚РІРёРµРј
     * ACTION_UPDATE, РѕР±РЅРѕРІР»СЏРµС‚ СЃРѕРґРµСЂР¶РёРјРѕРµ РІСЃРµС… СЌРєР·РµРјРїР»СЏСЂРѕРІ РІРёРґР¶РµС‚Р°.
     */
    @Override
    public void onReceive(Context context, Intent intent) {
        super.onReceive(context, intent);
        if (ACTION_UPDATE.equals(intent.getAction())) {
            AppWidgetManager appWidgetManager = AppWidgetManager.getInstance(context);
            int[] appWidgetIds = appWidgetManager.getAppWidgetIds(
                    new ComponentName(context, DeliveryWidgetProvider.class));
            for (int appWidgetId : appWidgetIds) {
                updateWidget(context, appWidgetManager, appWidgetId);
            }
        }
    }

    /**
     * РћР±РЅРѕРІР»СЏРµС‚ СЃРѕРґРµСЂР¶РёРјРѕРµ РІРёРґР¶РµС‚Р°. РџСЂРѕРІРµСЂСЏРµС‚ Р°РІС‚РѕСЂРёР·Р°С†РёСЋ РїРѕР»СЊР·РѕРІР°С‚РµР»СЏ, РµРіРѕ СЂРѕР»СЊ Рё РЅР°Р»РёС‡РёРµ
     * РёРЅС‚РµСЂРЅРµС‚-СЃРѕРµРґРёРЅРµРЅРёСЏ. Р”Р»СЏ РїРѕРєСѓРїР°С‚РµР»СЏ Р·Р°РіСЂСѓР¶Р°РµС‚ Р±Р»РёР¶Р°Р№С€РёР№ Р°РєС‚РёРІРЅС‹Р№ Р·Р°РєР°Р· РёР· Firebase Firestore
     * Рё РѕС‚РѕР±СЂР°Р¶Р°РµС‚ РґР°С‚Сѓ РґРѕСЃС‚Р°РІРєРё Рё РѕСЃС‚Р°РІС€РµРµСЃСЏ РІСЂРµРјСЏ. Р”Р»СЏ РїСЂРѕРґР°РІС†Р° РѕС‚РѕР±СЂР°Р¶Р°РµС‚ СЃРѕРѕР±С‰РµРЅРёРµ СЃ РїСЂРµРґР»РѕР¶РµРЅРёРµРј
     * СѓРїСЂР°РІР»СЏС‚СЊ Р·Р°РєР°Р·Р°РјРё РІ РїСЂРёР»РѕР¶РµРЅРёРё.
     */
    private void updateWidget(Context context, AppWidgetManager appWidgetManager, int appWidgetId) {
        RemoteViews views = new RemoteViews(context.getPackageName(), R.layout.delivery_widget);

        if (!isUserAuthenticated(context)) {
            views.setTextViewText(R.id.delivery_date, "РќРµ Р°РІС‚РѕСЂРёР·РѕРІР°РЅ");
            views.setTextViewText(R.id.time_remaining, "Р’РѕР№РґРёС‚Рµ РІ РїСЂРёР»РѕР¶РµРЅРёРµ");
            appWidgetManager.updateAppWidget(appWidgetId, views);
            return;
        }

        SharedPreferences sharedPrefs = context.getSharedPreferences("AppPrefs", Context.MODE_PRIVATE);
        String userId = sharedPrefs.getString("userId", null);
        String userRole = sharedPrefs.getString("userRole", null);

        if (userId == null || userId.isEmpty()) {
            views.setTextViewText(R.id.delivery_date, "РћС€РёР±РєР°");
            views.setTextViewText(R.id.time_remaining, "РќРµ СѓРґР°Р»РѕСЃСЊ РѕРїСЂРµРґРµР»РёС‚СЊ РїРѕР»СЊР·РѕРІР°С‚РµР»СЏ");
            appWidgetManager.updateAppWidget(appWidgetId, views);
            return;
        }

        if ("seller".equals(userRole)) {
            views.setTextViewText(R.id.delivery_date, "Р’С‹ РїСЂРѕРґР°РІРµС†");
            views.setTextViewText(R.id.time_remaining, "РЈРїСЂР°РІР»СЏР№С‚Рµ Р·Р°РєР°Р·Р°РјРё РІ РїСЂРёР»РѕР¶РµРЅРёРё");
            Intent intent = new Intent(context, OrderActivity.class);
            intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);
            intent.putExtra("USER_DOCUMENT_ID", userId);
            intent.putExtra("USER_ROLE", userRole);
            PendingIntent pendingIntent = PendingIntent.getActivity(context, 0, intent,
                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);
            views.setOnClickPendingIntent(R.id.delivery_date, pendingIntent);
            views.setOnClickPendingIntent(R.id.time_remaining, pendingIntent);
            appWidgetManager.updateAppWidget(appWidgetId, views);
            return;
        }

        if (!NetworkUtil.isNetworkAvailable(context)) {
            views.setTextViewText(R.id.delivery_date, "РќРµС‚ РёРЅС‚РµСЂРЅРµС‚Р°");
            views.setTextViewText(R.id.time_remaining, "РџСЂРѕРІРµСЂСЊС‚Рµ РїРѕРґРєР»СЋС‡РµРЅРёРµ");
            appWidgetManager.updateAppWidget(appWidgetId, views);
            return;
        }

        FirebaseFirestore db = FirebaseFirestore.getInstance();
        db.collection("orders")
                .whereEqualTo("userId", userId)
                .whereIn("status", Arrays.asList("СЃРѕР·РґР°РЅ", "РІ РїСЂРѕС†РµСЃСЃРµ"))
                .orderBy("days", Query.Direction.ASCENDING)
                .limit(1)
                .get()
                .addOnSuccessListener(queryDocumentSnapshots -> {
                    if (queryDocumentSnapshots.isEmpty()) {
                        views.setTextViewText(R.id.delivery_date, "РќРµС‚ Р°РєС‚РёРІРЅС‹С… Р·Р°РєР°Р·РѕРІ");
                        views.setTextViewText(R.id.time_remaining, "");
                    } else {
                        Order order = queryDocumentSnapshots.getDocuments().get(0).toObject(Order.class);
                        if (order == null || order.getDays() == null) {
                            views.setTextViewText(R.id.delivery_date, "РћС€РёР±РєР° РґР°РЅРЅС‹С… Р·Р°РєР°Р·Р°");
                            views.setTextViewText(R.id.time_remaining, "");
                        } else {
                            Calendar deliveryDate = Calendar.getInstance();
                            deliveryDate.add(Calendar.DAY_OF_MONTH, order.getDays().intValue());
                            SimpleDateFormat dateFormat = new SimpleDateFormat("dd MMMM yyyy", new Locale("ru"));
                            String dateString = "Р”Р°С‚Р° РґРѕСЃС‚Р°РІРєРё: " + dateFormat.format(deliveryDate.getTime());
                            views.setTextViewText(R.id.delivery_date, dateString);
                            long daysRemaining = order.getDays();
                            if (daysRemaining > 0) {
                                String remaining = String.format(Locale.getDefault(), "РћСЃС‚Р°Р»РѕСЃСЊ: %d Рґ", daysRemaining);
                                views.setTextViewText(R.id.time_remaining, remaining);
                            } else {
                                views.setTextViewText(R.id.time_remaining, "Р”РѕСЃС‚Р°РІР»РµРЅРѕ!");
                            }
                        }
                    }
                    Intent intent = new Intent(context, OrderActivity.class);
                    intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);
                    intent.putExtra("USER_DOCUMENT_ID", userId);
                    intent.putExtra("USER_ROLE", userRole);
                    PendingIntent pendingIntent = PendingIntent.getActivity(context, 0, intent,
                            PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);
                    views.setOnClickPendingIntent(R.id.delivery_date, pendingIntent);
                    views.setOnClickPendingIntent(R.id.time_remaining, pendingIntent);

                    appWidgetManager.updateAppWidget(appWidgetId, views);
                })
                .addOnFailureListener(e -> {
                    views.setTextViewText(R.id.delivery_date, "РћС€РёР±РєР°");
                    views.setTextViewText(R.id.time_remaining, "РќРµ СѓРґР°Р»РѕСЃСЊ Р·Р°РіСЂСѓР·РёС‚СЊ РґР°РЅРЅС‹Рµ: " + e.getMessage());
                    appWidgetManager.updateAppWidget(appWidgetId, views);
                });
    }

    /**
     * Р—Р°РїСѓСЃРєР°РµС‚ РїРµСЂРёРѕРґРёС‡РµСЃРєРѕРµ РѕР±РЅРѕРІР»РµРЅРёРµ РІРёРґР¶РµС‚Р° СЃ Р·Р°РґР°РЅРЅС‹Рј РёРЅС‚РµСЂРІР°Р»РѕРј (РєР°Р¶РґС‹Рµ 6 СЃРµРєСѓРЅРґ).
     * РћС‚РїСЂР°РІР»СЏРµС‚ С€РёСЂРѕРєРѕРІРµС‰Р°С‚РµР»СЊРЅРѕРµ СЃРѕРѕР±С‰РµРЅРёРµ РґР»СЏ РѕР±РЅРѕРІР»РµРЅРёСЏ СЃРѕРґРµСЂР¶РёРјРѕРіРѕ РІРёРґР¶РµС‚Р°.
     */
    private void startUpdating(final Context context) {
        if (updateRunnable != null) {
            handler.removeCallbacks(updateRunnable);
        }
        updateRunnable = new Runnable() {
            @Override
            public void run() {
                Intent intent = new Intent(context, DeliveryWidgetProvider.class);
                intent.setAction(ACTION_UPDATE);
                context.sendBroadcast(intent);
                handler.postDelayed(this, 6 * 1000);
            }
        };
        handler.post(updateRunnable);
    }

    /**
     * Р’С‹Р·С‹РІР°РµС‚СЃСЏ, РєРѕРіРґР° РІРёРґР¶РµС‚ СѓРґР°Р»СЏРµС‚СЃСЏ СЃ СЌРєСЂР°РЅР°. РћСЃС‚Р°РЅР°РІР»РёРІР°РµС‚ РїРµСЂРёРѕРґРёС‡РµСЃРєРѕРµ РѕР±РЅРѕРІР»РµРЅРёРµ
     * РґР°РЅРЅС‹С…, С‡С‚РѕР±С‹ РёР·Р±РµР¶Р°С‚СЊ СѓС‚РµС‡РµРє РїР°РјСЏС‚Рё.
     */
    @Override
    public void onDisabled(Context context) {
        if (updateRunnable != null) {
            handler.removeCallbacks(updateRunnable);
        }
    }

    /**
     * РџСЂРѕРІРµСЂСЏРµС‚, Р°РІС‚РѕСЂРёР·РѕРІР°РЅ Р»Рё РїРѕР»СЊР·РѕРІР°С‚РµР»СЊ, РёСЃРїРѕР»СЊР·СѓСЏ РґР°РЅРЅС‹Рµ РёР· SharedPreferences.
     * Р’РѕР·РІСЂР°С‰Р°РµС‚ true, РµСЃР»Рё РїРѕР»СЊР·РѕРІР°С‚РµР»СЊ Р°РІС‚РѕСЂРёР·РѕРІР°РЅ, РёРЅР°С‡Рµ false.
     */
    private boolean isUserAuthenticated(Context context) {
        SharedPreferences sharedPrefs = context.getSharedPreferences("AppPrefs", Context.MODE_PRIVATE);
        boolean isLoggedIn = sharedPrefs.getBoolean("isLoggedIn", false);
        return isLoggedIn;
    }
}

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\java\com\example\ozon\MailSender.java
package com.example.ozon;

import android.util.Log;
import java.util.Properties;
import javax.mail.Authenticator;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;

/**
 * РљР»Р°СЃСЃ MailSender РїСЂРµРґРѕСЃС‚Р°РІР»СЏРµС‚ С„СѓРЅРєС†РёРѕРЅР°Р» РґР»СЏ РѕС‚РїСЂР°РІРєРё СЌР»РµРєС‚СЂРѕРЅРЅС‹С… РїРёСЃРµРј
 * РІ РїСЂРёР»РѕР¶РµРЅРёРё "OZON". РСЃРїРѕР»СЊР·СѓРµС‚ SMTP-СЃРµСЂРІРµСЂ mail.ru РґР»СЏ
 * РѕС‚РїСЂР°РІРєРё РїРёСЃРµРј СЃ Р·Р°РґР°РЅРЅРѕРіРѕ Р°РґСЂРµСЃР° СЌР»РµРєС‚СЂРѕРЅРЅРѕР№ РїРѕС‡С‚С‹.
 */
public class MailSender {
    private static final String EMAIL = "sesha_shk@mail.ru";
    private static final String PASSWORD = "jrnM9p0yFSvy3qE0GhTi";

    /**
     * РћС‚РїСЂР°РІР»СЏРµС‚ СЌР»РµРєС‚СЂРѕРЅРЅРѕРµ РїРёСЃСЊРјРѕ РЅР° СѓРєР°Р·Р°РЅРЅС‹Р№ Р°РґСЂРµСЃ. РќР°СЃС‚СЂР°РёРІР°РµС‚ SMTP-СЃРµСЃСЃРёСЋ
     * СЃ РёСЃРїРѕР»СЊР·РѕРІР°РЅРёРµРј СѓС‡РµС‚РЅС‹С… РґР°РЅРЅС‹С…, С„РѕСЂРјРёСЂСѓРµС‚ СЃРѕРѕР±С‰РµРЅРёРµ СЃ Р·Р°РґР°РЅРЅРѕР№ С‚РµРјРѕР№ Рё С‚РµР»РѕРј,
     * Рё РѕС‚РїСЂР°РІР»СЏРµС‚ РµРіРѕ. РџРѕРґРґРµСЂР¶РёРІР°РµС‚ РѕС‚РїСЂР°РІРєСѓ РїРёСЃРµРј РІ С„РѕСЂРјР°С‚Рµ HTML РёР»Рё РѕР±С‹С‡РЅРѕРіРѕ С‚РµРєСЃС‚Р°.
     * Р’ СЃР»СѓС‡Р°Рµ РѕС€РёР±РєРё Р»РѕРіРёСЂСѓРµС‚ РµС‘ Рё РІС‹Р±СЂР°СЃС‹РІР°РµС‚ РёСЃРєР»СЋС‡РµРЅРёРµ.
     */
    public static void sendEmail(String recipient, String subject, String body, boolean isHtml) {
        Properties props = new Properties();
        props.put("mail.smtp.host", "smtp.mail.ru");
        props.put("mail.smtp.port", "587");
        props.put("mail.smtp.auth", "true");
        props.put("mail.smtp.starttls.enable", "true");
        Session session = Session.getInstance(props, new Authenticator() {
            @Override
            protected PasswordAuthentication getPasswordAuthentication() {
                return new PasswordAuthentication(EMAIL, PASSWORD);
            }
        });
        try {
            Message message = new MimeMessage(session);
            message.setFrom(new InternetAddress(EMAIL));
            message.setRecipients(Message.RecipientType.TO, InternetAddress.parse(recipient));
            message.setSubject(subject);
            if (isHtml) {
                message.setContent(body, "text/html; charset=UTF-8");
            } else {
                message.setText(body);
            }
            Transport.send(message);
            Log.d("MailSender", "РџРёСЃСЊРјРѕ СѓСЃРїРµС€РЅРѕ РѕС‚РїСЂР°РІР»РµРЅРѕ РЅР°: " + recipient);
        } catch (MessagingException e) {
            Log.e("MailSender", "РћС€РёР±РєР° РѕС‚РїСЂР°РІРєРё РїРёСЃСЊРјР°: " + e.getMessage(), e);
            throw new RuntimeException(e);
        }
    }
}

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\java\com\example\ozon\MainActivity.java
package com.example.ozon;

import android.content.Intent;
import android.content.SharedPreferences;
import android.content.pm.PackageManager;
import android.graphics.Color;
import android.graphics.LinearGradient;
import android.graphics.Shader;
import android.os.Build;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ProgressBar;
import android.widget.TextView;
import android.widget.Toast;
import androidx.annotation.NonNull;
import androidx.appcompat.app.AlertDialog;
import androidx.appcompat.app.AppCompatActivity;
import androidx.core.app.ActivityCompat;
import androidx.core.content.ContextCompat;
import com.google.firebase.firestore.DocumentSnapshot;
import com.google.firebase.firestore.FirebaseFirestore;
import java.util.Random;
import java.util.regex.Pattern;

/**
 * РљР»Р°СЃСЃ MainActivity РїСЂРµРґСЃС‚Р°РІР»СЏРµС‚ СЃРѕР±РѕР№ РіР»Р°РІРЅСѓСЋ Р°РєС‚РёРІРЅРѕСЃС‚СЊ РїСЂРёР»РѕР¶РµРЅРёСЏ "OZON".
 * РћС‚РІРµС‡Р°РµС‚ Р·Р° Р°РІС‚РѕСЂРёР·Р°С†РёСЋ РїРѕР»СЊР·РѕРІР°С‚РµР»СЏ, РїСЂРµРґРѕСЃС‚Р°РІР»СЏРµС‚ РІРѕР·РјРѕР¶РЅРѕСЃС‚СЊ СЂРµРіРёСЃС‚СЂР°С†РёРё, РІС…РѕРґР° РґР»СЏ РїСЂРѕРґР°РІС†РѕРІ
 * Рё РІРѕСЃСЃС‚Р°РЅРѕРІР»РµРЅРёСЏ РїР°СЂРѕР»СЏ. РСЃРїРѕР»СЊР·СѓРµС‚ Firebase Firestore РґР»СЏ РїСЂРѕРІРµСЂРєРё СѓС‡РµС‚РЅС‹С… РґР°РЅРЅС‹С… Рё СѓРїСЂР°РІР»РµРЅРёСЏ
 * РїРѕР»СЊР·РѕРІР°С‚РµР»СЏРјРё.
 */
public class MainActivity extends AppCompatActivity {
    private static final String TAG = "MainActivity";
    private TextView registerLink, sellerAuthLink, forgotPasswordLink;
    private EditText loginField, passwordField;
    private FirebaseFirestore db;
    private SharedPreferences sharedPrefs;
    private static final Pattern SPECIAL_CHAR_PATTERN = Pattern.compile("[!@#$%^&*(),.?\":{}|<>]");

    /**
     * РРЅРёС†РёР°Р»РёР·РёСЂСѓРµС‚ Р°РєС‚РёРІРЅРѕСЃС‚СЊ Р°РІС‚РѕСЂРёР·Р°С†РёРё. РџСЂРѕРІРµСЂСЏРµС‚, Р°РІС‚РѕСЂРёР·РѕРІР°РЅ Р»Рё РїРѕР»СЊР·РѕРІР°С‚РµР»СЊ, Рё РїРµСЂРµРЅР°РїСЂР°РІР»СЏРµС‚
     * РµРіРѕ РІ СЃРѕРѕС‚РІРµС‚СЃС‚РІСѓСЋС‰СѓСЋ Р°РєС‚РёРІРЅРѕСЃС‚СЊ РІ Р·Р°РІРёСЃРёРјРѕСЃС‚Рё РѕС‚ СЂРѕР»Рё. Р•СЃР»Рё РїРѕР»СЊР·РѕРІР°С‚РµР»СЊ РЅРµ Р°РІС‚РѕСЂРёР·РѕРІР°РЅ,
     * РѕС‚РѕР±СЂР°Р¶Р°РµС‚ СЌРєСЂР°РЅ РІС…РѕРґР°, РЅР°СЃС‚СЂР°РёРІР°РµС‚ СЌР»РµРјРµРЅС‚С‹ UI Рё Р·Р°РїСЂР°С€РёРІР°РµС‚ СЂР°Р·СЂРµС€РµРЅРёРµ РЅР° СѓРІРµРґРѕРјР»РµРЅРёСЏ.
     */
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        NotificationHelper.createNotificationChannel(this);
        sharedPrefs = getSharedPreferences("AppPrefs", MODE_PRIVATE);
        if (sharedPrefs.getBoolean("isLoggedIn", false)) {
            String userId = sharedPrefs.getString("userId", "");
            String userRole = sharedPrefs.getString("userRole", "");
            if (userId == null || userId.isEmpty()) {
                return;
            }
            if ("customer".equals(userRole)) {
                startCustomerMainActivity(userId);
            } else if ("seller".equals(userRole)) {
                Intent intent = new Intent(this, AutorizationForSellerActivity.class);
                intent.putExtra("USER_DOCUMENT_ID", userId);
                intent.putExtra("USER_ROLE", "seller");
                startActivity(intent);
                finish();
            } else {
                Toast.makeText(this, "РќРµРёР·РІРµСЃС‚РЅР°СЏ СЂРѕР»СЊ РїРѕР»СЊР·РѕРІР°С‚РµР»СЏ: " + userRole, Toast.LENGTH_LONG).show();
                SharedPreferences.Editor editor = sharedPrefs.edit();
                editor.clear();
                editor.apply();
            }
            return;
        }
        setContentView(R.layout.activity_main);
        TextView logoText = findViewById(R.id.logoText);
        applyTextGradient(logoText);
        initializeViews();
        setupClickListeners();
        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.TIRAMISU) {
            requestNotificationPermission();
        }
    }

    /**
     * РџСЂРёРјРµРЅСЏРµС‚ РіСЂР°РґРёРµРЅС‚РЅС‹Р№ СЌС„С„РµРєС‚ Рє С‚РµРєСЃС‚Сѓ Р»РѕРіРѕС‚РёРїР°. РСЃРїРѕР»СЊР·СѓРµС‚ LinearGradient РґР»СЏ СЃРѕР·РґР°РЅРёСЏ
     * РїР»Р°РІРЅРѕРіРѕ РїРµСЂРµС…РѕРґР° С†РІРµС‚РѕРІ РѕС‚ СЃРёРЅРµРіРѕ Рє СЂРѕР·РѕРІРѕРјСѓ.
     */
    private void applyTextGradient(TextView textView) {
        textView.post(() -> {
            float width = textView.getPaint().measureText(textView.getText().toString());
            Shader textShader = new LinearGradient(
                    0, 0, width, textView.getTextSize(),
                    new int[]{Color.parseColor("#2B67FF"), Color.parseColor("#EC407A")},
                    null, Shader.TileMode.CLAMP
            );
            textView.getPaint().setShader(textShader);
            textView.invalidate();
        });
    }

    /**
     * РРЅРёС†РёР°Р»РёР·РёСЂСѓРµС‚ СЌР»РµРјРµРЅС‚С‹ UI, С‚Р°РєРёРµ РєР°Рє РїРѕР»СЏ РІРІРѕРґР° Р»РѕРіРёРЅР° Рё РїР°СЂРѕР»СЏ, СЃСЃС‹Р»РєРё РґР»СЏ СЂРµРіРёСЃС‚СЂР°С†РёРё,
     * РІС…РѕРґР° РїСЂРѕРґР°РІС†Р° Рё РІРѕСЃСЃС‚Р°РЅРѕРІР»РµРЅРёСЏ РїР°СЂРѕР»СЏ, Р° С‚Р°РєР¶Рµ РїРѕРґРєР»СЋС‡Р°РµС‚СЃСЏ Рє Firebase Firestore.
     */
    private void initializeViews() {
        db = FirebaseFirestore.getInstance();
        loginField = findViewById(R.id.loginField);
        passwordField = findViewById(R.id.passwordField);
        registerLink = findViewById(R.id.registerLink);
        sellerAuthLink = findViewById(R.id.sellerAuthLink);
        forgotPasswordLink = findViewById(R.id.forgotPasswordLink);
    }

    /**
     * РќР°СЃС‚СЂР°РёРІР°РµС‚ РѕР±СЂР°Р±РѕС‚С‡РёРєРё СЃРѕР±С‹С‚РёР№ РґР»СЏ СЃСЃС‹Р»РѕРє Рё РєРЅРѕРїРєРё РІС…РѕРґР°. РџРѕР·РІРѕР»СЏРµС‚ РїРµСЂРµС…РѕРґРёС‚СЊ РЅР° СЌРєСЂР°РЅС‹
     * СЂРµРіРёСЃС‚СЂР°С†РёРё, Р°РІС‚РѕСЂРёР·Р°С†РёРё РїСЂРѕРґР°РІС†Р°, РІРѕСЃСЃС‚Р°РЅРѕРІР»РµРЅРёСЏ РїР°СЂРѕР»СЏ Рё РІС‹РїРѕР»РЅСЏС‚СЊ РІС…РѕРґ.
     */
    private void setupClickListeners() {
        registerLink.setOnClickListener(v -> startActivity(new Intent(this, RegistrationActivity.class)));
        sellerAuthLink.setOnClickListener(v -> startActivity(new Intent(this, AutorizationForSellerActivity.class)));
        forgotPasswordLink.setOnClickListener(v -> showForgotPasswordDialog());
        findViewById(R.id.loginButton).setOnClickListener(v -> loginUser());
    }

    /**
     * Р—Р°РїСЂР°С€РёРІР°РµС‚ СЂР°Р·СЂРµС€РµРЅРёРµ РЅР° РѕС‚РїСЂР°РІРєСѓ СѓРІРµРґРѕРјР»РµРЅРёР№ РґР»СЏ СѓСЃС‚СЂРѕР№СЃС‚РІ СЃ Android 13 Рё РІС‹С€Рµ.
     */
    private void requestNotificationPermission() {
        if (ContextCompat.checkSelfPermission(this, android.Manifest.permission.POST_NOTIFICATIONS) != PackageManager.PERMISSION_GRANTED) {
            ActivityCompat.requestPermissions(this, new String[]{android.Manifest.permission.POST_NOTIFICATIONS}, 1);
        }
    }

    /**
     * РћР±СЂР°Р±Р°С‚С‹РІР°РµС‚ СЂРµР·СѓР»СЊС‚Р°С‚ Р·Р°РїСЂРѕСЃР° СЂР°Р·СЂРµС€РµРЅРёСЏ РЅР° СѓРІРµРґРѕРјР»РµРЅРёСЏ. Р•СЃР»Рё СЂР°Р·СЂРµС€РµРЅРёРµ РЅРµ РїСЂРµРґРѕСЃС‚Р°РІР»РµРЅРѕ,
     * РѕС‚РѕР±СЂР°Р¶Р°РµС‚ СЃРѕРѕР±С‰РµРЅРёРµ СЃ РїСЂРѕСЃСЊР±РѕР№ РІРєР»СЋС‡РёС‚СЊ СѓРІРµРґРѕРјР»РµРЅРёСЏ РІ РЅР°СЃС‚СЂРѕР№РєР°С….
     */
    @Override
    public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults) {
        super.onRequestPermissionsResult(requestCode, permissions, grantResults);
        if (requestCode == 1) {
            if (grantResults.length > 0 && grantResults[0] == PackageManager.PERMISSION_GRANTED) {
            } else {
                Toast.makeText(this, "РЈРІРµРґРѕРјР»РµРЅРёСЏ РѕС‚РєР»СЋС‡РµРЅС‹. Р’РєР»СЋС‡РёС‚Рµ РёС… РІ РЅР°СЃС‚СЂРѕР№РєР°С….", Toast.LENGTH_LONG).show();
            }
        }
    }

    /**
     * Р’С‹РїРѕР»РЅСЏРµС‚ Р°РІС‚РѕСЂРёР·Р°С†РёСЋ РїРѕР»СЊР·РѕРІР°С‚РµР»СЏ. РџСЂРѕРІРµСЂСЏРµС‚ РІРІРµРґРµРЅРЅС‹Рµ email Рё РїР°СЂРѕР»СЊ, РѕС‚РїСЂР°РІР»СЏРµС‚ Р·Р°РїСЂРѕСЃ
     * РІ Firebase Firestore РґР»СЏ РїРѕРёСЃРєР° РїРѕР»СЊР·РѕРІР°С‚РµР»СЏ. Р’ СЃР»СѓС‡Р°Рµ СѓСЃРїРµС…Р° СЃРѕС…СЂР°РЅСЏРµС‚ РґР°РЅРЅС‹Рµ Р°РІС‚РѕСЂРёР·Р°С†РёРё
     * Рё РїРµСЂРµРЅР°РїСЂР°РІР»СЏРµС‚ РїРѕР»СЊР·РѕРІР°С‚РµР»СЏ РІ СЃРѕРѕС‚РІРµС‚СЃС‚РІСѓСЋС‰СѓСЋ Р°РєС‚РёРІРЅРѕСЃС‚СЊ.
     */
    private void loginUser() {
        String email = loginField.getText().toString().trim();
        String password = passwordField.getText().toString().trim();
        if (email.isEmpty() || password.isEmpty()) {
            Toast.makeText(this, "Р—Р°РїРѕР»РЅРёС‚Рµ РІСЃРµ РїРѕР»СЏ", Toast.LENGTH_SHORT).show();
            return;
        }
        if (!NetworkUtil.isNetworkAvailable(this)) {
            Toast.makeText(this, "РќРµС‚ РїРѕРґРєР»СЋС‡РµРЅРёСЏ Рє РёРЅС‚РµСЂРЅРµС‚Сѓ", Toast.LENGTH_LONG).show();
            return;
        }
        findViewById(R.id.loginButton).setEnabled(false);
        ProgressBar progressBar = findViewById(R.id.progressBar);
        if (progressBar != null) {
            progressBar.setVisibility(View.VISIBLE);
        }
        new Thread(() -> {
            db.collection("users")
                    .whereEqualTo("email", email)
                    .whereEqualTo("password", password)
                    .get()
                    .addOnSuccessListener(queryDocumentSnapshots -> {
                        runOnUiThread(() -> {
                            if (progressBar != null) {
                                progressBar.setVisibility(View.GONE);
                            }
                            findViewById(R.id.loginButton).setEnabled(true);
                            if (queryDocumentSnapshots.isEmpty()) {
                                Toast.makeText(this, "РќРµРІРµСЂРЅС‹Рµ РґР°РЅРЅС‹Рµ", Toast.LENGTH_SHORT).show();
                            } else {
                                DocumentSnapshot userDoc = queryDocumentSnapshots.getDocuments().get(0);
                                String role = userDoc.getString("role");
                                String userId = userDoc.getId();
                                saveLoginData(userId, role);
                                if ("customer".equals(role)) {
                                    startCustomerMainActivity(userId);
                                } else {
                                    Toast.makeText(this, "РќРµРёР·РІРµСЃС‚РЅР°СЏ СЂРѕР»СЊ РїРѕР»СЊР·РѕРІР°С‚РµР»СЏ", Toast.LENGTH_SHORT).show();
                                }
                            }
                        });
                    })
                    .addOnFailureListener(e -> {
                        runOnUiThread(() -> {
                            if (progressBar != null) {
                                progressBar.setVisibility(View.GONE);
                            }
                            findViewById(R.id.loginButton).setEnabled(true);
                            Toast.makeText(this, "РћС€РёР±РєР° Р°РІС‚РѕСЂРёР·Р°С†РёРё", Toast.LENGTH_SHORT).show();
                        });
                    });
        }).start();
    }

    /**
     * РЎРѕС…СЂР°РЅСЏРµС‚ РґР°РЅРЅС‹Рµ Р°РІС‚РѕСЂРёР·Р°С†РёРё РїРѕР»СЊР·РѕРІР°С‚РµР»СЏ РІ SharedPreferences, РІРєР»СЋС‡Р°СЏ РёРґРµРЅС‚РёС„РёРєР°С‚РѕСЂ,
     * СЂРѕР»СЊ Рё СЃС‚Р°С‚СѓСЃ Р°РІС‚РѕСЂРёР·Р°С†РёРё. РћС‚РѕР±СЂР°Р¶Р°РµС‚ СЃРѕРѕР±С‰РµРЅРёРµ РѕР± РѕС€РёР±РєРµ, РµСЃР»Рё СЃРѕС…СЂР°РЅРµРЅРёРµ РЅРµ СѓРґР°Р»РѕСЃСЊ.
     */
    private void saveLoginData(String userId, String role) {
        SharedPreferences.Editor editor = sharedPrefs.edit();
        editor.putBoolean("isLoggedIn", true);
        editor.putString("userId", userId);
        editor.putString("userRole", role);
        boolean success = editor.commit();
        if (success) {
        } else {
            Toast.makeText(this, "РћС€РёР±РєР° СЃРѕС…СЂР°РЅРµРЅРёСЏ РґР°РЅРЅС‹С…", Toast.LENGTH_SHORT).show();
        }
    }

    /**
     * Р—Р°РїСѓСЃРєР°РµС‚ РѕСЃРЅРѕРІРЅСѓСЋ Р°РєС‚РёРІРЅРѕСЃС‚СЊ РґР»СЏ РїРѕРєСѓРїР°С‚РµР»СЏ, РїРµСЂРµРґР°РІР°СЏ РёРґРµРЅС‚РёС„РёРєР°С‚РѕСЂ РїРѕР»СЊР·РѕРІР°С‚РµР»СЏ
     * Рё РµРіРѕ СЂРѕР»СЊ. РџСЂРѕРІРµСЂСЏРµС‚ РєРѕСЂСЂРµРєС‚РЅРѕСЃС‚СЊ РёРґРµРЅС‚РёС„РёРєР°С‚РѕСЂР° РїРµСЂРµРґ Р·Р°РїСѓСЃРєРѕРј.
     */
    private void startCustomerMainActivity(String userId) {
        if (userId == null || userId.isEmpty()) {
            Toast.makeText(this, "РћС€РёР±РєР°: ID РїРѕР»СЊР·РѕРІР°С‚РµР»СЏ РЅРµ РѕРїСЂРµРґРµР»РµРЅ", Toast.LENGTH_LONG).show();
            return;
        }
        Intent intent = new Intent(this, CustomerMainActivity.class);
        intent.putExtra("USER_DOCUMENT_ID", userId);
        intent.putExtra("USER_ROLE", "customer");
        startActivity(intent);
        finish();
    }

    /**
     * РћС‚РѕР±СЂР°Р¶Р°РµС‚ РґРёР°Р»РѕРіРѕРІРѕРµ РѕРєРЅРѕ РґР»СЏ РІРѕСЃСЃС‚Р°РЅРѕРІР»РµРЅРёСЏ РїР°СЂРѕР»СЏ. РџРѕР·РІРѕР»СЏРµС‚ РїРѕР»СЊР·РѕРІР°С‚РµР»СЋ РІРІРµСЃС‚Рё
     * email, РїРѕР»СѓС‡РёС‚СЊ РєРѕРґ РїРѕРґС‚РІРµСЂР¶РґРµРЅРёСЏ Рё РІРІРµСЃС‚Рё РµРіРѕ РґР»СЏ РїРµСЂРµС…РѕРґР° Рє СЃРјРµРЅРµ РїР°СЂРѕР»СЏ.
     */
    private void showForgotPasswordDialog() {
        AlertDialog.Builder builder = new AlertDialog.Builder(this);
        View view = getLayoutInflater().inflate(R.layout.password_recovery, null);
        builder.setView(view);
        EditText emailField = view.findViewById(R.id.loginField);
        EditText codeField = view.findViewById(R.id.codeField);
        Button sendCodeButton = view.findViewById(R.id.sendCodeButton);
        Button changePasswordButton = view.findViewById(R.id.changePasswordButton);
        changePasswordButton.setEnabled(false);
        changePasswordButton.setAlpha(0.5f);
        AlertDialog dialog = builder.create();
        String[] generatedCode = {null};
        sendCodeButton.setOnClickListener(v -> handleSendCode(emailField, changePasswordButton, generatedCode));
        changePasswordButton.setOnClickListener(v -> handleChangePassword(emailField, codeField, generatedCode, dialog));
        dialog.show();
    }

    /**
     * РћР±СЂР°Р±Р°С‚С‹РІР°РµС‚ Р·Р°РїСЂРѕСЃ РЅР° РѕС‚РїСЂР°РІРєСѓ РєРѕРґР° РґР»СЏ РІРѕСЃСЃС‚Р°РЅРѕРІР»РµРЅРёСЏ РїР°СЂРѕР»СЏ. РџСЂРѕРІРµСЂСЏРµС‚ СЃСѓС‰РµСЃС‚РІРѕРІР°РЅРёРµ
     * РїРѕР»СЊР·РѕРІР°С‚РµР»СЏ СЃ СѓРєР°Р·Р°РЅРЅС‹Рј email РІ Firebase Firestore, РіРµРЅРµСЂРёСЂСѓРµС‚ РєРѕРґ Рё РѕС‚РїСЂР°РІР»СЏРµС‚ РµРіРѕ РЅР° email.
     */
    private void handleSendCode(EditText emailField, Button changePasswordButton, String[] generatedCode) {
        String email = emailField.getText().toString().trim();
        if (email.isEmpty()) {
            Toast.makeText(this, "Р’РІРµРґРёС‚Рµ email", Toast.LENGTH_SHORT).show();
            return;
        }
        db.collection("users")
                .whereEqualTo("email", email)
                .whereEqualTo("role", "customer")
                .get()
                .addOnSuccessListener(queryDocumentSnapshots -> {
                    if (!queryDocumentSnapshots.isEmpty()) {
                        generatedCode[0] = generateVerificationCode();
                        sendPasswordRecoveryEmail(email, generatedCode[0]);
                        changePasswordButton.setEnabled(true);
                        changePasswordButton.setAlpha(1.0f);
                    } else {
                        Toast.makeText(this, "РџРѕР»СЊР·РѕРІР°С‚РµР»СЊ РЅРµ РЅР°Р№РґРµРЅ", Toast.LENGTH_SHORT).show();
                    }
                })
                .addOnFailureListener(e -> {
                    Toast.makeText(this, "РћС€РёР±РєР° РїСЂРё РїСЂРѕРІРµСЂРєРµ email", Toast.LENGTH_SHORT).show();
                });
    }

    /**
     * РћР±СЂР°Р±Р°С‚С‹РІР°РµС‚ РїРѕРґС‚РІРµСЂР¶РґРµРЅРёРµ РєРѕРґР° РґР»СЏ РІРѕСЃСЃС‚Р°РЅРѕРІР»РµРЅРёСЏ РїР°СЂРѕР»СЏ. РџСЂРѕРІРµСЂСЏРµС‚ РІРІРµРґРµРЅРЅС‹Р№ РєРѕРґ
     * Рё, РµСЃР»Рё РѕРЅ РІРµСЂРЅС‹Р№, РѕС‚РєСЂС‹РІР°РµС‚ РґРёР°Р»РѕРіРѕРІРѕРµ РѕРєРЅРѕ РґР»СЏ СЃРјРµРЅС‹ РїР°СЂРѕР»СЏ.
     */
    private void handleChangePassword(EditText emailField, EditText codeField, String[] generatedCode, AlertDialog dialog) {
        String email = emailField.getText().toString().trim();
        String enteredCode = codeField.getText().toString().trim();
        if (email.isEmpty() || enteredCode.isEmpty()) {
            Toast.makeText(this, "Р—Р°РїРѕР»РЅРёС‚Рµ РІСЃРµ РїРѕР»СЏ", Toast.LENGTH_SHORT).show();
        } else if (generatedCode[0] == null) {
            Toast.makeText(this, "РЎРЅР°С‡Р°Р»Р° РѕС‚РїСЂР°РІСЊС‚Рµ РєРѕРґ", Toast.LENGTH_SHORT).show();
        } else if (!enteredCode.equals(generatedCode[0])) {
            Toast.makeText(this, "РќРµРІРµСЂРЅС‹Р№ РєРѕРґ", Toast.LENGTH_SHORT).show();
        } else {
            dialog.dismiss();
            showChangePasswordDialog(email);
        }
    }

    /**
     * РћС‚РїСЂР°РІР»СЏРµС‚ email СЃ РєРѕРґРѕРј РґР»СЏ РІРѕСЃСЃС‚Р°РЅРѕРІР»РµРЅРёСЏ РїР°СЂРѕР»СЏ. Р¤РѕСЂРјРёСЂСѓРµС‚ HTML-СЃРѕРѕР±С‰РµРЅРёРµ СЃ РєРѕРґРѕРј
     * Рё РѕС‚РїСЂР°РІР»СЏРµС‚ РµРіРѕ С‡РµСЂРµР· SendEmailTask.
     */
    private void sendPasswordRecoveryEmail(String email, String code) {
        String subject = "Р’РѕСЃСЃС‚Р°РЅРѕРІР»РµРЅРёРµ РїР°СЂРѕР»СЏ Ozon";
        String body = "<!DOCTYPE html>" +
                "<html lang='ru'>" +
                "<head>" +
                "<meta charset='UTF-8'>" +
                "<meta name='viewport' content='width=device-width, initial-scale=1.0'>" +
                "<title>Р’РѕСЃСЃС‚Р°РЅРѕРІР»РµРЅРёРµ РїР°СЂРѕР»СЏ</title>" +
                "</head>" +
                "<body style='margin: 0; padding: 0; font-family: Arial, sans-serif; background-color: #f4f4f4;'>" +
                "<table role='presentation' cellpadding='0' cellspacing='0' style='width: 100%; max-width: 600px; margin: 20px auto; background-color: #ffffff; border-radius: 8px; box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);'>" +
                "<tr>" +
                "<td style='background-color: #005BFF; padding: 20px; text-align: center; border-top-left-radius: 8px; border-top-right-radius: 8px;'>" +
                "<h1 style='color: #ffffff; margin: 0; font-size: 24px;'>Ozon</h1>" +
                "<h2 style='color: #ffffff; margin: 5px 0 0; font-size: 18px;'>Р’РѕСЃСЃС‚Р°РЅРѕРІР»РµРЅРёРµ РїР°СЂРѕР»СЏ</h2>" +
                "</td>" +
                "</tr>" +
                "<tr>" +
                "<td style='padding: 30px; text-align: center;'>" +
                "<h3 style='color: #001A34; font-size: 20px; margin: 0 0 10px;'>Р’Р°С€ РєРѕРґ РґР»СЏ РІРѕСЃСЃС‚Р°РЅРѕРІР»РµРЅРёСЏ РїР°СЂРѕР»СЏ</h3>" +
                "<p style='color: #666666; font-size: 16px; margin: 0 0 20px;'>РСЃРїРѕР»СЊР·СѓР№С‚Рµ СЌС‚РѕС‚ РєРѕРґ РґР»СЏ СЃР±СЂРѕСЃР° РїР°СЂРѕР»СЏ РІ РїСЂРёР»РѕР¶РµРЅРёРё Ozon:</p>" +
                "<div style='background-color: #E6F0FF; padding: 15px; border-radius: 5px; display: inline-block;'>" +
                "<span style='font-size: 24px; font-weight: bold; color: #005BFF; letter-spacing: 2px;'>" + code + "</span>" +
                "</div>" +
                "<p style='color: #666666; font-size: 14px; margin: 20px 0 0;'>РљРѕРґ РґРµР№СЃС‚РІРёС‚РµР»РµРЅ РІ С‚РµС‡РµРЅРёРµ 10 РјРёРЅСѓС‚.</p>" +
                "</td>" +
                "</tr>" +
                "<tr>" +
                "<td style='padding: 20px; text-align: center; background-color: #f9f9f9; border-bottom-left-radius: 8px; border-bottom-right-radius: 8px;'>" +
                "<p style='color: #999999; font-size: 12px; margin: 0;'>Р•СЃР»Рё РІС‹ РЅРµ Р·Р°РїСЂР°С€РёРІР°Р»Рё РІРѕСЃСЃС‚Р°РЅРѕРІР»РµРЅРёРµ РїР°СЂРѕР»СЏ, РїСЂРѕРёРіРЅРѕСЂРёСЂСѓР№С‚Рµ СЌС‚Рѕ СЃРѕРѕР±С‰РµРЅРёРµ.</p>" +
                "<p style='color: #999999; font-size: 12px; margin: 5px 0 0;'>РЎРІСЏР¶РёС‚РµСЃСЊ СЃ РЅР°РјРё: <a href='mailto:support@ozon.ru' style='color: #005BFF; text-decoration: none;'>support@ozon.ru</a></p>" +
                "</td>" +
                "</tr>" +
                "</table>" +
                "</body>" +
                "</html>";
        new SendEmailTask(this, email, subject, body, true).execute();
    }

    /**
     * РћС‚РѕР±СЂР°Р¶Р°РµС‚ РґРёР°Р»РѕРіРѕРІРѕРµ РѕРєРЅРѕ РґР»СЏ СЃРјРµРЅС‹ РїР°СЂРѕР»СЏ. РџРѕР·РІРѕР»СЏРµС‚ РїРѕР»СЊР·РѕРІР°С‚РµР»СЋ РІРІРµСЃС‚Рё РЅРѕРІС‹Р№ РїР°СЂРѕР»СЊ
     * Рё РїРѕРґС‚РІРµСЂРґРёС‚СЊ РµРіРѕ, РїРѕСЃР»Рµ С‡РµРіРѕ РІС‹Р·С‹РІР°РµС‚ РјРµС‚РѕРґ РґР»СЏ РѕР±РЅРѕРІР»РµРЅРёСЏ РїР°СЂРѕР»СЏ.
     */
    private void showChangePasswordDialog(String email) {
        AlertDialog.Builder builder = new AlertDialog.Builder(this);
        View view = getLayoutInflater().inflate(R.layout.change_password_layout, null);
        builder.setView(view);
        EditText newPasswordField = view.findViewById(R.id.newPasswordField);
        EditText confirmPasswordField = view.findViewById(R.id.confirmPasswordField);
        Button savePasswordButton = view.findViewById(R.id.savePasswordButton);
        AlertDialog dialog = builder.create();
        savePasswordButton.setOnClickListener(v -> updatePassword(email, newPasswordField, confirmPasswordField, dialog));
        dialog.show();
    }

    /**
     * РћР±РЅРѕРІР»СЏРµС‚ РїР°СЂРѕР»СЊ РїРѕР»СЊР·РѕРІР°С‚РµР»СЏ РІ Firebase Firestore. РџСЂРѕРІРµСЂСЏРµС‚ РІРІРµРґРµРЅРЅС‹Рµ РґР°РЅРЅС‹Рµ,
     * Рё РµСЃР»Рё РѕРЅРё РІР°Р»РёРґРЅС‹, РѕР±РЅРѕРІР»СЏРµС‚ РїР°СЂРѕР»СЊ РІ Р±Р°Р·Рµ РґР°РЅРЅС‹С… Рё Р·Р°РєСЂС‹РІР°РµС‚ РґРёР°Р»РѕРіРѕРІРѕРµ РѕРєРЅРѕ.
     */
    private void updatePassword(String email, EditText newPasswordField, EditText confirmPasswordField, AlertDialog dialog) {
        String newPassword = newPasswordField.getText().toString().trim();
        String confirmPassword = confirmPasswordField.getText().toString().trim();
        if (validateNewPassword(newPassword, confirmPassword)) {
            db.collection("users")
                    .whereEqualTo("email", email)
                    .get()
                    .addOnSuccessListener(queryDocumentSnapshots -> {
                        if (!queryDocumentSnapshots.isEmpty()) {
                            queryDocumentSnapshots.getDocuments().get(0).getReference()
                                    .update("password", newPassword)
                                    .addOnSuccessListener(aVoid -> {
                                        dialog.dismiss();
                                    })
                                    .addOnFailureListener(e -> {
                                        Toast.makeText(this, "РћС€РёР±РєР° РёР·РјРµРЅРµРЅРёСЏ РїР°СЂРѕР»СЏ: " + e.getMessage(), Toast.LENGTH_SHORT).show();
                                    });
                        }
                    })
                    .addOnFailureListener(e -> {
                    });
        }
    }

    /**
     * РџСЂРѕРІРµСЂСЏРµС‚ РєРѕСЂСЂРµРєС‚РЅРѕСЃС‚СЊ РЅРѕРІРѕРіРѕ РїР°СЂРѕР»СЏ. РЈР±РµР¶РґР°РµС‚СЃСЏ, С‡С‚Рѕ РїР°СЂРѕР»Рё СЃРѕРІРїР°РґР°СЋС‚, СЃРѕРѕС‚РІРµС‚СЃС‚РІСѓСЋС‚
     * РјРёРЅРёРјР°Р»СЊРЅРѕР№ РґР»РёРЅРµ Рё СЃРѕРґРµСЂР¶Р°С‚ Р·Р°РіР»Р°РІРЅС‹Рµ Рё СЃС‚СЂРѕС‡РЅС‹Рµ Р±СѓРєРІС‹, С†РёС„СЂС‹ Рё СЃРїРµС†РёР°Р»СЊРЅС‹Рµ СЃРёРјРІРѕР»С‹.
     */
    private boolean validateNewPassword(String newPassword, String confirmPassword) {
        if (newPassword.isEmpty() || confirmPassword.isEmpty()) {
            Toast.makeText(this, "Р—Р°РїРѕР»РЅРёС‚Рµ РІСЃРµ РїРѕР»СЏ", Toast.LENGTH_SHORT).show();
            return false;
        }
        if (!newPassword.equals(confirmPassword)) {
            Toast.makeText(this, "РџР°СЂРѕР»Рё РЅРµ СЃРѕРІРїР°РґР°СЋС‚", Toast.LENGTH_SHORT).show();
            return false;
        }
        if (newPassword.length() < 7) {
            Toast.makeText(this, "РџР°СЂРѕР»СЊ РґРѕР»Р¶РµРЅ СЃРѕРґРµСЂР¶Р°С‚СЊ РјРёРЅРёРјСѓРј 7 СЃРёРјРІРѕР»РѕРІ", Toast.LENGTH_SHORT).show();
            return false;
        }
        if (!Pattern.compile("[A-Z]").matcher(newPassword).find()) {
            Toast.makeText(this, "РџР°СЂРѕР»СЊ РґРѕР»Р¶РµРЅ СЃРѕРґРµСЂР¶Р°С‚СЊ С…РѕС‚СЏ Р±С‹ РѕРґРЅСѓ Р·Р°РіР»Р°РІРЅСѓСЋ Р±СѓРєРІСѓ", Toast.LENGTH_SHORT).show();
            return false;
        }
        if (!Pattern.compile("[a-z]").matcher(newPassword).find()) {
            Toast.makeText(this, "РџР°СЂРѕР»СЊ РґРѕР»Р¶РµРЅ СЃРѕРґРµСЂР¶Р°С‚СЊ С…РѕС‚СЏ Р±С‹ РѕРґРЅСѓ СЃС‚СЂРѕС‡РЅСѓСЋ Р±СѓРєРІСѓ", Toast.LENGTH_SHORT).show();
            return false;
        }
        if (!Pattern.compile("[0-9]").matcher(newPassword).find()) {
            Toast.makeText(this, "РџР°СЂРѕР»СЊ РґРѕР»Р¶РµРЅ СЃРѕРґРµСЂР¶Р°С‚СЊ С…РѕС‚СЏ Р±С‹ РѕРґРЅСѓ С†РёС„СЂСѓ", Toast.LENGTH_SHORT).show();
            return false;
        }
        if (!SPECIAL_CHAR_PATTERN.matcher(newPassword).find()) {
            Toast.makeText(this, "РџР°СЂРѕР»СЊ РґРѕР»Р¶РµРЅ СЃРѕРґРµСЂР¶Р°С‚СЊ С…РѕС‚СЏ Р±С‹ РѕРґРёРЅ СЃРїРµС†РёР°Р»СЊРЅС‹Р№ СЃРёРјРІРѕР» (!@#$%^&*(),.?\":{}|<>)", Toast.LENGTH_SHORT).show();
            return false;
        }
        return true;
    }

    /**
     * Р“РµРЅРµСЂРёСЂСѓРµС‚ СЃР»СѓС‡Р°Р№РЅС‹Р№ РїСЏС‚РёР·РЅР°С‡РЅС‹Р№ РєРѕРґ РґР»СЏ РІРѕСЃСЃС‚Р°РЅРѕРІР»РµРЅРёСЏ РїР°СЂРѕР»СЏ.
     */
    private String generateVerificationCode() {
        return String.valueOf(10000 + new Random().nextInt(90000));
    }
}

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\java\com\example\ozon\MapSelectionActivity.java
package com.example.ozon;

import android.Manifest;
import android.content.Context;
import android.content.Intent;
import android.content.pm.PackageManager;
import android.location.Location;
import android.net.ConnectivityManager;
import android.net.NetworkInfo;
import android.os.Build;
import android.os.Bundle;
import android.view.MotionEvent;
import android.view.View;
import android.widget.Button;
import android.widget.Toast;
import androidx.annotation.NonNull;
import androidx.appcompat.app.AppCompatActivity;
import androidx.core.app.ActivityCompat;
import androidx.core.content.ContextCompat;
import com.google.android.gms.location.FusedLocationProviderClient;
import com.google.android.gms.location.LocationCallback;
import com.google.android.gms.location.LocationRequest;
import com.google.android.gms.location.LocationResult;
import com.google.android.gms.location.LocationServices;
import com.yandex.mapkit.MapKitFactory;
import com.yandex.mapkit.Animation;
import com.yandex.mapkit.geometry.Point;
import com.yandex.mapkit.map.CameraPosition;
import com.yandex.mapkit.map.InputListener;
import com.yandex.mapkit.map.Map;
import com.yandex.mapkit.map.PlacemarkMapObject;
import com.yandex.mapkit.mapview.MapView;
import com.yandex.mapkit.search.SearchFactory;
import com.yandex.mapkit.search.SearchManager;
import com.yandex.mapkit.search.SearchManagerType;
import com.yandex.mapkit.search.SearchOptions;
import com.yandex.mapkit.search.Session;
import com.yandex.runtime.Error;
import com.yandex.runtime.image.ImageProvider;
import com.yandex.runtime.network.NetworkError;
import com.yandex.runtime.network.RemoteError;

/**
 * РљР»Р°СЃСЃ MapSelectionActivity РїСЂРµРґСЃС‚Р°РІР»СЏРµС‚ СЃРѕР±РѕР№ Р°РєС‚РёРІРЅРѕСЃС‚СЊ РґР»СЏ РІС‹Р±РѕСЂР° Р°РґСЂРµСЃР° РґРѕСЃС‚Р°РІРєРё
 * РЅР° РєР°СЂС‚Рµ РІ РїСЂРёР»РѕР¶РµРЅРёРё "OZON". РСЃРїРѕР»СЊР·СѓРµС‚ Yandex MapKit РґР»СЏ РѕС‚РѕР±СЂР°Р¶РµРЅРёСЏ
 * РєР°СЂС‚С‹, РѕРїСЂРµРґРµР»РµРЅРёСЏ С‚РµРєСѓС‰РµРіРѕ РјРµСЃС‚РѕРїРѕР»РѕР¶РµРЅРёСЏ РїРѕР»СЊР·РѕРІР°С‚РµР»СЏ Рё РїРѕРёСЃРєР° Р°РґСЂРµСЃР° РїРѕ РєРѕРѕСЂРґРёРЅР°С‚Р°Рј.
 * РџРѕР·РІРѕР»СЏРµС‚ РїРѕР»СЊР·РѕРІР°С‚РµР»СЋ РІСЂСѓС‡РЅСѓСЋ РІС‹Р±СЂР°С‚СЊ С‚РѕС‡РєСѓ РЅР° РєР°СЂС‚Рµ РёР»Рё РёСЃРїРѕР»СЊР·РѕРІР°С‚СЊ С‚РµРєСѓС‰РµРµ РјРµСЃС‚РѕРїРѕР»РѕР¶РµРЅРёРµ.
 */
public class MapSelectionActivity extends AppCompatActivity {
    private static final int LOCATION_PERMISSION_REQUEST_CODE = 1001;
    private static final String YANDEX_MAPKIT_API_KEY = "3847ea55-35fb-4a64-a196-4839fac767be";
    private static boolean isMapKitInitialized = false;
    private MapView mapView;
    private SearchManager searchManager;
    private Point selectedPoint;
    private String selectedAddress;
    private Session searchSession;
    private Button btnConfirm;
    private Button btnResetSelection;
    private Button btnCancelSelection;
    private InputListener mapInputListener;
    private boolean isManualSelection = false;
    private boolean isInitialAddressShown = false;
    private PlacemarkMapObject userLocationMarker;
    private PlacemarkMapObject selectedLocationMarker;
    private FusedLocationProviderClient fusedLocationClient;
    private LocationCallback locationCallback;

    /**
     * РРЅРёС†РёР°Р»РёР·РёСЂСѓРµС‚ Р°РєС‚РёРІРЅРѕСЃС‚СЊ РІС‹Р±РѕСЂР° Р°РґСЂРµСЃР° РЅР° РєР°СЂС‚Рµ. РќР°СЃС‚СЂР°РёРІР°РµС‚ Yandex MapKit, РїСЂРѕРІРµСЂСЏРµС‚
     * РЅР°Р»РёС‡РёРµ РёРЅС‚РµСЂРЅРµС‚-СЃРѕРµРґРёРЅРµРЅРёСЏ, РёРЅРёС†РёР°Р»РёР·РёСЂСѓРµС‚ СЌР»РµРјРµРЅС‚С‹ UI, РєР°СЂС‚Сѓ Рё СЃРµСЂРІРёСЃС‹ РѕРїСЂРµРґРµР»РµРЅРёСЏ
     * РјРµСЃС‚РѕРїРѕР»РѕР¶РµРЅРёСЏ. Р—Р°РїСЂР°С€РёРІР°РµС‚ СЂР°Р·СЂРµС€РµРЅРёСЏ РЅР° РґРѕСЃС‚СѓРї Рє РјРµСЃС‚РѕРїРѕР»РѕР¶РµРЅРёСЋ Рё СѓРІРµРґРѕРјР»РµРЅРёСЏРј.
     */
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        synchronized (MapSelectionActivity.class) {
            if (!isMapKitInitialized) {
                MapKitFactory.setApiKey(YANDEX_MAPKIT_API_KEY);
                MapKitFactory.initialize(this);
                isMapKitInitialized = true;
            }
        }
        if (!isNetworkAvailable()) {
            Toast.makeText(this, "РќРµС‚ РёРЅС‚РµСЂРЅРµС‚-СЃРѕРµРґРёРЅРµРЅРёСЏ", Toast.LENGTH_LONG).show();
        }
        setContentView(R.layout.activity_map);
        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.TIRAMISU) {
            requestPermissions(
                    new String[]{Manifest.permission.POST_NOTIFICATIONS},
                    LOCATION_PERMISSION_REQUEST_CODE
            );
        }
        initViews();
        setupMap();
        initLocationServices();
        checkLocationPermissionAndMoveToCurrentLocation();
    }

    /**
     * РџСЂРѕРІРµСЂСЏРµС‚ РЅР°Р»РёС‡РёРµ РёРЅС‚РµСЂРЅРµС‚-СЃРѕРµРґРёРЅРµРЅРёСЏ. РСЃРїРѕР»СЊР·СѓРµС‚ ConnectivityManager РґР»СЏ РѕРїСЂРµРґРµР»РµРЅРёСЏ
     * СЃРѕСЃС‚РѕСЏРЅРёСЏ СЃРµС‚Рё, СѓС‡РёС‚С‹РІР°СЏ СЂР°Р·Р»РёС‡РёСЏ РІ API РґР»СЏ СЂР°Р·РЅС‹С… РІРµСЂСЃРёР№ Android.
     */
    private boolean isNetworkAvailable() {
        try {
            ConnectivityManager cm = (ConnectivityManager) getSystemService(Context.CONNECTIVITY_SERVICE);
            if (cm == null) return false;
            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {
                return cm.getActiveNetwork() != null;
            } else {
                NetworkInfo activeNetwork = cm.getActiveNetworkInfo();
                return activeNetwork != null && activeNetwork.isConnected();
            }
        } catch (Exception e) {
            return false;
        }
    }

    /**
     * РРЅРёС†РёР°Р»РёР·РёСЂСѓРµС‚ СЌР»РµРјРµРЅС‚С‹ UI, С‚Р°РєРёРµ РєР°Рє РєР°СЂС‚Р°, РєРЅРѕРїРєРё РїРѕРґС‚РІРµСЂР¶РґРµРЅРёСЏ, СЃР±СЂРѕСЃР° Рё РѕС‚РјРµРЅС‹ РІС‹Р±РѕСЂР°.
     * РќР°СЃС‚СЂР°РёРІР°РµС‚ РѕР±СЂР°Р±РѕС‚С‡РёРєРё СЃРѕР±С‹С‚РёР№ РґР»СЏ РєРЅРѕРїРѕРє.
     */
    private void initViews() {
        mapView = findViewById(R.id.mapview);
        btnConfirm = findViewById(R.id.btnConfirmSelection);
        btnResetSelection = findViewById(R.id.btnResetLocation);
        btnCancelSelection = findViewById(R.id.btnCancelSelection);
        btnConfirm.setEnabled(false);
        btnResetSelection.setVisibility(View.GONE);
        btnConfirm.setOnClickListener(v -> {
            if (selectedPoint != null && selectedAddress != null && !selectedAddress.equals("РћРїСЂРµРґРµР»РµРЅРёРµ Р°РґСЂРµСЃР°...")) {
                returnResult();
            } else {
                Toast.makeText(this, "Р”РѕР¶РґРёС‚РµСЃСЊ РѕРїСЂРµРґРµР»РµРЅРёСЏ Р°РґСЂРµСЃР°", Toast.LENGTH_SHORT).show();
            }
        });
        btnResetSelection.setOnClickListener(v -> {
            isManualSelection = false;
            if (selectedLocationMarker != null) {
                mapView.getMap().getMapObjects().remove(selectedLocationMarker);
                selectedLocationMarker = null;
            }
            btnResetSelection.setVisibility(View.GONE);
            resetToLocationTracking();
        });
        btnCancelSelection.setOnClickListener(v -> {
            Intent resultIntent = new Intent();
            setResult(RESULT_CANCELED, resultIntent);
            finish();
        });
    }

    /**
     * РРЅРёС†РёР°Р»РёР·РёСЂСѓРµС‚ СЃРµСЂРІРёСЃС‹ РѕРїСЂРµРґРµР»РµРЅРёСЏ РјРµСЃС‚РѕРїРѕР»РѕР¶РµРЅРёСЏ СЃ РёСЃРїРѕР»СЊР·РѕРІР°РЅРёРµРј FusedLocationProviderClient.
     * РџРѕРґРіРѕС‚Р°РІР»РёРІР°РµС‚ РѕР±СЉРµРєС‚ РґР»СЏ РїРѕР»СѓС‡РµРЅРёСЏ РѕР±РЅРѕРІР»РµРЅРёР№ РјРµСЃС‚РѕРїРѕР»РѕР¶РµРЅРёСЏ.
     */
    private void initLocationServices() {
        fusedLocationClient = LocationServices.getFusedLocationProviderClient(this);
        createLocationRequest();
    }

    /**
     * РЎРѕР·РґР°РµС‚ Р·Р°РїСЂРѕСЃ РЅР° РѕР±РЅРѕРІР»РµРЅРёРµ РјРµСЃС‚РѕРїРѕР»РѕР¶РµРЅРёСЏ СЃ Р·Р°РґР°РЅРЅС‹РјРё РїР°СЂР°РјРµС‚СЂР°РјРё (РёРЅС‚РµСЂРІР°Р», РїСЂРёРѕСЂРёС‚РµС‚).
     * РќР°СЃС‚СЂР°РёРІР°РµС‚ callback РґР»СЏ РѕР±СЂР°Р±РѕС‚РєРё РЅРѕРІС‹С… РґР°РЅРЅС‹С… Рѕ РјРµСЃС‚РѕРїРѕР»РѕР¶РµРЅРёРё.
     */
    private void createLocationRequest() {
        LocationRequest locationRequest = LocationRequest.create();
        locationRequest.setInterval(10000);
        locationRequest.setFastestInterval(5000);
        locationRequest.setPriority(LocationRequest.PRIORITY_HIGH_ACCURACY);
        locationCallback = new LocationCallback() {
            @Override
            public void onLocationResult(LocationResult locationResult) {
                if (locationResult == null || isManualSelection) {
                    return;
                }
                for (Location location : locationResult.getLocations()) {
                    updateLocationOnMap(location);
                }
            }
        };
        if (ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_FINE_LOCATION)
                != PackageManager.PERMISSION_GRANTED
                && ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_COARSE_LOCATION)
                != PackageManager.PERMISSION_GRANTED) {
            return;
        }
        fusedLocationClient.requestLocationUpdates(locationRequest, locationCallback, null);
    }

    /**
     * РћР±РЅРѕРІР»СЏРµС‚ РѕС‚РѕР±СЂР°Р¶РµРЅРёРµ С‚РµРєСѓС‰РµРіРѕ РјРµСЃС‚РѕРїРѕР»РѕР¶РµРЅРёСЏ РїРѕР»СЊР·РѕРІР°С‚РµР»СЏ РЅР° РєР°СЂС‚Рµ. Р”РѕР±Р°РІР»СЏРµС‚ РјР°СЂРєРµСЂ
     * С‚РµРєСѓС‰РµР№ РїРѕР·РёС†РёРё Рё РїРµСЂРµРјРµС‰Р°РµС‚ РєР°РјРµСЂСѓ РєР°СЂС‚С‹ Рє СЌС‚РѕР№ С‚РѕС‡РєРµ, РµСЃР»Рё РЅРµ РІС‹Р±СЂР°РЅ СЂСѓС‡РЅРѕР№ СЂРµР¶РёРј.
     */
    private void updateLocationOnMap(Location location) {
        if (mapView != null && location != null) {
            Point currentLocation = new Point(location.getLatitude(), location.getLongitude());
            if (userLocationMarker != null) {
                mapView.getMap().getMapObjects().remove(userLocationMarker);
            }
            userLocationMarker = mapView.getMap().getMapObjects().addPlacemark(currentLocation);
            userLocationMarker.setIcon(ImageProvider.fromResource(this, R.drawable.myaddres));
            if (!isManualSelection) {
                mapView.getMap().move(
                        new CameraPosition(currentLocation, 15.0f, 0.0f, 0.0f),
                        new Animation(Animation.Type.SMOOTH, 1),
                        null
                );
                selectedPoint = currentLocation;
                if (!isInitialAddressShown) {
                    searchAddress(currentLocation);
                }
            }
        }
    }

    /**
     * РќР°СЃС‚СЂР°РёРІР°РµС‚ РєР°СЂС‚Сѓ Yandex MapKit. РЈСЃС‚Р°РЅР°РІР»РёРІР°РµС‚ РЅР°С‡Р°Р»СЊРЅСѓСЋ РїРѕР·РёС†РёСЋ РєР°РјРµСЂС‹, РёРЅРёС†РёР°Р»РёР·РёСЂСѓРµС‚
     * РјРµРЅРµРґР¶РµСЂ РїРѕРёСЃРєР° Р°РґСЂРµСЃРѕРІ Рё РґРѕР±Р°РІР»СЏРµС‚ СЃР»СѓС€Р°С‚РµР»СЊ РґР»СЏ РѕР±СЂР°Р±РѕС‚РєРё РєР°СЃР°РЅРёР№ РєР°СЂС‚С‹.
     */
    private void setupMap() {
        Point startPoint = new Point(55.751574, 37.573856);
        mapView.getMap().move(new CameraPosition(startPoint, 15f, 0f, 0f));
        searchManager = SearchFactory.getInstance().createSearchManager(SearchManagerType.COMBINED);
        if (mapInputListener != null) {
            mapView.getMap().removeInputListener(mapInputListener);
        }
        mapInputListener = new InputListener() {
            @Override
            public void onMapTap(@NonNull Map map, @NonNull Point point) {
                handleMapTap(point);
            }
            @Override
            public void onMapLongTap(@NonNull Map map, @NonNull Point point) {
            }
        };

        mapView.getMap().addInputListener(mapInputListener);
    }

    /**
     * РћР±СЂР°Р±Р°С‚С‹РІР°РµС‚ РєР°СЃР°РЅРёРµ РєР°СЂС‚С‹ РїРѕР»СЊР·РѕРІР°С‚РµР»РµРј. РџРµСЂРµРєР»СЋС‡Р°РµС‚ СЂРµР¶РёРј РЅР° СЂСѓС‡РЅРѕР№ РІС‹Р±РѕСЂ, РґРѕР±Р°РІР»СЏРµС‚
     * РјР°СЂРєРµСЂ РІС‹Р±СЂР°РЅРЅРѕР№ С‚РѕС‡РєРё, РїРµСЂРµРјРµС‰Р°РµС‚ РєР°РјРµСЂСѓ Рє СЌС‚РѕР№ С‚РѕС‡РєРµ Рё РёРЅРёС†РёРёСЂСѓРµС‚ РїРѕРёСЃРє Р°РґСЂРµСЃР°.
     */
    private void handleMapTap(Point point) {
        isManualSelection = true;
        btnResetSelection.setVisibility(View.VISIBLE);
        if (selectedLocationMarker != null) {
            mapView.getMap().getMapObjects().remove(selectedLocationMarker);
        }
        selectedLocationMarker = mapView.getMap().getMapObjects().addPlacemark(point);
        selectedLocationMarker.setIcon(ImageProvider.fromResource(this, R.drawable.selectaddres));
        mapView.getMap().move(
                new CameraPosition(point, 15f, 0f, 0f),
                new Animation(Animation.Type.SMOOTH, 0.3f),
                null
        );
        selectedPoint = point;
        selectedAddress = "РћРїСЂРµРґРµР»РµРЅРёРµ Р°РґСЂРµСЃР°...";
        btnConfirm.setEnabled(false);
        if (searchSession != null) {
            searchSession.cancel();
        }
        searchAddress(point);
    }

    /**
     * РЎР±СЂР°СЃС‹РІР°РµС‚ РІС‹Р±РѕСЂ Р°РґСЂРµСЃР° Рє С‚РµРєСѓС‰РµРјСѓ РјРµСЃС‚РѕРїРѕР»РѕР¶РµРЅРёСЋ РїРѕР»СЊР·РѕРІР°С‚РµР»СЏ. РЈРґР°Р»СЏРµС‚ РјР°СЂРєРµСЂ СЂСѓС‡РЅРѕРіРѕ
     * РІС‹Р±РѕСЂР° Рё Р·Р°РїСЂР°С€РёРІР°РµС‚ РїРѕСЃР»РµРґРЅРµРµ РёР·РІРµСЃС‚РЅРѕРµ РјРµСЃС‚РѕРїРѕР»РѕР¶РµРЅРёРµ РґР»СЏ РѕР±РЅРѕРІР»РµРЅРёСЏ РєР°СЂС‚С‹.
     */
    private void resetToLocationTracking() {
        if (ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_FINE_LOCATION) == PackageManager.PERMISSION_GRANTED
                || ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_COARSE_LOCATION) == PackageManager.PERMISSION_GRANTED) {
            fusedLocationClient.getLastLocation()
                    .addOnSuccessListener(this, location -> {
                        if (location != null) {
                            updateLocationOnMap(location);
                        }
                    });
        }
    }

    /**
     * Р’С‹РїРѕР»РЅСЏРµС‚ РїРѕРёСЃРє Р°РґСЂРµСЃР° РїРѕ Р·Р°РґР°РЅРЅС‹Рј РєРѕРѕСЂРґРёРЅР°С‚Р°Рј СЃ РёСЃРїРѕР»СЊР·РѕРІР°РЅРёРµРј Yandex MapKit Search.
     * РћР±РЅРѕРІР»СЏРµС‚ РІС‹Р±СЂР°РЅРЅС‹Р№ Р°РґСЂРµСЃ Рё Р°РєС‚РёРІРёСЂСѓРµС‚ РєРЅРѕРїРєСѓ РїРѕРґС‚РІРµСЂР¶РґРµРЅРёСЏ РїСЂРё СѓСЃРїРµС€РЅРѕРј РїРѕРёСЃРєРµ.
     */
    private void searchAddress(Point point) {
        searchSession = searchManager.submit(
                point,
                15,
                new SearchOptions(),
                new Session.SearchListener() {
                    @Override
                    public void onSearchResponse(@NonNull com.yandex.mapkit.search.Response response) {
                        try {
                            if (response.getCollection() != null && !response.getCollection().getChildren().isEmpty()) {
                                selectedAddress = response.getCollection().getChildren().get(0).getObj().getName();
                            } else {
                                selectedAddress = "РђРґСЂРµСЃ РЅРµ РѕРїСЂРµРґРµР»РµРЅ";
                            }
                            runOnUiThread(() -> {
                                if (!isInitialAddressShown || isManualSelection) {
                                    Toast.makeText(MapSelectionActivity.this,
                                            "Р’С‹Р±СЂР°РЅРѕ: " + selectedAddress,
                                            Toast.LENGTH_LONG).show();
                                    isInitialAddressShown = true;
                                }
                                btnConfirm.setEnabled(true);
                            });
                        } catch (Exception e) {
                        }
                    }
                    @Override
                    public void onSearchError(@NonNull Error error) {
                        runOnUiThread(() -> {
                            String errorMessage = "РћС€РёР±РєР° РїСЂРё РїРѕРёСЃРєРµ Р°РґСЂРµСЃР°";
                            if (error instanceof NetworkError) {
                                errorMessage = "РќРµС‚ РёРЅС‚РµСЂРЅРµС‚-СЃРѕРµРґРёРЅРµРЅРёСЏ";
                            } else if (error instanceof RemoteError) {
                                errorMessage = "РћС€РёР±РєР° СЃРµСЂРІРµСЂР°";
                            }
                            Toast.makeText(
                                    MapSelectionActivity.this,
                                    errorMessage,
                                    Toast.LENGTH_SHORT
                            ).show();
                            btnConfirm.setEnabled(false);
                            selectedAddress = "РћС€РёР±РєР° РѕРїСЂРµРґРµР»РµРЅРёСЏ Р°РґСЂРµСЃР°";
                        });
                    }
                }
        );
    }

    /**
     * РџСЂРѕРІРµСЂСЏРµС‚ РЅР°Р»РёС‡РёРµ СЂР°Р·СЂРµС€РµРЅРёР№ РЅР° РґРѕСЃС‚СѓРї Рє РјРµСЃС‚РѕРїРѕР»РѕР¶РµРЅРёСЋ. Р•СЃР»Рё СЂР°Р·СЂРµС€РµРЅРёСЏ РїСЂРµРґРѕСЃС‚Р°РІР»РµРЅС‹,
     * РїРµСЂРµРјРµС‰Р°РµС‚ РєР°СЂС‚Сѓ Рє С‚РµРєСѓС‰РµРјСѓ РјРµСЃС‚РѕРїРѕР»РѕР¶РµРЅРёСЋ РїРѕР»СЊР·РѕРІР°С‚РµР»СЏ, РёРЅР°С‡Рµ Р·Р°РїСЂР°С€РёРІР°РµС‚ СЂР°Р·СЂРµС€РµРЅРёСЏ.
     */
    private void checkLocationPermissionAndMoveToCurrentLocation() {
        if (ContextCompat.checkSelfPermission(this, Manifest.permission.ACCESS_FINE_LOCATION) == PackageManager.PERMISSION_GRANTED
                || ContextCompat.checkSelfPermission(this, Manifest.permission.ACCESS_COARSE_LOCATION) == PackageManager.PERMISSION_GRANTED) {
            fusedLocationClient.getLastLocation()
                    .addOnSuccessListener(this, location -> {
                        if (location != null) {
                            updateLocationOnMap(location);
                        } else {
                            Toast.makeText(this, "РќРµ СѓРґР°Р»РѕСЃСЊ РѕРїСЂРµРґРµР»РёС‚СЊ РјРµСЃС‚РѕРїРѕР»РѕР¶РµРЅРёРµ", Toast.LENGTH_SHORT).show();
                            Point defaultPoint = new Point(55.751574, 37.573856);
                            mapView.getMap().move(new CameraPosition(defaultPoint, 15f, 0f, 0f));
                        }
                    })
                    .addOnFailureListener(e -> {
                        Toast.makeText(this, "РћС€РёР±РєР° РїРѕР»СѓС‡РµРЅРёСЏ РјРµСЃС‚РѕРїРѕР»РѕР¶РµРЅРёСЏ: " + e.getMessage(), Toast.LENGTH_SHORT).show();
                        Point defaultPoint = new Point(55.751574, 37.573856);
                        mapView.getMap().move(new CameraPosition(defaultPoint, 15f, 0f, 0f));
                    });
        } else {
            ActivityCompat.requestPermissions(this,
                    new String[]{
                            Manifest.permission.ACCESS_FINE_LOCATION,
                            Manifest.permission.ACCESS_COARSE_LOCATION
                    },
                    LOCATION_PERMISSION_REQUEST_CODE
            );
        }
    }

    /**
     * РћР±СЂР°Р±Р°С‚С‹РІР°РµС‚ СЂРµР·СѓР»СЊС‚Р°С‚ Р·Р°РїСЂРѕСЃР° СЂР°Р·СЂРµС€РµРЅРёР№ РЅР° РґРѕСЃС‚СѓРї Рє РјРµСЃС‚РѕРїРѕР»РѕР¶РµРЅРёСЋ. Р•СЃР»Рё СЂР°Р·СЂРµС€РµРЅРёСЏ
     * РїСЂРµРґРѕСЃС‚Р°РІР»РµРЅС‹, РїРµСЂРµРјРµС‰Р°РµС‚ РєР°СЂС‚Сѓ Рє С‚РµРєСѓС‰РµРјСѓ РјРµСЃС‚РѕРїРѕР»РѕР¶РµРЅРёСЋ, РёРЅР°С‡Рµ РѕС‚РѕР±СЂР°Р¶Р°РµС‚ РєР°СЂС‚Сѓ СЃ
     * РЅР°С‡Р°Р»СЊРЅРѕР№ С‚РѕС‡РєРѕР№.
     */
    @Override
    public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults) {
        super.onRequestPermissionsResult(requestCode, permissions, grantResults);
        if (requestCode == LOCATION_PERMISSION_REQUEST_CODE) {
            if (grantResults.length > 0 && grantResults[0] == PackageManager.PERMISSION_GRANTED) {
                checkLocationPermissionAndMoveToCurrentLocation();
            } else {
                Toast.makeText(this,
                        "Р”Р»СЏ С‚РѕС‡РЅРѕРіРѕ РѕРїСЂРµРґРµР»РµРЅРёСЏ РјРµСЃС‚РѕРїРѕР»РѕР¶РµРЅРёСЏ РЅСѓР¶РЅС‹ СЂР°Р·СЂРµС€РµРЅРёСЏ",
                        Toast.LENGTH_LONG).show();
                Point startPoint = new Point(55.751574, 37.573856);
                mapView.getMap().move(new CameraPosition(startPoint, 15f, 0f, 0f));
            }
        }
    }

    /**
     * Р’РѕР·РІСЂР°С‰Р°РµС‚ СЂРµР·СѓР»СЊС‚Р°С‚ РІС‹Р±РѕСЂР° Р°РґСЂРµСЃР° (Р°РґСЂРµСЃ, С€РёСЂРѕС‚Сѓ Рё РґРѕР»РіРѕС‚Сѓ) РІ РІС‹Р·С‹РІР°СЋС‰СѓСЋ Р°РєС‚РёРІРЅРѕСЃС‚СЊ
     * Рё Р·Р°РІРµСЂС€Р°РµС‚ С‚РµРєСѓС‰СѓСЋ Р°РєС‚РёРІРЅРѕСЃС‚СЊ.
     */
    private void returnResult() {
        Intent resultIntent = new Intent();
        resultIntent.putExtra("SELECTED_ADDRESS", selectedAddress);
        resultIntent.putExtra("LATITUDE", selectedPoint.getLatitude());
        resultIntent.putExtra("LONGITUDE", selectedPoint.getLongitude());
        setResult(RESULT_OK, resultIntent);
        finish();
    }

    /**
     * Р’С‹Р·С‹РІР°РµС‚СЃСЏ РїСЂРё Р·Р°РїСѓСЃРєРµ Р°РєС‚РёРІРЅРѕСЃС‚Рё. РђРєС‚РёРІРёСЂСѓРµС‚ Yandex MapKit Рё MapView РґР»СЏ РѕС‚РѕР±СЂР°Р¶РµРЅРёСЏ РєР°СЂС‚С‹.
     */
    @Override
    protected void onStart() {
        super.onStart();
        MapKitFactory.getInstance().onStart();
        mapView.onStart();
    }

    /**
     * Р’С‹Р·С‹РІР°РµС‚СЃСЏ РїСЂРё РѕСЃС‚Р°РЅРѕРІРєРµ Р°РєС‚РёРІРЅРѕСЃС‚Рё. РћС‚РјРµРЅСЏРµС‚ С‚РµРєСѓС‰РёР№ РїРѕРёСЃРє Р°РґСЂРµСЃР°, РѕСЃС‚Р°РЅР°РІР»РёРІР°РµС‚ РѕР±РЅРѕРІР»РµРЅРёСЏ
     * РјРµСЃС‚РѕРїРѕР»РѕР¶РµРЅРёСЏ, СѓРґР°Р»СЏРµС‚ СЃР»СѓС€Р°С‚РµР»СЊ РєР°СЂС‚С‹ Рё РґРµР°РєС‚РёРІРёСЂСѓРµС‚ Yandex MapKit Рё MapView.
     */
    @Override
    protected void onStop() {
        super.onStop();
        if (searchSession != null) {
            searchSession.cancel();
        }
        if (fusedLocationClient != null && locationCallback != null) {
            fusedLocationClient.removeLocationUpdates(locationCallback);
        }
        if (mapInputListener != null) {
            mapView.getMap().removeInputListener(mapInputListener);
        }
        mapView.onStop();
        MapKitFactory.getInstance().onStop();
    }

    /**
     * Р’С‹Р·С‹РІР°РµС‚СЃСЏ РїСЂРё РїСЂРёРѕСЃС‚Р°РЅРѕРІРєРµ Р°РєС‚РёРІРЅРѕСЃС‚Рё. РћСЃС‚Р°РЅР°РІР»РёРІР°РµС‚ РѕР±РЅРѕРІР»РµРЅРёСЏ РјРµСЃС‚РѕРїРѕР»РѕР¶РµРЅРёСЏ, С‡С‚РѕР±С‹
     * РёР·Р±РµР¶Р°С‚СЊ Р»РёС€РЅРёС… Р·Р°РїСЂРѕСЃРѕРІ РІ С„РѕРЅРѕРІРѕРј СЂРµР¶РёРјРµ.
     */
    @Override
    protected void onPause() {
        super.onPause();
        if (fusedLocationClient != null && locationCallback != null) {
            fusedLocationClient.removeLocationUpdates(locationCallback);
        }
    }

    /**
     * Р’С‹Р·С‹РІР°РµС‚СЃСЏ РїСЂРё РІРѕР·РѕР±РЅРѕРІР»РµРЅРёРё Р°РєС‚РёРІРЅРѕСЃС‚Рё. Р•СЃР»Рё СЂР°Р·СЂРµС€РµРЅРёСЏ РЅР° РјРµСЃС‚РѕРїРѕР»РѕР¶РµРЅРёРµ РїСЂРµРґРѕСЃС‚Р°РІР»РµРЅС‹,
     * РІРѕР·РѕР±РЅРѕРІР»СЏРµС‚ Р·Р°РїСЂРѕСЃС‹ РЅР° РѕР±РЅРѕРІР»РµРЅРёРµ РјРµСЃС‚РѕРїРѕР»РѕР¶РµРЅРёСЏ.
     */
    @Override
    protected void onResume() {
        super.onResume();
        if (ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_FINE_LOCATION) == PackageManager.PERMISSION_GRANTED
                || ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_COARSE_LOCATION) == PackageManager.PERMISSION_GRANTED) {
            createLocationRequest();
        }
    }

    /**
     * РџРµСЂРµС…РІР°С‚С‹РІР°РµС‚ СЃРѕР±С‹С‚РёСЏ РєР°СЃР°РЅРёСЏ СЌРєСЂР°РЅР°. РСЃРїРѕР»СЊР·СѓРµС‚СЃСЏ РґР»СЏ СЃС‚Р°РЅРґР°СЂС‚РЅРѕР№ РѕР±СЂР°Р±РѕС‚РєРё СЃРѕР±С‹С‚РёР№ РєР°СЃР°РЅРёСЏ.
     */
    @Override
    public boolean dispatchTouchEvent(MotionEvent ev) {
        return super.dispatchTouchEvent(ev);
    }
}

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\java\com\example\ozon\NetworkUtil.java
package com.example.ozon;

import android.content.Context;
import android.net.ConnectivityManager;
import android.net.NetworkInfo;

/**
 * РљР»Р°СЃСЃ NetworkUtil РїСЂРµРґРѕСЃС‚Р°РІР»СЏРµС‚ СѓС‚РёР»РёС‚Р°СЂРЅС‹Р№ РјРµС‚РѕРґ РґР»СЏ РїСЂРѕРІРµСЂРєРё РґРѕСЃС‚СѓРїРЅРѕСЃС‚Рё
 * РёРЅС‚РµСЂРЅРµС‚-СЃРѕРµРґРёРЅРµРЅРёСЏ РІ РїСЂРёР»РѕР¶РµРЅРёРё "OZON". РСЃРїРѕР»СЊР·СѓРµС‚
 * ConnectivityManager РґР»СЏ РѕРїСЂРµРґРµР»РµРЅРёСЏ СЃРѕСЃС‚РѕСЏРЅРёСЏ СЃРµС‚Рё.
 */
public class NetworkUtil {

    /**
     * РџСЂРѕРІРµСЂСЏРµС‚ РЅР°Р»РёС‡РёРµ Р°РєС‚РёРІРЅРѕРіРѕ РёРЅС‚РµСЂРЅРµС‚-СЃРѕРµРґРёРЅРµРЅРёСЏ. Р’РѕР·РІСЂР°С‰Р°РµС‚ true, РµСЃР»Рё
     * СѓСЃС‚СЂРѕР№СЃС‚РІРѕ РїРѕРґРєР»СЋС‡РµРЅРѕ Рє СЃРµС‚Рё, Рё false РІ РїСЂРѕС‚РёРІРЅРѕРј СЃР»СѓС‡Р°Рµ.
     */
    public static boolean isNetworkAvailable(Context context) {
        ConnectivityManager cm = (ConnectivityManager) context.getSystemService(Context.CONNECTIVITY_SERVICE);
        NetworkInfo activeNetwork = cm.getActiveNetworkInfo();
        return activeNetwork != null && activeNetwork.isConnected();
    }
}

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\java\com\example\ozon\NotificationHelper.java
package com.example.ozon;

import android.Manifest;
import android.app.NotificationChannel;
import android.app.NotificationManager;
import android.app.PendingIntent;
import android.content.Context;
import android.content.Intent;
import android.content.pm.PackageManager;
import android.os.Build;
import androidx.core.app.ActivityCompat;
import androidx.core.app.NotificationCompat;
import androidx.core.app.NotificationManagerCompat;

/**
 * РљР»Р°СЃСЃ NotificationHelper РїСЂРµРґРѕСЃС‚Р°РІР»СЏРµС‚ СѓС‚РёР»РёС‚Р°СЂРЅС‹Рµ РјРµС‚РѕРґС‹ РґР»СЏ СЃРѕР·РґР°РЅРёСЏ РєР°РЅР°Р»Р° СѓРІРµРґРѕРјР»РµРЅРёР№
 * Рё РѕС‚РїСЂР°РІРєРё СѓРІРµРґРѕРјР»РµРЅРёР№ РІ РїСЂРёР»РѕР¶РµРЅРёРё "OZON". РСЃРїРѕР»СЊР·СѓРµС‚ Android Notification API
 * РґР»СЏ РёРЅС„РѕСЂРјРёСЂРѕРІР°РЅРёСЏ РїРѕР»СЊР·РѕРІР°С‚РµР»РµР№ Рѕ СЃС‚Р°С‚СѓСЃРµ Р·Р°РєР°Р·РѕРІ Рё РґРѕСЃС‚Р°РІРєРё.
 */
public class NotificationHelper {
    private static final String TAG = "NotificationHelper";
    private static final String CHANNEL_ID = "order_delivery_channel";
    private static final String CHANNEL_NAME = "Order Delivery";
    private static final String CHANNEL_DESCRIPTION = "Notifications about order delivery status";

    /**
     * РЎРѕР·РґР°РµС‚ РєР°РЅР°Р» СѓРІРµРґРѕРјР»РµРЅРёР№ РґР»СЏ РїСЂРёР»РѕР¶РµРЅРёСЏ, РµСЃР»Рё РІРµСЂСЃРёСЏ Android 8.0 (Oreo) РёР»Рё РІС‹С€Рµ.
     * РќР°СЃС‚СЂР°РёРІР°РµС‚ РєР°РЅР°Р» СЃ РІС‹СЃРѕРєРѕР№ РІР°Р¶РЅРѕСЃС‚СЊСЋ РґР»СЏ СѓРІРµРґРѕРјР»РµРЅРёР№ Рѕ СЃС‚Р°С‚СѓСЃРµ РґРѕСЃС‚Р°РІРєРё.
     */
    public static void createNotificationChannel(Context context) {
        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {
            NotificationChannel channel = new NotificationChannel(
                    CHANNEL_ID,
                    CHANNEL_NAME,
                    NotificationManager.IMPORTANCE_HIGH
            );
            channel.setDescription(CHANNEL_DESCRIPTION);
            NotificationManager manager = context.getSystemService(NotificationManager.class);
            if (manager != null) {
                manager.createNotificationChannel(channel);
            }
        }
    }

    /**
     * РћС‚РїСЂР°РІР»СЏРµС‚ СѓРІРµРґРѕРјР»РµРЅРёРµ Рѕ СЃС‚Р°С‚СѓСЃРµ Р·Р°РєР°Р·Р°. Р¤РѕСЂРјРёСЂСѓРµС‚ СѓРІРµРґРѕРјР»РµРЅРёРµ СЃ РёРЅС„РѕСЂРјР°С†РёРµР№ Рѕ Р·Р°РєР°Р·Рµ,
     * РІРєР»СЋС‡Р°СЏ СЃС‚Р°С‚СѓСЃ, СЃСѓРјРјСѓ, СЃРїРѕСЃРѕР± РѕРїР»Р°С‚С‹ Рё СЃСЂРѕРє РґРѕСЃС‚Р°РІРєРё, Рё РѕС‚РѕР±СЂР°Р¶Р°РµС‚ РµРіРѕ РїРѕР»СЊР·РѕРІР°С‚РµР»СЋ.
     */
    public static void sendOrderNotification(Context context, Order order, String orderId, String userId, String userRole) {
        try {
            Intent intent = new Intent(context, CustomerMainActivity.class);
            intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);
            intent.putExtra("USER_DOCUMENT_ID", userId);
            intent.putExtra("USER_ROLE", userRole);
            intent.putExtra("order_id", orderId);
            PendingIntent pendingIntent = PendingIntent.getActivity(
                    context,
                    orderId.hashCode(),
                    intent,
                    PendingIntent.FLAG_IMMUTABLE | PendingIntent.FLAG_UPDATE_CURRENT
            );
            String title = "РћР±РЅРѕРІР»РµРЅРёРµ СЃС‚Р°С‚СѓСЃР° Р·Р°РєР°Р·Р°";
            String message = "Р—Р°РєР°Р· #" + orderId + "\n" +
                    "РЎС‚Р°С‚СѓСЃ: " + order.getStatus() + "\n" +
                    "РЎСѓРјРјР°: " + order.getTotalAmount() + " СЂСѓР±.\n" +
                    "РЎРїРѕСЃРѕР± РѕРїР»Р°С‚С‹: " + order.getPaymentMethod() + "\n" +
                    "РЎСЂРѕРє РґРѕСЃС‚Р°РІРєРё: " + order.getDays() + " РґРЅРµР№";
            NotificationCompat.Builder builder = new NotificationCompat.Builder(context, CHANNEL_ID)
                    .setSmallIcon(android.R.drawable.ic_dialog_info)
                    .setContentTitle(title)
                    .setContentText(message)
                    .setStyle(new NotificationCompat.BigTextStyle().bigText(message))
                    .setPriority(NotificationCompat.PRIORITY_HIGH)
                    .setContentIntent(pendingIntent)
                    .setAutoCancel(true)
                    .setVisibility(NotificationCompat.VISIBILITY_PUBLIC);
            NotificationManagerCompat notificationManager = NotificationManagerCompat.from(context);
            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.TIRAMISU) {
                if (ActivityCompat.checkSelfPermission(context, Manifest.permission.POST_NOTIFICATIONS) != PackageManager.PERMISSION_GRANTED) {
                    return;
                }
            }
            try {
                notificationManager.notify(orderId.hashCode(), builder.build());
            } catch (SecurityException e) {}
        } catch (Exception e) {
        }
    }

    /**
     * РћС‚РїСЂР°РІР»СЏРµС‚ СѓРІРµРґРѕРјР»РµРЅРёРµ Рѕ СЃС‚Р°С‚СѓСЃРµ РґРѕСЃС‚Р°РІРєРё Р·Р°РєР°Р·Р°. Р’ Р·Р°РІРёСЃРёРјРѕСЃС‚Рё РѕС‚ СЃС‚Р°С‚СѓСЃР° РґРѕСЃС‚Р°РІРєРё
     * С„РѕСЂРјРёСЂСѓРµС‚ СЃРѕРѕР±С‰РµРЅРёРµ Рѕ С‚РѕРј, С‡С‚Рѕ Р·Р°РєР°Р· РґРѕСЃС‚Р°РІР»РµРЅ, РёР»Рё Рѕ РєРѕР»РёС‡РµСЃС‚РІРµ РѕСЃС‚Р°РІС€РёС…СЃСЏ РґРЅРµР№ РґРѕ РґРѕСЃС‚Р°РІРєРё.
     */
    public static void sendDeliveryNotification(Context context, String orderId, boolean isDelivered, long remainingDays, String userId, String userRole) {
        try {
            Intent intent = new Intent(context, CustomerMainActivity.class);
            intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);
            intent.putExtra("USER_DOCUMENT_ID", userId);
            intent.putExtra("USER_ROLE", userRole);
            intent.putExtra("order_id", orderId);
            PendingIntent pendingIntent = PendingIntent.getActivity(
                    context,
                    orderId.hashCode(),
                    intent,
                    PendingIntent.FLAG_IMMUTABLE | PendingIntent.FLAG_UPDATE_CURRENT
            );
            NotificationCompat.Builder builder = new NotificationCompat.Builder(context, CHANNEL_ID)
                    .setSmallIcon(android.R.drawable.ic_dialog_info)
                    .setPriority(NotificationCompat.PRIORITY_HIGH)
                    .setContentIntent(pendingIntent)
                    .setAutoCancel(true)
                    .setVisibility(NotificationCompat.VISIBILITY_PUBLIC);
            if (isDelivered) {
                builder.setContentTitle("Р—Р°РєР°Р· РґРѕСЃС‚Р°РІР»РµРЅ!")
                        .setContentText("Р’Р°С€ Р·Р°РєР°Р· #" + orderId + " СѓСЃРїРµС€РЅРѕ РґРѕСЃС‚Р°РІР»РµРЅ!");
            } else {
                builder.setContentTitle("РќР°РїРѕРјРёРЅР°РЅРёРµ Рѕ РґРѕСЃС‚Р°РІРєРµ")
                        .setContentText("Р”Рѕ РґРѕСЃС‚Р°РІРєРё Р·Р°РєР°Р·Р° #" + orderId + " РѕСЃС‚Р°Р»РѕСЃСЊ " + remainingDays + " РґРЅРµР№");
            }
            NotificationManagerCompat notificationManager = NotificationManagerCompat.from(context);
            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.TIRAMISU) {
                if (ActivityCompat.checkSelfPermission(context, Manifest.permission.POST_NOTIFICATIONS) != PackageManager.PERMISSION_GRANTED) {
                    return;
                }
            }
            try {
                notificationManager.notify(orderId.hashCode(), builder.build());
            } catch (SecurityException e) {
            }
        } catch (Exception e) {
        }
    }
}

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\java\com\example\ozon\NotificationScheduler.java
package com.example.ozon;

import android.annotation.SuppressLint;
import android.app.AlarmManager;
import android.app.PendingIntent;
import android.content.Context;
import android.content.Intent;
import android.os.Build;
import com.google.firebase.firestore.FirebaseFirestore;
import java.util.Calendar;
import java.util.HashMap;
import java.util.Map;

/**
 * РљР»Р°СЃСЃ NotificationScheduler РѕС‚РІРµС‡Р°РµС‚ Р·Р° РїР»Р°РЅРёСЂРѕРІР°РЅРёРµ СѓРІРµРґРѕРјР»РµРЅРёР№ Рѕ РґРѕСЃС‚Р°РІРєРµ
 * РІ РїСЂРёР»РѕР¶РµРЅРёРё "OZON". РСЃРїРѕР»СЊР·СѓРµС‚ AlarmManager РґР»СЏ СѓСЃС‚Р°РЅРѕРІРєРё
 * РЅР°РїРѕРјРёРЅР°РЅРёР№ Рё Firebase Firestore РґР»СЏ РїСЂРѕРІРµСЂРєРё СЃС‚Р°С‚СѓСЃР° СѓРІРµРґРѕРјР»РµРЅРёР№.
 */
public class NotificationScheduler {
    private static final String TAG = "NotificationScheduler";

    /**
     * РџР»Р°РЅРёСЂСѓРµС‚ РЅР°РїРѕРјРёРЅР°РЅРёРµ Рѕ РґРѕСЃС‚Р°РІРєРµ Р·Р°РєР°Р·Р°. РџСЂРѕРІРµСЂСЏРµС‚, Р±С‹Р»Рѕ Р»Рё СѓРІРµРґРѕРјР»РµРЅРёРµ СѓР¶Рµ РѕС‚РїСЂР°РІР»РµРЅРѕ,
     * Рё, РµСЃР»Рё РЅРµС‚, СѓСЃС‚Р°РЅР°РІР»РёРІР°РµС‚ РЅР°РїРѕРјРёРЅР°РЅРёРµ РЅР° РґРµРЅСЊ РґРѕ РїСЂРµРґРїРѕР»Р°РіР°РµРјРѕР№ РґР°С‚С‹ РґРѕСЃС‚Р°РІРєРё.
     * Р•СЃР»Рё РґР°С‚Р° РґРѕСЃС‚Р°РІРєРё СѓР¶Рµ РїСЂРѕС€Р»Р°, РѕС‚РїСЂР°РІР»СЏРµС‚ СѓРІРµРґРѕРјР»РµРЅРёРµ РЅРµРјРµРґР»РµРЅРЅРѕ.
     */
    @SuppressLint("ScheduleExactAlarm")
    public static void scheduleDeliveryReminder(Context context, Order order, String orderId, String userId, String userRole) {
        FirebaseFirestore db = FirebaseFirestore.getInstance();
        db.collection("orders").document(orderId).get()
                .addOnSuccessListener(documentSnapshot -> {
                    Boolean notificationSent = documentSnapshot.getBoolean("notificationSent");
                    if (notificationSent != null && notificationSent) {
                        return;
                    }
                    Calendar deliveryDate = Calendar.getInstance();
                    deliveryDate.setTime(order.getOrderDate().toDate());
                    deliveryDate.add(Calendar.DAY_OF_MONTH, order.getDays().intValue());
                    deliveryDate.add(Calendar.DAY_OF_MONTH, -1);
                    if (deliveryDate.getTimeInMillis() <= System.currentTimeMillis()) {
                        NotificationHelper.sendOrderNotification(context, order, orderId, userId, userRole);
                        Map<String, Object> updates = new HashMap<>();
                        updates.put("notificationSent", true);
                        db.collection("orders")
                                .document(orderId)
                                .update(updates)
                                .addOnSuccessListener(aVoid -> {
                                })
                                .addOnFailureListener(e -> {
                                });
                        return;
                    }
                    Intent intent = new Intent(context, DeliveryReminderReceiver.class);
                    intent.putExtra("orderId", orderId);
                    intent.putExtra("days", order.getDays());
                    intent.putExtra("userId", userId);
                    intent.putExtra("userRole", userRole);
                    PendingIntent pendingIntent = PendingIntent.getBroadcast(
                            context,
                            orderId.hashCode(),
                            intent,
                            PendingIntent.FLAG_UPDATE_CURRENT | (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M ? PendingIntent.FLAG_IMMUTABLE : 0)
                    );
                    AlarmManager alarmManager = (AlarmManager) context.getSystemService(Context.ALARM_SERVICE);
                    if (alarmManager != null) {
                        alarmManager.setExact(
                                AlarmManager.RTC_WAKEUP,
                                deliveryDate.getTimeInMillis(),
                                pendingIntent
                        );
                    }
                })
                .addOnFailureListener(e -> {
                });
    }
}

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\java\com\example\ozon\Order.java
package com.example.ozon;

import com.google.firebase.Timestamp;
import java.util.List;

/**
 * РљР»Р°СЃСЃ Order РїСЂРµРґСЃС‚Р°РІР»СЏРµС‚ РјРѕРґРµР»СЊ Р·Р°РєР°Р·Р° РІ РїСЂРёР»РѕР¶РµРЅРёРё "OZON".
 * РЎРѕРґРµСЂР¶РёС‚ РёРЅС„РѕСЂРјР°С†РёСЋ Рѕ Р·Р°РєР°Р·Рµ, С‚Р°РєСѓСЋ РєР°Рє РёРґРµРЅС‚РёС„РёРєР°С‚РѕСЂ РїРѕР»СЊР·РѕРІР°С‚РµР»СЏ, РѕР±С‰Р°СЏ СЃСѓРјРјР°,
 * СЃРїРѕСЃРѕР± РѕРїР»Р°С‚С‹, СЃРїРёСЃРѕРє РїСЂРѕРґСѓРєС‚РѕРІ, СЃС‚Р°С‚СѓСЃ, РґР°С‚Р° Р·Р°РєР°Р·Р°, СЃСЂРѕРєРё РґРѕСЃС‚Р°РІРєРё, Р°РґСЂРµСЃ РґРѕСЃС‚Р°РІРєРё
 * Рё РґР°РЅРЅС‹Рµ Рѕ СѓРІРµРґРѕРјР»РµРЅРёСЏС….
 */
public class Order {
    private String userId;
    private int totalAmount;
    private String paymentMethod;
    private List<Product> products;
    private String status;
    private Timestamp orderDate;
    private Long days;
    private Long initialDays;
    private Boolean notificationSent;
    private String deliveryAddress;
    private Long lastNotifiedDays;

    /**
     * РљРѕРЅСЃС‚СЂСѓРєС‚РѕСЂ РїРѕ СѓРјРѕР»С‡Р°РЅРёСЋ РґР»СЏ СЃРѕР·РґР°РЅРёСЏ РїСѓСЃС‚РѕРіРѕ РѕР±СЉРµРєС‚Р° Р·Р°РєР°Р·Р°.
     */
    public Order() {
    }

    /**
     * РљРѕРЅСЃС‚СЂСѓРєС‚РѕСЂ РґР»СЏ СЃРѕР·РґР°РЅРёСЏ РѕР±СЉРµРєС‚Р° Р·Р°РєР°Р·Р° СЃ Р·Р°РґР°РЅРЅС‹РјРё РїР°СЂР°РјРµС‚СЂР°РјРё. РРЅРёС†РёР°Р»РёР·РёСЂСѓРµС‚
     * РѕСЃРЅРѕРІРЅС‹Рµ РїРѕР»СЏ Р·Р°РєР°Р·Р°, СѓСЃС‚Р°РЅР°РІР»РёРІР°РµС‚ РЅР°С‡Р°Р»СЊРЅС‹Рµ Р·РЅР°С‡РµРЅРёСЏ РґР»СЏ РґРЅРµР№ РґРѕСЃС‚Р°РІРєРё Рё
     * СЃС‚Р°С‚СѓСЃР° СѓРІРµРґРѕРјР»РµРЅРёР№.
     */
    public Order(String userId, int totalAmount, String paymentMethod, List<Product> products,
                 String status, Timestamp orderDate, Long initialDays, String deliveryAddress) {
        this.userId = userId;
        this.totalAmount = totalAmount;
        this.paymentMethod = paymentMethod;
        this.products = products;
        this.status = status;
        this.orderDate = orderDate;
        this.days = 0L;
        this.initialDays = initialDays;
        this.notificationSent = false;
        this.deliveryAddress = deliveryAddress;
        this.lastNotifiedDays = null;
    }

    /**
     * Р’РѕР·РІСЂР°С‰Р°РµС‚ РёРґРµРЅС‚РёС„РёРєР°С‚РѕСЂ РїРѕР»СЊР·РѕРІР°С‚РµР»СЏ, СЃРґРµР»Р°РІС€РµРіРѕ Р·Р°РєР°Р·.
     */
    public String getUserId() { return userId; }

    /**
     * РЈСЃС‚Р°РЅР°РІР»РёРІР°РµС‚ РёРґРµРЅС‚РёС„РёРєР°С‚РѕСЂ РїРѕР»СЊР·РѕРІР°С‚РµР»СЏ РґР»СЏ Р·Р°РєР°Р·Р°.
     */
    public void setUserId(String userId) { this.userId = userId; }

    /**
     * Р’РѕР·РІСЂР°С‰Р°РµС‚ РѕР±С‰СѓСЋ СЃСѓРјРјСѓ Р·Р°РєР°Р·Р° РІ СЂСѓР±Р»СЏС….
     */
    public int getTotalAmount() { return totalAmount; }

    /**
     * РЈСЃС‚Р°РЅР°РІР»РёРІР°РµС‚ РѕР±С‰СѓСЋ СЃСѓРјРјСѓ Р·Р°РєР°Р·Р°.
     */
    public void setTotalAmount(int totalAmount) { this.totalAmount = totalAmount; }

    /**
     * Р’РѕР·РІСЂР°С‰Р°РµС‚ СЃРїРѕСЃРѕР± РѕРїР»Р°С‚С‹, РІС‹Р±СЂР°РЅРЅС‹Р№ РґР»СЏ Р·Р°РєР°Р·Р°.
     */
    public String getPaymentMethod() { return paymentMethod; }

    /**
     * РЈСЃС‚Р°РЅР°РІР»РёРІР°РµС‚ СЃРїРѕСЃРѕР± РѕРїР»Р°С‚С‹ РґР»СЏ Р·Р°РєР°Р·Р°.
     */
    public void setPaymentMethod(String paymentMethod) { this.paymentMethod = paymentMethod; }

    /**
     * Р’РѕР·РІСЂР°С‰Р°РµС‚ СЃРїРёСЃРѕРє РїСЂРѕРґСѓРєС‚РѕРІ, РІРєР»СЋС‡РµРЅРЅС‹С… РІ Р·Р°РєР°Р·.
     */
    public List<Product> getProducts() { return products; }

    /**
     * РЈСЃС‚Р°РЅР°РІР»РёРІР°РµС‚ СЃРїРёСЃРѕРє РїСЂРѕРґСѓРєС‚РѕРІ РґР»СЏ Р·Р°РєР°Р·Р°.
     */
    public void setProducts(List<Product> products) { this.products = products; }

    /**
     * Р’РѕР·РІСЂР°С‰Р°РµС‚ С‚РµРєСѓС‰РёР№ СЃС‚Р°С‚СѓСЃ Р·Р°РєР°Р·Р° (РЅР°РїСЂРёРјРµСЂ, "СЃРѕР·РґР°РЅ", "РІ РїСЂРѕС†РµСЃСЃРµ", "РґРѕСЃС‚Р°РІР»РµРЅ").
     */
    public String getStatus() { return status; }

    /**
     * РЈСЃС‚Р°РЅР°РІР»РёРІР°РµС‚ СЃС‚Р°С‚СѓСЃ Р·Р°РєР°Р·Р°.
     */
    public void setStatus(String status) { this.status = status; }

    /**
     * Р’РѕР·РІСЂР°С‰Р°РµС‚ РґР°С‚Сѓ СЃРѕР·РґР°РЅРёСЏ Р·Р°РєР°Р·Р° РІ С„РѕСЂРјР°С‚Рµ Timestamp.
     */
    public Timestamp getOrderDate() { return orderDate; }

    /**
     * РЈСЃС‚Р°РЅР°РІР»РёРІР°РµС‚ РґР°С‚Сѓ СЃРѕР·РґР°РЅРёСЏ Р·Р°РєР°Р·Р°.
     */
    public void setOrderDate(Timestamp orderDate) { this.orderDate = orderDate; }

    /**
     * Р’РѕР·РІСЂР°С‰Р°РµС‚ РєРѕР»РёС‡РµСЃС‚РІРѕ РѕСЃС‚Р°РІС€РёС…СЃСЏ РґРЅРµР№ РґРѕ РґРѕСЃС‚Р°РІРєРё Р·Р°РєР°Р·Р°.
     */
    public Long getDays() { return days; }

    /**
     * РЈСЃС‚Р°РЅР°РІР»РёРІР°РµС‚ РєРѕР»РёС‡РµСЃС‚РІРѕ РѕСЃС‚Р°РІС€РёС…СЃСЏ РґРЅРµР№ РґРѕ РґРѕСЃС‚Р°РІРєРё Р·Р°РєР°Р·Р°.
     */
    public void setDays(Long days) { this.days = days; }

    /**
     * Р’РѕР·РІСЂР°С‰Р°РµС‚ РёР·РЅР°С‡Р°Р»СЊРЅРѕРµ РєРѕР»РёС‡РµСЃС‚РІРѕ РґРЅРµР№, Р·Р°РґР°РЅРЅРѕРµ РґР»СЏ РґРѕСЃС‚Р°РІРєРё Р·Р°РєР°Р·Р°.
     */
    public Long getInitialDays() { return initialDays; }

    /**
     * РЈСЃС‚Р°РЅР°РІР»РёРІР°РµС‚ РёР·РЅР°С‡Р°Р»СЊРЅРѕРµ РєРѕР»РёС‡РµСЃС‚РІРѕ РґРЅРµР№ РґР»СЏ РґРѕСЃС‚Р°РІРєРё Р·Р°РєР°Р·Р°.
     */
    public void setInitialDays(Long initialDays) { this.initialDays = initialDays; }

    /**
     * Р’РѕР·РІСЂР°С‰Р°РµС‚ С„Р»Р°Рі, СѓРєР°Р·С‹РІР°СЋС‰РёР№, Р±С‹Р»Рѕ Р»Рё РѕС‚РїСЂР°РІР»РµРЅРѕ СѓРІРµРґРѕРјР»РµРЅРёРµ Рѕ Р·Р°РєР°Р·Рµ.
     */
    public Boolean getNotificationSent() { return notificationSent; }

    /**
     * РЈСЃС‚Р°РЅР°РІР»РёРІР°РµС‚ С„Р»Р°Рі, СѓРєР°Р·С‹РІР°СЋС‰РёР№, Р±С‹Р»Рѕ Р»Рё РѕС‚РїСЂР°РІР»РµРЅРѕ СѓРІРµРґРѕРјР»РµРЅРёРµ Рѕ Р·Р°РєР°Р·Рµ.
     */
    public void setNotificationSent(Boolean notificationSent) { this.notificationSent = notificationSent; }

    /**
     * Р’РѕР·РІСЂР°С‰Р°РµС‚ Р°РґСЂРµСЃ РґРѕСЃС‚Р°РІРєРё Р·Р°РєР°Р·Р°.
     */
    public String getDeliveryAddress() { return deliveryAddress; }

    /**
     * РЈСЃС‚Р°РЅР°РІР»РёРІР°РµС‚ Р°РґСЂРµСЃ РґРѕСЃС‚Р°РІРєРё РґР»СЏ Р·Р°РєР°Р·Р°.
     */
    public void setDeliveryAddress(String deliveryAddress) { this.deliveryAddress = deliveryAddress; }

    /**
     * Р’РѕР·РІСЂР°С‰Р°РµС‚ РєРѕР»РёС‡РµСЃС‚РІРѕ РґРЅРµР№, РѕСЃС‚Р°РІС€РёС…СЃСЏ РґРѕ РґРѕСЃС‚Р°РІРєРё РЅР° РјРѕРјРµРЅС‚ РїРѕСЃР»РµРґРЅРµРіРѕ СѓРІРµРґРѕРјР»РµРЅРёСЏ.
     */
    public Long getLastNotifiedDays() { return lastNotifiedDays; }

    /**
     * РЈСЃС‚Р°РЅР°РІР»РёРІР°РµС‚ РєРѕР»РёС‡РµСЃС‚РІРѕ РґРЅРµР№, РѕСЃС‚Р°РІС€РёС…СЃСЏ РґРѕ РґРѕСЃС‚Р°РІРєРё РЅР° РјРѕРјРµРЅС‚ РїРѕСЃР»РµРґРЅРµРіРѕ СѓРІРµРґРѕРјР»РµРЅРёСЏ.
     */
    public void setLastNotifiedDays(Long lastNotifiedDays) { this.lastNotifiedDays = lastNotifiedDays; }
}

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\java\com\example\ozon\OrderActivity.java
package com.example.ozon;

import android.app.AlertDialog;
import android.content.Intent;
import android.os.Bundle;
import android.text.Editable;
import android.text.TextWatcher;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AdapterView;
import android.widget.ArrayAdapter;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.Spinner;
import android.widget.Switch;
import android.widget.TextView;
import android.widget.Toast;
import androidx.annotation.Nullable;
import androidx.fragment.app.Fragment;
import androidx.recyclerview.widget.LinearLayoutManager;
import androidx.recyclerview.widget.RecyclerView;
import com.firebase.ui.firestore.FirestoreRecyclerOptions;
import com.google.firebase.firestore.DocumentReference;
import com.google.firebase.firestore.DocumentSnapshot;
import com.google.firebase.firestore.FirebaseFirestore;
import com.google.firebase.firestore.GeoPoint;
import com.google.firebase.firestore.Query;
import com.google.firebase.firestore.Transaction;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.concurrent.ThreadLocalRandom;

/**
 * РљР»Р°СЃСЃ OrderActivity РїСЂРµРґСЃС‚Р°РІР»СЏРµС‚ СЃРѕР±РѕР№ С„СЂР°РіРјРµРЅС‚ РґР»СЏ РѕС„РѕСЂРјР»РµРЅРёСЏ Р·Р°РєР°Р·Р° РІ РїСЂРёР»РѕР¶РµРЅРёРё
 * "OZON". РџРѕР·РІРѕР»СЏРµС‚ РїРѕР»СЊР·РѕРІР°С‚РµР»СЋ РІС‹Р±СЂР°С‚СЊ СЃРїРѕСЃРѕР± РѕРїР»Р°С‚С‹, Р°РґСЂРµСЃ РґРѕСЃС‚Р°РІРєРё,
 * РІРєР»СЋС‡РёС‚СЊ Р·Р°С‰РёС‚Сѓ Р·Р°РєР°Р·Р° Рё РїРѕРґС‚РІРµСЂРґРёС‚СЊ РїРѕРєСѓРїРєСѓ. РСЃРїРѕР»СЊР·СѓРµС‚ Firebase Firestore РґР»СЏ СЂР°Р±РѕС‚С‹
 * СЃ РґР°РЅРЅС‹РјРё РєРѕСЂР·РёРЅС‹, РєР°СЂС‚ Рё Р·Р°РєР°Р·РѕРІ.
 */
public class OrderActivity extends Fragment {
    static final int MAP_SELECTION_REQUEST_CODE = 1001;
    private RecyclerView recyclerView;
    private CheckBox agreementCheckBox;
    private Button payButton;
    private TextView totalAmount;
    private Switch protectionSwitch;
    private Button addCardButton;
    private boolean isProtectionEnabled = false;
    private int total = 0;
    private int protectionCost = 149;
    private OrderAdapter orderAdapter;
    private Spinner bankCardSpinner;
    private TextView selectedCardInfo;
    private List<String> bankCards = new ArrayList<>();
    private TextView deliveryAddressText;
    private Button updateAddressButton;
    private ArrayAdapter<String> bankCardAdapter;
    private String userDocumentId, userRole;
    private String selectedCardNumber = null;
    private LinearLayout cardsContainer;
    private String deliveryAddress = null;
    private GeoPoint deliveryLocation;

    /**
     * РћР±СЂР°Р±Р°С‚С‹РІР°РµС‚ СЂРµР·СѓР»СЊС‚Р°С‚ РІС‹Р±РѕСЂР° Р°РґСЂРµСЃР° РґРѕСЃС‚Р°РІРєРё РёР· Р°РєС‚РёРІРЅРѕСЃС‚Рё MapSelectionActivity.
     * РЎРѕС…СЂР°РЅСЏРµС‚ РІС‹Р±СЂР°РЅРЅС‹Р№ Р°РґСЂРµСЃ Рё РєРѕРѕСЂРґРёРЅР°С‚С‹, РѕР±РЅРѕРІР»СЏРµС‚ UI Рё, РїСЂРё РІС‹РїРѕР»РЅРµРЅРёРё РІСЃРµС… СѓСЃР»РѕРІРёР№,
     * РёРЅРёС†РёРёСЂСѓРµС‚ РїСЂРѕС†РµСЃСЃ РѕРїР»Р°С‚С‹.
     */
    @Override
    public void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {
        super.onActivityResult(requestCode, resultCode, data);
        if (requestCode == MAP_SELECTION_REQUEST_CODE && resultCode == getActivity().RESULT_OK) {
            if (data != null) {
                deliveryAddress = data.getStringExtra("SELECTED_ADDRESS");
                double lat = data.getDoubleExtra("LATITUDE", 0);
                double lng = data.getDoubleExtra("LONGITUDE", 0);
                deliveryLocation = new GeoPoint(lat, lng);
                updateDeliveryAddressText();
                showToast("РђРґСЂРµСЃ РІС‹Р±СЂР°РЅ: " + deliveryAddress);
                if (checkOrderConditionsExceptAddress() && agreementCheckBox.isChecked() && selectedCardNumber != null) {
                    processPayment();
                }
            }
        }
    }

    /**
     * РЎРѕР·РґР°РµС‚ Рё РІРѕР·РІСЂР°С‰Р°РµС‚ РїСЂРµРґСЃС‚Р°РІР»РµРЅРёРµ С„СЂР°РіРјРµРЅС‚Р°. РРЅРёС†РёР°Р»РёР·РёСЂСѓРµС‚ СЌР»РµРјРµРЅС‚С‹ UI, Р·Р°РіСЂСѓР¶Р°РµС‚
     * РґР°РЅРЅС‹Рµ РїРѕР»СЊР·РѕРІР°С‚РµР»СЏ, РєРѕСЂР·РёРЅС‹ Рё Р±Р°РЅРєРѕРІСЃРєРёС… РєР°СЂС‚, Р° С‚Р°РєР¶Рµ РЅР°СЃС‚СЂР°РёРІР°РµС‚ РѕР±СЂР°Р±РѕС‚С‡РёРєРё СЃРѕР±С‹С‚РёР№.
     */
    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
        View view = inflater.inflate(R.layout.order_layout, container, false);
        initViews(view);
        getUserData();
        setupBankCardSpinner();
        loadCartItems();
        loadBankCards();
        setupEventListeners();
        return view;
    }

    /**
     * РРЅРёС†РёР°Р»РёР·РёСЂСѓРµС‚ СЌР»РµРјРµРЅС‚С‹ UI С„СЂР°РіРјРµРЅС‚Р°, С‚Р°РєРёРµ РєР°Рє СЃРїРёСЃРѕРє С‚РѕРІР°СЂРѕРІ, РєРЅРѕРїРєРё, РїРµСЂРµРєР»СЋС‡Р°С‚РµР»Рё
     * Рё С‚РµРєСЃС‚РѕРІС‹Рµ РїРѕР»СЏ. РќР°СЃС‚СЂР°РёРІР°РµС‚ РЅР°С‡Р°Р»СЊРЅРѕРµ СЃРѕСЃС‚РѕСЏРЅРёРµ РєРЅРѕРїРєРё РѕРїР»Р°С‚С‹ Рё РѕР±СЂР°Р±РѕС‚С‡РёРє РґР»СЏ РІС‹Р±РѕСЂР°
     * Р°РґСЂРµСЃР° РґРѕСЃС‚Р°РІРєРё.
     */
    private void initViews(View view) {
        recyclerView = view.findViewById(R.id.recyclerView);
        agreementCheckBox = view.findViewById(R.id.agreementCheckBox);
        payButton = view.findViewById(R.id.payButton);
        totalAmount = view.findViewById(R.id.totalAmount);
        protectionSwitch = view.findViewById(R.id.protectionSwitch);
        bankCardSpinner = view.findViewById(R.id.bankCardSpinner);
        selectedCardInfo = view.findViewById(R.id.selectedCardInfo);
        addCardButton = view.findViewById(R.id.addCardButton);
        cardsContainer = view.findViewById(R.id.cardsContainer);
        deliveryAddressText = view.findViewById(R.id.deliveryAddressText);
        updateAddressButton = view.findViewById(R.id.updateAddressButton);
        payButton.setOnClickListener(v -> {
            if (checkOrderConditionsExceptAddress()) {
                if (deliveryAddress == null || deliveryAddress.isEmpty()) {
                    showDeliveryAddressDialog();
                } else {
                    processPayment();
                }
            }
        });
        payButton.setEnabled(false);
        payButton.setAlpha(0.5f);
        protectionSwitch.setChecked(isProtectionEnabled);
        updateDeliveryAddressText();
        updateAddressButton.setOnClickListener(v -> showDeliveryAddressDialog());
    }

    /**
     * РћР±РЅРѕРІР»СЏРµС‚ С‚РµРєСЃС‚РѕРІРѕРµ РїРѕР»Рµ СЃ Р°РґСЂРµСЃРѕРј РґРѕСЃС‚Р°РІРєРё. РћС‚РѕР±СЂР°Р¶Р°РµС‚ РІС‹Р±СЂР°РЅРЅС‹Р№ Р°РґСЂРµСЃ РёР»Рё СЃРѕРѕР±С‰РµРЅРёРµ
     * Рѕ С‚РѕРј, С‡С‚Рѕ Р°РґСЂРµСЃ РЅРµ РІС‹Р±СЂР°РЅ.
     */
    private void updateDeliveryAddressText() {
        if (deliveryAddress != null && !deliveryAddress.isEmpty()) {
            deliveryAddressText.setText(deliveryAddress);
        } else {
            deliveryAddressText.setText("РђРґСЂРµСЃ РґРѕСЃС‚Р°РІРєРё РЅРµ РІС‹Р±СЂР°РЅ");
        }
    }

    /**
     * РР·РІР»РµРєР°РµС‚ РґР°РЅРЅС‹Рµ РїРѕР»СЊР·РѕРІР°С‚РµР»СЏ (РёРґРµРЅС‚РёС„РёРєР°С‚РѕСЂ Рё СЂРѕР»СЊ) РёР· РїРµСЂРµРґР°РЅРЅС‹С… Р°СЂРіСѓРјРµРЅС‚РѕРІ С„СЂР°РіРјРµРЅС‚Р°.
     * Р•СЃР»Рё РґР°РЅРЅС‹Рµ РѕС‚СЃСѓС‚СЃС‚РІСѓСЋС‚, РѕС‚РѕР±СЂР°Р¶Р°РµС‚ СЃРѕРѕР±С‰РµРЅРёРµ РѕР± РѕС€РёР±РєРµ.
     */
    private void getUserData() {
        Bundle bundle = getArguments();
        if (bundle != null) {
            userDocumentId = bundle.getString("USER_DOCUMENT_ID");
            userRole = bundle.getString("USER_ROLE");
        } else {
            showToast("РћС€РёР±РєР°: РґР°РЅРЅС‹Рµ РїРѕР»СЊР·РѕРІР°С‚РµР»СЏ РЅРµ РїРµСЂРµРґР°РЅС‹");
        }
    }

    /**
     * РќР°СЃС‚СЂР°РёРІР°РµС‚ РІС‹РїР°РґР°СЋС‰РёР№ СЃРїРёСЃРѕРє РґР»СЏ РІС‹Р±РѕСЂР° Р±Р°РЅРєРѕРІСЃРєРѕР№ РєР°СЂС‚С‹. РРЅРёС†РёР°Р»РёР·РёСЂСѓРµС‚ Р°РґР°РїС‚РµСЂ
     * РґР»СЏ СЃРїРёСЃРєР° РєР°СЂС‚ Рё Р·Р°РґР°РµС‚ СЃС‚РёР»СЊ РѕС‚РѕР±СЂР°Р¶РµРЅРёСЏ.
     */
    private void setupBankCardSpinner() {
        bankCardAdapter = new ArrayAdapter<>(getContext(), android.R.layout.simple_spinner_item, bankCards);
        bankCardAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
        bankCardSpinner.setAdapter(bankCardAdapter);
    }

    /**
     * РќР°СЃС‚СЂР°РёРІР°РµС‚ РѕР±СЂР°Р±РѕС‚С‡РёРєРё СЃРѕР±С‹С‚РёР№ РґР»СЏ СЌР»РµРјРµРЅС‚РѕРІ UI, С‚Р°РєРёС… РєР°Рє РїРµСЂРµРєР»СЋС‡Р°С‚РµР»СЊ Р·Р°С‰РёС‚С‹ Р·Р°РєР°Р·Р°,
     * С‡РµРєР±РѕРєСЃ СЃРѕРіР»Р°СЃРёСЏ, РІС‹Р±РѕСЂ РєР°СЂС‚С‹ Рё РєРЅРѕРїРєР° РґРѕР±Р°РІР»РµРЅРёСЏ РЅРѕРІРѕР№ РєР°СЂС‚С‹.
     */
    private void setupEventListeners() {
        protectionSwitch.setOnCheckedChangeListener((buttonView, isChecked) -> {
            isProtectionEnabled = isChecked;
            updateTotalAmount();
        });
        agreementCheckBox.setOnCheckedChangeListener((buttonView, isChecked) -> updatePayButtonState());
        bankCardSpinner.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
            @Override
            public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                selectedCardNumber = bankCards.get(position);
                selectedCardInfo.setText("Р’С‹Р±СЂР°РЅРЅР°СЏ РєР°СЂС‚Р°: ****" + selectedCardNumber.substring(selectedCardNumber.length() - 4));
                updatePayButtonState();
            }
            @Override
            public void onNothingSelected(AdapterView<?> parent) {
                selectedCardNumber = null;
                selectedCardInfo.setText("РљР°СЂС‚Р° РЅРµ РІС‹Р±СЂР°РЅР°");
                updatePayButtonState();
            }
        });
        addCardButton.setOnClickListener(v -> showAddCardDialog());
    }

    /**
     * Р—Р°РіСЂСѓР¶Р°РµС‚ С‚РѕРІР°СЂС‹ РёР· РєРѕСЂР·РёРЅС‹ РїРѕР»СЊР·РѕРІР°С‚РµР»СЏ РёР· Firebase Firestore. РќР°СЃС‚СЂР°РёРІР°РµС‚ Р°РґР°РїС‚РµСЂ
     * РґР»СЏ РѕС‚РѕР±СЂР°Р¶РµРЅРёСЏ СЃРїРёСЃРєР° С‚РѕРІР°СЂРѕРІ Рё РѕР±РЅРѕРІР»СЏРµС‚ РѕР±С‰СѓСЋ СЃСѓРјРјСѓ РїСЂРё РёР·РјРµРЅРµРЅРёРё РґР°РЅРЅС‹С….
     */
    private void loadCartItems() {
        Query query = FirebaseFirestore.getInstance()
                .collection("cart")
                .whereEqualTo("userId", getCurrentUserId());
        FirestoreRecyclerOptions<Cart> options = new FirestoreRecyclerOptions.Builder<Cart>()
                .setQuery(query, Cart.class)
                .setLifecycleOwner(this)
                .build();
        orderAdapter = new OrderAdapter(options);
        recyclerView.setLayoutManager(new LinearLayoutManager(getContext()));
        recyclerView.setAdapter(orderAdapter);
        orderAdapter.registerAdapterDataObserver(new RecyclerView.AdapterDataObserver() {
            @Override
            public void onChanged() {
                updateTotalFromAdapter();
            }
            @Override
            public void onItemRangeInserted(int positionStart, int itemCount) {
                updateTotalFromAdapter();
            }
            @Override
            public void onItemRangeRemoved(int positionStart, int itemCount) {
                updateTotalFromAdapter();
            }
        });
    }

    /**
     * Р—Р°РіСЂСѓР¶Р°РµС‚ СЃРїРёСЃРѕРє Р±Р°РЅРєРѕРІСЃРєРёС… РєР°СЂС‚ РїРѕР»СЊР·РѕРІР°С‚РµР»СЏ РёР· Firebase Firestore. РћР±РЅРѕРІР»СЏРµС‚ UI
     * РІ Р·Р°РІРёСЃРёРјРѕСЃС‚Рё РѕС‚ РЅР°Р»РёС‡РёСЏ РєР°СЂС‚: РїРѕРєР°Р·С‹РІР°РµС‚ РІС‹РїР°РґР°СЋС‰РёР№ СЃРїРёСЃРѕРє РёР»Рё РєРЅРѕРїРєСѓ РґРѕР±Р°РІР»РµРЅРёСЏ РєР°СЂС‚С‹.
     */
    private void loadBankCards() {
        String userId = getCurrentUserId();
        if (userId != null) {
            FirebaseFirestore.getInstance().collection("cards")
                    .whereEqualTo("userId", userId)
                    .get()
                    .addOnSuccessListener(queryDocumentSnapshots -> {
                        bankCards.clear();
                        for (DocumentSnapshot document : queryDocumentSnapshots.getDocuments()) {
                            String cardNumber = document.getString("cardNumber");
                            if (cardNumber != null) {
                                bankCards.add(cardNumber);
                            }
                        }
                        if (bankCards.isEmpty()) {
                            selectedCardInfo.setText("РќРµС‚ СЃРѕС…СЂР°РЅРµРЅРЅС‹С… РєР°СЂС‚");
                            addCardButton.setVisibility(View.VISIBLE);
                            bankCardSpinner.setVisibility(View.GONE);
                            payButton.setEnabled(false);
                            payButton.setAlpha(0.5f);
                        } else {
                            addCardButton.setVisibility(View.GONE);
                            bankCardSpinner.setVisibility(View.VISIBLE);
                            bankCardAdapter.notifyDataSetChanged();
                        }
                    })
                    .addOnFailureListener(e -> showToast("РћС€РёР±РєР° РїСЂРё Р·Р°РіСЂСѓР·РєРµ РєР°СЂС‚"));
        }
    }

    /**
     * РћС‚РѕР±СЂР°Р¶Р°РµС‚ РґРёР°Р»РѕРіРѕРІРѕРµ РѕРєРЅРѕ РґР»СЏ РІС‹Р±РѕСЂР° СЃРїРѕСЃРѕР±Р° РІРІРѕРґР° Р°РґСЂРµСЃР° РґРѕСЃС‚Р°РІРєРё. РџСЂРµРґР»Р°РіР°РµС‚
     * РїРѕР»СЊР·РѕРІР°С‚РµР»СЋ РІС‹Р±СЂР°С‚СЊ Р°РґСЂРµСЃ РЅР° РєР°СЂС‚Рµ РёР»Рё РІРІРµСЃС‚Рё РµРіРѕ РІСЂСѓС‡РЅСѓСЋ.
     */
    private void showDeliveryAddressDialog() {
        AlertDialog.Builder builder = new AlertDialog.Builder(getContext());
        View dialogView = LayoutInflater.from(getContext()).inflate(R.layout.dialog_map, null);
        builder.setView(dialogView);
        Button btnSelectOnMap = dialogView.findViewById(R.id.btnSelectOnMap);
        Button btnManualInput = dialogView.findViewById(R.id.btnManualInput);
        Button btnCancel = dialogView.findViewById(R.id.btnCancel);
        AlertDialog dialog = builder.create();
        btnSelectOnMap.setOnClickListener(v -> {
            dialog.dismiss();
            startMapSelection();
        });
        btnManualInput.setOnClickListener(v -> {
            dialog.dismiss();
            showManualAddressInputDialog();
        });
        btnCancel.setOnClickListener(v -> dialog.dismiss());
        dialog.show();
    }

    /**
     * Р—Р°РїСѓСЃРєР°РµС‚ Р°РєС‚РёРІРЅРѕСЃС‚СЊ MapSelectionActivity РґР»СЏ РІС‹Р±РѕСЂР° Р°РґСЂРµСЃР° РґРѕСЃС‚Р°РІРєРё РЅР° РєР°СЂС‚Рµ.
     */
    private void startMapSelection() {
        Intent intent = new Intent(getActivity(), MapSelectionActivity.class);
        startActivityForResult(intent, MAP_SELECTION_REQUEST_CODE);
    }

    /**
     * РћС‚РѕР±СЂР°Р¶Р°РµС‚ РґРёР°Р»РѕРіРѕРІРѕРµ РѕРєРЅРѕ РґР»СЏ СЂСѓС‡РЅРѕРіРѕ РІРІРѕРґР° Р°РґСЂРµСЃР° РґРѕСЃС‚Р°РІРєРё. РџРѕР·РІРѕР»СЏРµС‚ РїРѕР»СЊР·РѕРІР°С‚РµР»СЋ
     * РІРІРµСЃС‚Рё Р°РґСЂРµСЃ, РїСЂРѕРІРµСЂСЏРµС‚ РµРіРѕ РєРѕСЂСЂРµРєС‚РЅРѕСЃС‚СЊ Рё СЃРѕС…СЂР°РЅСЏРµС‚ РїСЂРё РїРѕРґС‚РІРµСЂР¶РґРµРЅРёРё.
     */
    private void showManualAddressInputDialog() {
        AlertDialog.Builder builder = new AlertDialog.Builder(getContext());
        View dialogView = LayoutInflater.from(getContext()).inflate(R.layout.dialog_manual_addres, null);
        builder.setView(dialogView);
        EditText etAddress = dialogView.findViewById(R.id.etAddress);
        Button btnConfirm = dialogView.findViewById(R.id.btnConfirm);
        Button btnCancel = dialogView.findViewById(R.id.btnCancel);
        AlertDialog dialog = builder.create();
        btnConfirm.setOnClickListener(v -> {
            String address = etAddress.getText().toString().trim();
            if (validateAddress(address)) {
                deliveryAddress = address;
                deliveryLocation = null;
                updateDeliveryAddressText();
                dialog.dismiss();
                if (checkOrderConditionsExceptAddress()) {
                    processPayment();
                }
            }
        });
        btnCancel.setOnClickListener(v -> dialog.dismiss());
        dialog.show();
    }

    /**
     * РџСЂРѕРІРµСЂСЏРµС‚ РєРѕСЂСЂРµРєС‚РЅРѕСЃС‚СЊ РІРІРµРґРµРЅРЅРѕРіРѕ Р°РґСЂРµСЃР° РґРѕСЃС‚Р°РІРєРё. РЈР±РµР¶РґР°РµС‚СЃСЏ, С‡С‚Рѕ Р°РґСЂРµСЃ СЃРѕРґРµСЂР¶РёС‚
     * РіРѕСЂРѕРґ, СѓР»РёС†Сѓ, РґРѕРј Рё РєРІР°СЂС‚РёСЂСѓ, Рё СЃРѕРѕС‚РІРµС‚СЃС‚РІСѓРµС‚ Р·Р°РґР°РЅРЅРѕРјСѓ С„РѕСЂРјР°С‚Сѓ.
     */
    private boolean validateAddress(String address) {
        if (address.isEmpty()) {
            showToast("Р’РІРµРґРёС‚Рµ Р°РґСЂРµСЃ");
            return false;
        }
        String[] parts = address.split(",");
        if (parts.length < 4) {
            showToast("РђРґСЂРµСЃ РґРѕР»Р¶РµРЅ СЃРѕРґРµСЂР¶Р°С‚СЊ РіРѕСЂРѕРґ, СѓР»РёС†Сѓ, РґРѕРј Рё РєРІР°СЂС‚РёСЂСѓ, СЂР°Р·РґРµР»С‘РЅРЅС‹Рµ Р·Р°РїСЏС‚С‹РјРё");
            return false;
        }
        boolean hasCity = false;
        boolean hasStreet = false;
        boolean hasHouse = false;
        boolean hasApartment = false;
        for (String part : parts) {
            String trimmedPart = part.trim();
            if (trimmedPart.startsWith("Рі.")) {
                hasCity = trimmedPart.length() > 2;
            } else if (trimmedPart.startsWith("СѓР».")) {
                hasStreet = trimmedPart.length() > 3;
            } else if (trimmedPart.matches(".*\\d+.*") && !trimmedPart.contains("РєРІ.") && !trimmedPart.contains("РєРІР°СЂС‚РёСЂР°")) {
                hasHouse = true;
            } else if (trimmedPart.contains("РєРІ.") || trimmedPart.contains("РєРІР°СЂС‚РёСЂР°") || trimmedPart.matches("\\d+")) {
                hasApartment = trimmedPart.matches(".*\\d+.*");
            }
        }
        if (!hasCity) {
            showToast("РЈРєР°Р¶РёС‚Рµ РіРѕСЂРѕРґ РІ С„РѕСЂРјР°С‚Рµ 'Рі. РќР°Р·РІР°РЅРёРµ'");
            return false;
        }
        if (!hasStreet) {
            showToast("РЈРєР°Р¶РёС‚Рµ СѓР»РёС†Сѓ РІ С„РѕСЂРјР°С‚Рµ 'СѓР». РќР°Р·РІР°РЅРёРµ'");
            return false;
        }
        if (!hasHouse) {
            showToast("РЈРєР°Р¶РёС‚Рµ РЅРѕРјРµСЂ РґРѕРјР°");
            return false;
        }
        if (!hasApartment) {
            showToast("РЈРєР°Р¶РёС‚Рµ РЅРѕРјРµСЂ РєРІР°СЂС‚РёСЂС‹");
            return false;
        }
        return true;
    }

    /**
     * РћС‚РѕР±СЂР°Р¶Р°РµС‚ РґРёР°Р»РѕРіРѕРІРѕРµ РѕРєРЅРѕ РґР»СЏ РґРѕР±Р°РІР»РµРЅРёСЏ РЅРѕРІРѕР№ Р±Р°РЅРєРѕРІСЃРєРѕР№ РєР°СЂС‚С‹. РџРѕР·РІРѕР»СЏРµС‚ РїРѕР»СЊР·РѕРІР°С‚РµР»СЋ
     * РІРІРµСЃС‚Рё РЅРѕРјРµСЂ РєР°СЂС‚С‹, CVV Рё СЃСЂРѕРє РґРµР№СЃС‚РІРёСЏ, С„РѕСЂРјР°С‚РёСЂСѓРµС‚ РІРІРѕРґ Рё СЃРѕС…СЂР°РЅСЏРµС‚ РєР°СЂС‚Сѓ РїСЂРё РїРѕРґС‚РІРµСЂР¶РґРµРЅРёРё.
     */
    private void showAddCardDialog() {
        AlertDialog.Builder builder = new AlertDialog.Builder(getContext());
        View dialogView = LayoutInflater.from(getContext()).inflate(R.layout.add_card_dialog, null);
        builder.setView(dialogView);
        EditText etCardNumber = dialogView.findViewById(R.id.etCardNumber);
        EditText etCardCVV = dialogView.findViewById(R.id.etCardCVV);
        EditText etCardExpiry = dialogView.findViewById(R.id.etCardExpiry);
        Button btnAdd = dialogView.findViewById(R.id.btnAdd);
        Button btnCancel = dialogView.findViewById(R.id.btnCancel);
        etCardNumber.addTextChangedListener(new TextWatcher() {
            private boolean isFormatting;
            @Override
            public void beforeTextChanged(CharSequence s, int start, int count, int after) {}
            @Override
            public void onTextChanged(CharSequence s, int start, int before, int count) {}
            @Override
            public void afterTextChanged(Editable s) {
                if (isFormatting) return;
                isFormatting = true;
                String input = s.toString().replaceAll("[^0-9]", "");
                if (input.length() > 16) {
                    input = input.substring(0, 16);
                }
                StringBuilder formatted = new StringBuilder();
                for (int i = 0; i < input.length(); i++) {
                    if (i > 0 && i % 4 == 0) {
                        formatted.append(" ");
                    }
                    formatted.append(input.charAt(i));
                }
                etCardNumber.setText(formatted.toString());
                etCardNumber.setSelection(formatted.length());
                isFormatting = false;
            }
        });
        etCardExpiry.addTextChangedListener(new TextWatcher() {
            private boolean isFormatting;
            @Override
            public void beforeTextChanged(CharSequence s, int start, int count, int after) {}
            @Override
            public void onTextChanged(CharSequence s, int start, int before, int count) {}
            @Override
            public void afterTextChanged(Editable s) {
                if (isFormatting) return;
                isFormatting = true;
                String input = s.toString().replaceAll("[^0-9]", "");
                if (input.length() > 4) {
                    input = input.substring(0, 4);
                }
                StringBuilder formatted = new StringBuilder(input);
                if (input.length() >= 2 && !s.toString().contains("/")) {
                    String monthStr = input.substring(0, 2);
                    int month = Integer.parseInt(monthStr);
                    if (month > 12) {
                        formatted = new StringBuilder("12");
                    } else {
                        formatted = new StringBuilder(monthStr);
                    }
                    if (input.length() > 2) {
                        formatted.append("/").append(input.substring(2));
                    } else {
                        formatted.append("/");
                    }
                }
                etCardExpiry.setText(formatted.toString());
                etCardExpiry.setSelection(formatted.length());
                isFormatting = false;
            }
        });
        AlertDialog dialog = builder.create();
        btnAdd.setOnClickListener(v -> {
            String cardNumber = etCardNumber.getText().toString().replaceAll(" ", "");
            String cvv = etCardCVV.getText().toString().trim();
            String expiryDate = etCardExpiry.getText().toString().trim();
            if (validateCardInput(cardNumber, cvv, expiryDate)) {
                saveCardToFirestore(cardNumber, cvv, expiryDate);
                dialog.dismiss();
            }
        });
        btnCancel.setOnClickListener(v -> dialog.dismiss());
        dialog.show();
    }

    /**
     * РџСЂРѕРІРµСЂСЏРµС‚ РєРѕСЂСЂРµРєС‚РЅРѕСЃС‚СЊ РІРІРµРґРµРЅРЅС‹С… РґР°РЅРЅС‹С… Р±Р°РЅРєРѕРІСЃРєРѕР№ РєР°СЂС‚С‹. РЈР±РµР¶РґР°РµС‚СЃСЏ, С‡С‚Рѕ РЅРѕРјРµСЂ РєР°СЂС‚С‹
     * СЃРѕРґРµСЂР¶РёС‚ 16 С†РёС„СЂ, CVV вЂ” 3 С†РёС„СЂС‹, Р° СЃСЂРѕРє РґРµР№СЃС‚РІРёСЏ СЃРѕРѕС‚РІРµС‚СЃС‚РІСѓРµС‚ С„РѕСЂРјР°С‚Сѓ Рё РЅР°С…РѕРґРёС‚СЃСЏ
     * РІ РґРѕРїСѓСЃС‚РёРјРѕРј РґРёР°РїР°Р·РѕРЅРµ.
     */
    private boolean validateCardInput(String cardNumber, String cvv, String expiryDate) {
        if (cardNumber.isEmpty() || cvv.isEmpty() || expiryDate.isEmpty()) {
            showToast("Р—Р°РїРѕР»РЅРёС‚Рµ РІСЃРµ РїРѕР»СЏ");
            return false;
        }
        if (cardNumber.length() != 16) {
            showToast("РќРѕРјРµСЂ РєР°СЂС‚С‹ РґРѕР»Р¶РµРЅ СЃРѕРґРµСЂР¶Р°С‚СЊ 16 С†РёС„СЂ");
            return false;
        }
        if (cvv.length() != 3) {
            showToast("CVV РєРѕРґ РґРѕР»Р¶РµРЅ СЃРѕРґРµСЂР¶Р°С‚СЊ 3 С†РёС„СЂС‹");
            return false;
        }
        if (expiryDate.length() != 5 || !expiryDate.contains("/")) {
            showToast("Р’РІРµРґРёС‚Рµ РґР°С‚Сѓ РІ С„РѕСЂРјР°С‚Рµ РњРњ/Р“Р“");
            return false;
        }
        String[] expiryParts = expiryDate.split("/");
        int month = Integer.parseInt(expiryParts[0]);
        int year = Integer.parseInt(expiryParts[1]);
        int currentYear = java.util.Calendar.getInstance().get(java.util.Calendar.YEAR) % 100;
        int maxYear = currentYear + 10;
        if (month < 1 || month > 12) {
            showToast("РњРµСЃСЏС† РґРѕР»Р¶РµРЅ Р±С‹С‚СЊ РѕС‚ 01 РґРѕ 12");
            return false;
        }
        if (year < currentYear) {
            showToast("Р“РѕРґ РЅРµ РјРѕР¶РµС‚ Р±С‹С‚СЊ РјРµРЅСЊС€Рµ С‚РµРєСѓС‰РµРіРѕ (" + currentYear + ")");
            return false;
        }
        if (year > maxYear) {
            showToast("Р“РѕРґ РЅРµ РјРѕР¶РµС‚ Р±С‹С‚СЊ Р±РѕР»СЊС€Рµ " + maxYear + " (С‚РµРєСѓС‰РёР№ + 10 Р»РµС‚)");
            return false;
        }
        return true;
    }

    /**
     * РЎРѕС…СЂР°РЅСЏРµС‚ РґР°РЅРЅС‹Рµ Р±Р°РЅРєРѕРІСЃРєРѕР№ РєР°СЂС‚С‹ РІ Firebase Firestore. Р”РѕР±Р°РІР»СЏРµС‚ РєР°СЂС‚Сѓ РІ РєРѕР»Р»РµРєС†РёСЋ
     * "cards" Рё РѕР±РЅРѕРІР»СЏРµС‚ СЃРїРёСЃРѕРє РєР°СЂС‚ РІ UI РїРѕСЃР»Рµ СѓСЃРїРµС€РЅРѕРіРѕ СЃРѕС…СЂР°РЅРµРЅРёСЏ.
     */
    private void saveCardToFirestore(String cardNumber, String cvv, String expiryDate) {
        String userId = getCurrentUserId();
        if (userId == null) {
            showToast("РћС€РёР±РєР°: РїРѕР»СЊР·РѕРІР°С‚РµР»СЊ РЅРµ Р°РІС‚РѕСЂРёР·РѕРІР°РЅ");
            return;
        }
        Map<String, Object> cardData = new HashMap<>();
        cardData.put("cardNumber", cardNumber);
        cardData.put("cvv", cvv);
        cardData.put("expiryDate", expiryDate);
        cardData.put("userId", userId);
        FirebaseFirestore.getInstance().collection("cards")
                .add(cardData)
                .addOnSuccessListener(documentReference -> {
                    loadBankCards();
                })
                .addOnFailureListener(e -> showToast("РћС€РёР±РєР° РїСЂРё РґРѕР±Р°РІР»РµРЅРёРё РєР°СЂС‚С‹: " + e.getMessage()));
    }

    /**
     * РџСЂРѕРІРµСЂСЏРµС‚ РІС‹РїРѕР»РЅРµРЅРёРµ СѓСЃР»РѕРІРёР№ РґР»СЏ РѕС„РѕСЂРјР»РµРЅРёСЏ Р·Р°РєР°Р·Р°, РєСЂРѕРјРµ Р°РґСЂРµСЃР° РґРѕСЃС‚Р°РІРєРё. РЈР±РµР¶РґР°РµС‚СЃСЏ,
     * С‡С‚Рѕ РїРѕР»СЊР·РѕРІР°С‚РµР»СЊ СЃРѕРіР»Р°СЃРёР»СЃСЏ СЃ СѓСЃР»РѕРІРёСЏРјРё, РІС‹Р±СЂР°Р» РєР°СЂС‚Сѓ Рё РєРѕСЂР·РёРЅР° РЅРµ РїСѓСЃС‚Р°.
     */
    private boolean checkOrderConditionsExceptAddress() {
        if (!agreementCheckBox.isChecked()) {
            showToast("РџРѕРґС‚РІРµСЂРґРёС‚Рµ СЃРѕРіР»Р°СЃРёРµ СЃ СѓСЃР»РѕРІРёСЏРјРё");
            return false;
        }
        if (selectedCardNumber == null) {
            showToast("Р’С‹Р±РµСЂРёС‚Рµ РєР°СЂС‚Сѓ РґР»СЏ РѕРїР»Р°С‚С‹");
            return false;
        }
        if (total <= 0) {
            showToast("РљРѕСЂР·РёРЅР° РїСѓСЃС‚Р°");
            return false;
        }
        return true;
    }

    /**
     * РћР±РЅРѕРІР»СЏРµС‚ РѕР±С‰СѓСЋ СЃСѓРјРјСѓ Р·Р°РєР°Р·Р° РЅР° РѕСЃРЅРѕРІРµ РґР°РЅРЅС‹С… РёР· Р°РґР°РїС‚РµСЂР° РєРѕСЂР·РёРЅС‹. РЈС‡РёС‚С‹РІР°РµС‚ СЃС‚РѕРёРјРѕСЃС‚СЊ
     * С‚РѕРІР°СЂРѕРІ Рё РґРѕРїРѕР»РЅРёС‚РµР»СЊРЅСѓСЋ Р·Р°С‰РёС‚Сѓ Р·Р°РєР°Р·Р°.
     */
    private void updateTotalFromAdapter() {
        total = 0;
        for (Cart cart : orderAdapter.getCartItems()) {
            total += cart.getPrice() * cart.getQuantity();
        }
        updateTotalAmount();
    }

    /**
     * РћР±РЅРѕРІР»СЏРµС‚ СЃРѕСЃС‚РѕСЏРЅРёРµ РєРЅРѕРїРєРё РѕРїР»Р°С‚С‹. РђРєС‚РёРІРёСЂСѓРµС‚ РєРЅРѕРїРєСѓ, РµСЃР»Рё РІС‹РїРѕР»РЅРµРЅС‹ РІСЃРµ СѓСЃР»РѕРІРёСЏ:
     * РІС‹Р±СЂР°РЅР° РєР°СЂС‚Р°, СЃРѕРіР»Р°СЃРѕРІР°РЅРѕ СЃ СѓСЃР»РѕРІРёСЏРјРё Рё РєРѕСЂР·РёРЅР° РЅРµ РїСѓСЃС‚Р°.
     */
    private void updatePayButtonState() {
        boolean isEnabled = agreementCheckBox.isChecked() && selectedCardNumber != null && total > 0;
        payButton.setEnabled(isEnabled);
        payButton.setAlpha(isEnabled ? 1.0f : 0.5f);
    }

    /**
     * РћР±РЅРѕРІР»СЏРµС‚ РѕС‚РѕР±СЂР°Р¶РµРЅРёРµ РѕР±С‰РµР№ СЃСѓРјРјС‹ Р·Р°РєР°Р·Р°. РЈС‡РёС‚С‹РІР°РµС‚ СЃС‚РѕРёРјРѕСЃС‚СЊ С‚РѕРІР°СЂРѕРІ Рё РґРѕРїРѕР»РЅРёС‚РµР»СЊРЅСѓСЋ
     * Р·Р°С‰РёС‚Сѓ Р·Р°РєР°Р·Р°, РµСЃР»Рё РѕРЅР° РІРєР»СЋС‡РµРЅР°.
     */
    private void updateTotalAmount() {
        int finalTotal = total + (isProtectionEnabled ? protectionCost : 0);
        totalAmount.setText("РС‚РѕРіРѕ: " + finalTotal + " в‚Ѕ");
    }

    /**
     * РРЅРёС†РёРёСЂСѓРµС‚ РїСЂРѕС†РµСЃСЃ РѕРїР»Р°С‚С‹. РџСЂРѕРІРµСЂСЏРµС‚ Р°РІС‚РѕСЂРёР·Р°С†РёСЋ РїРѕР»СЊР·РѕРІР°С‚РµР»СЏ, РґРµР»Р°РµС‚ СЃРЅРёРјРѕРє С‚РµРєСѓС‰РµР№
     * РєРѕСЂР·РёРЅС‹, РѕСЃС‚Р°РЅР°РІР»РёРІР°РµС‚ СЃР»СѓС€Р°С‚РµР»СЊ Р°РґР°РїС‚РµСЂР° Рё РѕС‚РѕР±СЂР°Р¶Р°РµС‚ РґРёР°Р»РѕРі РїРѕРґС‚РІРµСЂР¶РґРµРЅРёСЏ Р·Р°РєР°Р·Р°.
     */
    private void processPayment() {
        String userId = getCurrentUserId();
        if (userId == null) {
            showToast("РћС€РёР±РєР°: РїРѕР»СЊР·РѕРІР°С‚РµР»СЊ РЅРµ Р°РІС‚РѕСЂРёР·РѕРІР°РЅ");
            return;
        }
        List<Cart> cartItemsSnapshot = new ArrayList<>(orderAdapter.getCartItems());
        if (cartItemsSnapshot.isEmpty()) {
            return;
        }
        int finalTotal = total + (isProtectionEnabled ? protectionCost : 0);
        orderAdapter.stopListening();
        showConfirmationDialog(userId, cartItemsSnapshot, finalTotal);
    }

    /**
     * РћС‚РѕР±СЂР°Р¶Р°РµС‚ РґРёР°Р»РѕРі РїРѕРґС‚РІРµСЂР¶РґРµРЅРёСЏ Р·Р°РєР°Р·Р°. РџРѕРєР°Р·С‹РІР°РµС‚ Р°РґСЂРµСЃ РґРѕСЃС‚Р°РІРєРё Рё РёС‚РѕРіРѕРІСѓСЋ СЃСѓРјРјСѓ,
     * РїРѕР·РІРѕР»СЏСЏ РїРѕР»СЊР·РѕРІР°С‚РµР»СЋ РїРѕРґС‚РІРµСЂРґРёС‚СЊ РёР»Рё РѕС‚РјРµРЅРёС‚СЊ Р·Р°РєР°Р·.
     */
    private void showConfirmationDialog(String userId, List<Cart> cartItems, int finalTotal) {
        AlertDialog.Builder builder = new AlertDialog.Builder(getContext());
        builder.setTitle("РџРѕРґС‚РІРµСЂР¶РґРµРЅРёРµ Р·Р°РєР°Р·Р°");
        builder.setMessage("РђРґСЂРµСЃ РґРѕСЃС‚Р°РІРєРё: " + deliveryAddress + "\n\nРЎСѓРјРјР°: " + finalTotal + " в‚Ѕ");
        builder.setPositiveButton("РџРѕРґС‚РІРµСЂРґРёС‚СЊ", (dialog, which) -> {
            updateProductQuantities(cartItems, new ProductUpdateCallback() {
                @Override
                public void onAllProductsUpdated() {
                    createOrder(userId, cartItems, finalTotal, selectedCardNumber);
                }
                @Override
                public void onUpdateFailed(Exception e) {
                    showToast("РћС€РёР±РєР°: " + e.getMessage());
                    orderAdapter.startListening();
                }
            });
        });
        builder.setNegativeButton("РћС‚РјРµРЅР°", (dialog, which) -> orderAdapter.startListening());
        builder.show();
    }

    /**
     * РЎРѕР·РґР°РµС‚ Р·Р°РєР°Р· РІ Firebase Firestore. Р¤РѕСЂРјРёСЂСѓРµС‚ РґР°РЅРЅС‹Рµ Р·Р°РєР°Р·Р°, РІРєР»СЋС‡Р°СЏ СЃРїРёСЃРѕРє С‚РѕРІР°СЂРѕРІ,
     * СЃСѓРјРјСѓ, СЃРїРѕСЃРѕР± РѕРїР»Р°С‚С‹, Р°РґСЂРµСЃ РґРѕСЃС‚Р°РІРєРё Рё СЃР»СѓС‡Р°Р№РЅС‹Р№ СЃСЂРѕРє РґРѕСЃС‚Р°РІРєРё, РїРѕСЃР»Рµ С‡РµРіРѕ РѕС‡РёС‰Р°РµС‚
     * РєРѕСЂР·РёРЅСѓ Рё РїРµСЂРµРЅР°РїСЂР°РІР»СЏРµС‚ РїРѕР»СЊР·РѕРІР°С‚РµР»СЏ РІ РєР°С‚Р°Р»РѕРі.
     */
    private void createOrder(String userId, List<Cart> cartItems, int totalAmount, String cardNumber) {
        Map<String, Object> orderData = new HashMap<>();
        orderData.put("userId", userId);
        orderData.put("products", cartItems);
        orderData.put("totalAmount", totalAmount);
        orderData.put("paymentMethod", "РљР°СЂС‚Р° ****" + cardNumber.substring(cardNumber.length() - 4));
        orderData.put("deliveryAddress", deliveryAddress);
        orderData.put("protectionEnabled", isProtectionEnabled);
        orderData.put("orderDate", com.google.firebase.Timestamp.now());
        int days = ThreadLocalRandom.current().nextInt(1, 7);
        orderData.put("days", (long) days);
        orderData.put("initialDays", (long) days);
        orderData.put("status", "СЃРѕР·РґР°РЅ");
        if (deliveryLocation != null) {
            orderData.put("deliveryLocation", deliveryLocation);
        }
        FirebaseFirestore.getInstance().collection("orders")
                .add(orderData)
                .addOnSuccessListener(documentReference -> {
                    clearCart(userId);
                    navigateToCatalog();
                    showToast("Р—Р°РєР°Р· СѓСЃРїРµС€РЅРѕ РѕС„РѕСЂРјР»РµРЅ");
                    orderAdapter.startListening();
                })
                .addOnFailureListener(e -> {
                    showToast("РћС€РёР±РєР° РїСЂРё РѕС„РѕСЂРјР»РµРЅРёРё Р·Р°РєР°Р·Р°: " + e.getMessage());
                    orderAdapter.startListening();
                });
    }

    /**
     * РРЅС‚РµСЂС„РµР№СЃ РґР»СЏ РѕР±СЂР°Р±РѕС‚РєРё СЂРµР·СѓР»СЊС‚Р°С‚РѕРІ РѕР±РЅРѕРІР»РµРЅРёСЏ РєРѕР»РёС‡РµСЃС‚РІР° С‚РѕРІР°СЂРѕРІ РІ РїСЂРѕС†РµСЃСЃРµ РѕС„РѕСЂРјР»РµРЅРёСЏ Р·Р°РєР°Р·Р°.
     */
    private interface ProductUpdateCallback {
        void onAllProductsUpdated();
        void onUpdateFailed(Exception e);
    }

    /**
     * РћР±РЅРѕРІР»СЏРµС‚ РєРѕР»РёС‡РµСЃС‚РІРѕ С‚РѕРІР°СЂРѕРІ РІ Firebase Firestore РІ СЂР°РјРєР°С… С‚СЂР°РЅР·Р°РєС†РёРё. РЈРјРµРЅСЊС€Р°РµС‚
     * РєРѕР»РёС‡РµСЃС‚РІРѕ РґРѕСЃС‚СѓРїРЅС‹С… С‚РѕРІР°СЂРѕРІ РЅР° РѕСЃРЅРѕРІРµ Р·Р°РєР°Р·Р°РЅРЅРѕРіРѕ РєРѕР»РёС‡РµСЃС‚РІР° Рё РІС‹Р·С‹РІР°РµС‚ callback
     * РїРѕ Р·Р°РІРµСЂС€РµРЅРёРё.
     */
    private void updateProductQuantities(List<Cart> cartItems, ProductUpdateCallback callback) {
        FirebaseFirestore db = FirebaseFirestore.getInstance();
        final int[] processedItems = {0};
        final boolean[] hasError = {false};
        for (Cart cartItem : cartItems) {
            String productId = cartItem.getProductId();
            int orderedQuantity = cartItem.getQuantity();
            db.runTransaction((Transaction.Function<Void>) transaction -> {
                DocumentReference productRef = db.collection("products").document(productId);
                DocumentSnapshot productSnapshot = transaction.get(productRef);
                if (!productSnapshot.exists()) {
                    try {
                        throw new Exception("РўРѕРІР°СЂ СЃ ID " + productId + " РЅРµ РЅР°Р№РґРµРЅ");
                    } catch (Exception e) {
                        throw new RuntimeException(e);
                    }
                }
                Long quantity = productSnapshot.getLong("quantity");
                if (quantity == null) {
                    try {
                        throw new Exception("Р”Р»СЏ С‚РѕРІР°СЂР° " + productSnapshot.getString("name") + " РЅРµ СѓРєР°Р·Р°РЅРѕ РєРѕР»РёС‡РµСЃС‚РІРѕ");
                    } catch (Exception e) {
                        throw new RuntimeException(e);
                    }
                }
                Long newQuantity = quantity - orderedQuantity;
                if (newQuantity < 0) {
                    try {
                        throw new Exception("РќРµРґРѕСЃС‚Р°С‚РѕС‡РЅРѕ С‚РѕРІР°СЂР°: " + productSnapshot.getString("name") +
                                ". Р”РѕСЃС‚СѓРїРЅРѕ: " + quantity + ", С‚СЂРµР±СѓРµС‚СЃСЏ: " + orderedQuantity);
                    } catch (Exception e) {
                        throw new RuntimeException(e);
                    }
                }
                transaction.update(productRef, "quantity", newQuantity);
                return null;
            }).addOnSuccessListener(aVoid -> {
                processedItems[0]++;
                if (processedItems[0] == cartItems.size() && !hasError[0]) {
                    callback.onAllProductsUpdated();
                }
            }).addOnFailureListener(e -> {
                hasError[0] = true;
                callback.onUpdateFailed(e);
            });
        }
    }

    /**
     * РћС‡РёС‰Р°РµС‚ РєРѕСЂР·РёРЅСѓ РїРѕР»СЊР·РѕРІР°С‚РµР»СЏ РІ Firebase Firestore РїРѕСЃР»Рµ СѓСЃРїРµС€РЅРѕРіРѕ РѕС„РѕСЂРјР»РµРЅРёСЏ Р·Р°РєР°Р·Р°.
     * РЈРґР°Р»СЏРµС‚ РІСЃРµ Р·Р°РїРёСЃРё РєРѕСЂР·РёРЅС‹, СЃРІСЏР·Р°РЅРЅС‹Рµ СЃ С‚РµРєСѓС‰РёРј РїРѕР»СЊР·РѕРІР°С‚РµР»РµРј.
     */
    private void clearCart(String userId) {
        FirebaseFirestore.getInstance().collection("cart")
                .whereEqualTo("userId", userId)
                .get()
                .addOnSuccessListener(queryDocumentSnapshots -> {
                    for (DocumentSnapshot document : queryDocumentSnapshots.getDocuments()) {
                        document.getReference().delete();
                    }
                })
                .addOnFailureListener(e -> showToast("РћС€РёР±РєР° РїСЂРё РѕС‡РёСЃС‚РєРµ РєРѕСЂР·РёРЅС‹"));
    }

    /**
     * РџРµСЂРµРЅР°РїСЂР°РІР»СЏРµС‚ РїРѕР»СЊР·РѕРІР°С‚РµР»СЏ РІ С„СЂР°РіРјРµРЅС‚ РєР°С‚Р°Р»РѕРіР° РїРѕСЃР»Рµ СѓСЃРїРµС€РЅРѕРіРѕ РѕС„РѕСЂРјР»РµРЅРёСЏ Р·Р°РєР°Р·Р°.
     * РџРµСЂРµРґР°РµС‚ РґР°РЅРЅС‹Рµ РїРѕР»СЊР·РѕРІР°С‚РµР»СЏ РІ РЅРѕРІС‹Р№ С„СЂР°РіРјРµРЅС‚.
     */
    private void navigateToCatalog() {
        Bundle bundle = new Bundle();
        bundle.putString("USER_DOCUMENT_ID", userDocumentId);
        bundle.putString("USER_ROLE", userRole);
        CatalogActivity catalogFragment = new CatalogActivity();
        catalogFragment.setArguments(bundle);
        requireActivity().getSupportFragmentManager().beginTransaction()
                .replace(R.id.frameLayout, catalogFragment)
                .commit();
    }

    /**
     * Р’РѕР·РІСЂР°С‰Р°РµС‚ РёРґРµРЅС‚РёС„РёРєР°С‚РѕСЂ С‚РµРєСѓС‰РµРіРѕ РїРѕР»СЊР·РѕРІР°С‚РµР»СЏ.
     */
    private String getCurrentUserId() {
        return userDocumentId;
    }

    /**
     * РћС‚РѕР±СЂР°Р¶Р°РµС‚ РІСЃРїР»С‹РІР°СЋС‰РµРµ СЃРѕРѕР±С‰РµРЅРёРµ СЃ Р·Р°РґР°РЅРЅС‹Рј С‚РµРєСЃС‚РѕРј.
     */
    private void showToast(String message) {
        if (getContext() != null) {
            Toast.makeText(getContext(), message, Toast.LENGTH_SHORT).show();
        }
    }

    /**
     * Р’С‹Р·С‹РІР°РµС‚СЃСЏ РїСЂРё Р·Р°РїСѓСЃРєРµ С„СЂР°РіРјРµРЅС‚Р°. Р—Р°РїСѓСЃРєР°РµС‚ СЃР»СѓС€Р°С‚РµР»СЊ Р°РґР°РїС‚РµСЂР° РґР»СЏ РѕР±РЅРѕРІР»РµРЅРёСЏ РґР°РЅРЅС‹С… РєРѕСЂР·РёРЅС‹.
     */
    @Override
    public void onStart() {
        super.onStart();
        if (orderAdapter != null) {
            orderAdapter.startListening();
        }
    }

    /**
     * Р’С‹Р·С‹РІР°РµС‚СЃСЏ РїСЂРё РѕСЃС‚Р°РЅРѕРІРєРµ С„СЂР°РіРјРµРЅС‚Р°. РћСЃС‚Р°РЅР°РІР»РёРІР°РµС‚ СЃР»СѓС€Р°С‚РµР»СЊ Р°РґР°РїС‚РµСЂР° РґР»СЏ РїСЂРµРґРѕС‚РІСЂР°С‰РµРЅРёСЏ
     * СѓС‚РµС‡РµРє РїР°РјСЏС‚Рё.
     */
    @Override
    public void onStop() {
        super.onStop();
        if (orderAdapter != null) {
            orderAdapter.stopListening();
        }
    }
}

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\java\com\example\ozon\OrderAdapter.java
package com.example.ozon;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.recyclerview.widget.RecyclerView;
import com.firebase.ui.firestore.FirestoreRecyclerAdapter;
import com.firebase.ui.firestore.FirestoreRecyclerOptions;
import java.util.ArrayList;
import java.util.List;

/**
 * РљР»Р°СЃСЃ OrderAdapter РїСЂРµРґСЃС‚Р°РІР»СЏРµС‚ СЃРѕР±РѕР№ Р°РґР°РїС‚РµСЂ РґР»СЏ РѕС‚РѕР±СЂР°Р¶РµРЅРёСЏ СЃРїРёСЃРєР° С‚РѕРІР°СЂРѕРІ
 * РІ РєРѕСЂР·РёРЅРµ РїСЂРё РѕС„РѕСЂРјР»РµРЅРёРё Р·Р°РєР°Р·Р° РІ РїСЂРёР»РѕР¶РµРЅРёРё "OZON". РСЃРїРѕР»СЊР·СѓРµС‚
 * FirestoreRecyclerAdapter РґР»СЏ СЃРёРЅС…СЂРѕРЅРёР·Р°С†РёРё РґР°РЅРЅС‹С… СЃ Firebase Firestore Рё РѕС‚РѕР±СЂР°Р¶РµРЅРёСЏ
 * РёС… РІ RecyclerView.
 */
public class OrderAdapter extends FirestoreRecyclerAdapter<Cart, OrderAdapter.OrderViewHolder> {

    /**
     * РљРѕРЅСЃС‚СЂСѓРєС‚РѕСЂ Р°РґР°РїС‚РµСЂР°. РРЅРёС†РёР°Р»РёР·РёСЂСѓРµС‚ Р°РґР°РїС‚РµСЂ СЃ Р·Р°РґР°РЅРЅС‹РјРё РѕРїС†РёСЏРјРё FirestoreRecyclerOptions.
     */
    public OrderAdapter(@NonNull FirestoreRecyclerOptions<Cart> options) {
        super(options);
    }

    /**
     * РџСЂРёРІСЏР·С‹РІР°РµС‚ РґР°РЅРЅС‹Рµ С‚РѕРІР°СЂР° РёР· РєРѕСЂР·РёРЅС‹ Рє СЌР»РµРјРµРЅС‚Р°Рј UI РІ ViewHolder. РЈСЃС‚Р°РЅР°РІР»РёРІР°РµС‚
     * РЅР°Р·РІР°РЅРёРµ, С†РµРЅСѓ Рё РєРѕР»РёС‡РµСЃС‚РІРѕ С‚РѕРІР°СЂР° РІ СЃРѕРѕС‚РІРµС‚СЃС‚РІСѓСЋС‰РёРµ С‚РµРєСЃС‚РѕРІС‹Рµ РїРѕР»СЏ.
     */
    @Override
    protected void onBindViewHolder(@NonNull OrderViewHolder holder, int position, @NonNull Cart cart) {
        holder.productName.setText(cart.getName());
        holder.productPrice.setText(String.valueOf(cart.getPrice()) + " в‚Ѕ");
        holder.productQuantity.setText("РљРѕР»РёС‡РµСЃС‚РІРѕ: " + cart.getQuantity());
    }

    /**
     * Р’С‹Р·С‹РІР°РµС‚СЃСЏ РїСЂРё РёР·РјРµРЅРµРЅРёРё РґР°РЅРЅС‹С… РІ Firestore. РЈРІРµРґРѕРјР»СЏРµС‚ Р°РґР°РїС‚РµСЂ РѕР± РёР·РјРµРЅРµРЅРёРё РґР°РЅРЅС‹С…
     * РґР»СЏ РѕР±РЅРѕРІР»РµРЅРёСЏ РѕС‚РѕР±СЂР°Р¶РµРЅРёСЏ СЃРїРёСЃРєР°.
     */
    @Override
    public void onDataChanged() {
        super.onDataChanged();
        notifyDataSetChanged();
    }

    /**
     * Р’РѕР·РІСЂР°С‰Р°РµС‚ СЃРїРёСЃРѕРє РІСЃРµС… С‚РѕРІР°СЂРѕРІ РІ РєРѕСЂР·РёРЅРµ, РѕС‚РѕР±СЂР°Р¶Р°РµРјС‹С… Р°РґР°РїС‚РµСЂРѕРј. Р¤РѕСЂРјРёСЂСѓРµС‚ СЃРїРёСЃРѕРє
     * РЅР° РѕСЃРЅРѕРІРµ С‚РµРєСѓС‰РёС… РґР°РЅРЅС‹С… Firestore.
     */
    public List<Cart> getCartItems() {
        List<Cart> items = new ArrayList<>();
        for (int i = 0; i < getItemCount(); i++) {
            items.add(getItem(i));
        }
        return items;
    }

    /**
     * РЎРѕР·РґР°РµС‚ РЅРѕРІС‹Р№ ViewHolder РґР»СЏ СЌР»РµРјРµРЅС‚Р° СЃРїРёСЃРєР°. РСЃРїРѕР»СЊР·СѓРµС‚ LayoutInflater РґР»СЏ СЃРѕР·РґР°РЅРёСЏ
     * РїСЂРµРґСЃС‚Р°РІР»РµРЅРёСЏ РёР· РјР°РєРµС‚Р° item_order.
     */
    @NonNull
    @Override
    public OrderViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
        View view = LayoutInflater.from(parent.getContext()).inflate(R.layout.item_order, parent, false);
        return new OrderViewHolder(view);
    }

    /**
     * Р’РЅСѓС‚СЂРµРЅРЅРёР№ РєР»Р°СЃСЃ OrderViewHolder РїСЂРµРґСЃС‚Р°РІР»СЏРµС‚ СЃРѕР±РѕР№ ViewHolder РґР»СЏ СЌР»РµРјРµРЅС‚Р° СЃРїРёСЃРєР° С‚РѕРІР°СЂРѕРІ.
     * РЎРѕРґРµСЂР¶РёС‚ СЃСЃС‹Р»РєРё РЅР° С‚РµРєСЃС‚РѕРІС‹Рµ РїРѕР»СЏ РґР»СЏ РѕС‚РѕР±СЂР°Р¶РµРЅРёСЏ РЅР°Р·РІР°РЅРёСЏ, С†РµРЅС‹ Рё РєРѕР»РёС‡РµСЃС‚РІР° С‚РѕРІР°СЂР°.
     */
    static class OrderViewHolder extends RecyclerView.ViewHolder {
        TextView productName, productPrice, productQuantity;

        /**
         * РљРѕРЅСЃС‚СЂСѓРєС‚РѕСЂ ViewHolder. РРЅРёС†РёР°Р»РёР·РёСЂСѓРµС‚ С‚РµРєСЃС‚РѕРІС‹Рµ РїРѕР»СЏ РґР»СЏ РѕС‚РѕР±СЂР°Р¶РµРЅРёСЏ РґР°РЅРЅС‹С… С‚РѕРІР°СЂР°.
         */
        public OrderViewHolder(@NonNull View itemView) {
            super(itemView);
            productName = itemView.findViewById(R.id.productName);
            productPrice = itemView.findViewById(R.id.productPrice);
            productQuantity = itemView.findViewById(R.id.productQuantity);
        }
    }
}

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\java\com\example\ozon\OrderManager.java
package com.example.ozon;

import android.content.Context;
import android.content.SharedPreferences;

/**
 * РљР»Р°СЃСЃ OrderManager СѓРїСЂР°РІР»СЏРµС‚ РїСЂРѕС†РµСЃСЃРѕРј СЃРѕР·РґР°РЅРёСЏ Рё РѕР±РЅРѕРІР»РµРЅРёСЏ Р·Р°РєР°Р·РѕРІ РІ РїСЂРёР»РѕР¶РµРЅРёРё
 * "OZON". РћС‚РІРµС‡Р°РµС‚ Р·Р° РѕС‚РїСЂР°РІРєСѓ СѓРІРµРґРѕРјР»РµРЅРёР№ Рѕ СЃС‚Р°С‚СѓСЃРµ Р·Р°РєР°Р·Р° Рё
 * РїР»Р°РЅРёСЂРѕРІР°РЅРёРµ РЅР°РїРѕРјРёРЅР°РЅРёР№ Рѕ РґРѕСЃС‚Р°РІРєРµ.
 */
public class OrderManager {
    private Context context;
    private SharedPreferences sharedPrefs;

    /**
     * РљРѕРЅСЃС‚СЂСѓРєС‚РѕСЂ РєР»Р°СЃСЃР°. РРЅРёС†РёР°Р»РёР·РёСЂСѓРµС‚ РєРѕРЅС‚РµРєСЃС‚ Рё SharedPreferences РґР»СЏ РґРѕСЃС‚СѓРїР°
     * Рє РґР°РЅРЅС‹Рј РїРѕР»СЊР·РѕРІР°С‚РµР»СЏ, Р° С‚Р°РєР¶Рµ СЃРѕР·РґР°РµС‚ РєР°РЅР°Р» СѓРІРµРґРѕРјР»РµРЅРёР№ С‡РµСЂРµР· NotificationHelper.
     */
    public OrderManager(Context context) {
        this.context = context;
        this.sharedPrefs = context.getSharedPreferences("AppPrefs", Context.MODE_PRIVATE);
        NotificationHelper.createNotificationChannel(context);
    }

    /**
     * РЎРѕР·РґР°РµС‚ РёР»Рё РѕР±РЅРѕРІР»СЏРµС‚ Р·Р°РєР°Р·. РџСЂРѕРІРµСЂСЏРµС‚, РїСЂРёРЅР°РґР»РµР¶РёС‚ Р»Рё Р·Р°РєР°Р· С‚РµРєСѓС‰РµРјСѓ РїРѕР»СЊР·РѕРІР°С‚РµР»СЋ,
     * Рё, РµСЃР»Рё РґР°, РѕС‚РїСЂР°РІР»СЏРµС‚ СѓРІРµРґРѕРјР»РµРЅРёРµ Рѕ СЃС‚Р°С‚СѓСЃРµ Р·Р°РєР°Р·Р° Рё РїР»Р°РЅРёСЂСѓРµС‚ РЅР°РїРѕРјРёРЅР°РЅРёРµ Рѕ РґРѕСЃС‚Р°РІРєРµ.
     */
    public void createOrUpdateOrder(Order order, String orderId) {
        String currentUserId = sharedPrefs.getString("userId", null);
        String userRole = sharedPrefs.getString("userRole", null);
        if (currentUserId != null && order.getUserId().equals(currentUserId)) {
            NotificationHelper.sendOrderNotification(context, order, orderId, currentUserId, userRole);
            NotificationScheduler.scheduleDeliveryReminder(context, order, orderId, currentUserId, userRole);
        }
    }
}

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\java\com\example\ozon\Product.java
package com.example.ozon;

import com.google.firebase.firestore.PropertyName;
import java.io.Serializable;

/**
 * РљР»Р°СЃСЃ Product РїСЂРµРґСЃС‚Р°РІР»СЏРµС‚ РјРѕРґРµР»СЊ С‚РѕРІР°СЂР° РІ РїСЂРёР»РѕР¶РµРЅРёРё "OZON".
 * РЎРѕРґРµСЂР¶РёС‚ РёРЅС„РѕСЂРјР°С†РёСЋ Рѕ С‚РѕРІР°СЂРµ, С‚Р°РєСѓСЋ РєР°Рє РёРґРµРЅС‚РёС„РёРєР°С‚РѕСЂ, РЅР°Р·РІР°РЅРёРµ, С†РµРЅР°, С‚РёРї,
 * РёР·РѕР±СЂР°Р¶РµРЅРёРµ РІ С„РѕСЂРјР°С‚Рµ Base64, РѕРїРёСЃР°РЅРёРµ, РёРґРµРЅС‚РёС„РёРєР°С‚РѕСЂ РїСЂРѕРґР°РІС†Р° Рё РґРѕСЃС‚СѓРїРЅРѕРµ РєРѕР»РёС‡РµСЃС‚РІРѕ.
 * Р РµР°Р»РёР·СѓРµС‚ РёРЅС‚РµСЂС„РµР№СЃ Serializable РґР»СЏ РїРµСЂРµРґР°С‡Рё РѕР±СЉРµРєС‚Р° РјРµР¶РґСѓ РєРѕРјРїРѕРЅРµРЅС‚Р°РјРё.
 */
public class Product implements Serializable {
    private String id;
    private String name;
    private int price;
    private String productType;
    private String imageBase64;
    private String description;
    private String sellerId;
    private int quantity;

    /**
     * РљРѕРЅСЃС‚СЂСѓРєС‚РѕСЂ РїРѕ СѓРјРѕР»С‡Р°РЅРёСЋ РґР»СЏ СЃРѕР·РґР°РЅРёСЏ РїСѓСЃС‚РѕРіРѕ РѕР±СЉРµРєС‚Р° С‚РѕРІР°СЂР°.
     */
    public Product() {}

    /**
     * РљРѕРЅСЃС‚СЂСѓРєС‚РѕСЂ РґР»СЏ СЃРѕР·РґР°РЅРёСЏ РѕР±СЉРµРєС‚Р° С‚РѕРІР°СЂР° СЃ Р·Р°РґР°РЅРЅС‹РјРё РїР°СЂР°РјРµС‚СЂР°РјРё. РРЅРёС†РёР°Р»РёР·РёСЂСѓРµС‚
     * РѕСЃРЅРѕРІРЅС‹Рµ РїРѕР»СЏ С‚РѕРІР°СЂР°, С‚Р°РєРёРµ РєР°Рє РЅР°Р·РІР°РЅРёРµ, С†РµРЅР°, С‚РёРї, РёР·РѕР±СЂР°Р¶РµРЅРёРµ, РѕРїРёСЃР°РЅРёРµ Рё РєРѕР»РёС‡РµСЃС‚РІРѕ.
     */
    public Product(String name, int price, String productType, String imageBase64, String description, int quantity) {
        this.name = name;
        this.price = price;
        this.productType = productType;
        this.imageBase64 = imageBase64;
        this.description = description;
        this.quantity = quantity;
    }

    /**
     * Р’РѕР·РІСЂР°С‰Р°РµС‚ РёРґРµРЅС‚РёС„РёРєР°С‚РѕСЂ С‚РѕРІР°СЂР°. РСЃРїРѕР»СЊР·СѓРµС‚ Р°РЅРЅРѕС‚Р°С†РёСЋ PropertyName РґР»СЏ СЃРѕРѕС‚РІРµС‚СЃС‚РІРёСЏ
     * РїРѕР»СЋ "productId" РІ Firestore.
     */
    @PropertyName("productId")
    public String getId() {
        return id;
    }

    /**
     * РЈСЃС‚Р°РЅР°РІР»РёРІР°РµС‚ РёРґРµРЅС‚РёС„РёРєР°С‚РѕСЂ С‚РѕРІР°СЂР°. РСЃРїРѕР»СЊР·СѓРµС‚ Р°РЅРЅРѕС‚Р°С†РёСЋ PropertyName РґР»СЏ СЃРѕРѕС‚РІРµС‚СЃС‚РІРёСЏ
     * РїРѕР»СЋ "productId" РІ Firestore.
     */
    @PropertyName("productId")
    public void setId(String id) {
        this.id = id;
    }

    /**
     * Р’РѕР·РІСЂР°С‰Р°РµС‚ РЅР°Р·РІР°РЅРёРµ С‚РѕРІР°СЂР°.
     */
    public String getName() {
        return name;
    }

    /**
     * РЈСЃС‚Р°РЅР°РІР»РёРІР°РµС‚ РЅР°Р·РІР°РЅРёРµ С‚РѕРІР°СЂР°.
     */
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Р’РѕР·РІСЂР°С‰Р°РµС‚ С†РµРЅСѓ С‚РѕРІР°СЂР° РІ СЂСѓР±Р»СЏС….
     */
    public int getPrice() {
        return price;
    }

    /**
     * РЈСЃС‚Р°РЅР°РІР»РёРІР°РµС‚ С†РµРЅСѓ С‚РѕРІР°СЂР°.
     */
    public void setPrice(int price) {
        this.price = price;
    }

    /**
     * Р’РѕР·РІСЂР°С‰Р°РµС‚ С‚РёРї С‚РѕРІР°СЂР° (РЅР°РїСЂРёРјРµСЂ, РєР°С‚РµРіРѕСЂРёСЏ РёР»Рё РІРёРґ).
     */
    public String getProductType() {
        return productType;
    }

    /**
     * РЈСЃС‚Р°РЅР°РІР»РёРІР°РµС‚ С‚РёРї С‚РѕРІР°СЂР°.
     */
    public void setProductType(String productType) {
        this.productType = productType;
    }

    /**
     * Р’РѕР·РІСЂР°С‰Р°РµС‚ РёР·РѕР±СЂР°Р¶РµРЅРёРµ С‚РѕРІР°СЂР° РІ С„РѕСЂРјР°С‚Рµ Base64.
     */
    public String getImageBase64() {
        return imageBase64;
    }

    /**
     * РЈСЃС‚Р°РЅР°РІР»РёРІР°РµС‚ РёР·РѕР±СЂР°Р¶РµРЅРёРµ С‚РѕРІР°СЂР° РІ С„РѕСЂРјР°С‚Рµ Base64.
     */
    public void setImageBase64(String imageBase64) {
        this.imageBase64 = imageBase64;
    }

    /**
     * Р’РѕР·РІСЂР°С‰Р°РµС‚ РѕРїРёСЃР°РЅРёРµ С‚РѕРІР°СЂР°.
     */
    public String getDescription() {
        return description;
    }

    /**
     * РЈСЃС‚Р°РЅР°РІР»РёРІР°РµС‚ РѕРїРёСЃР°РЅРёРµ С‚РѕРІР°СЂР°.
     */
    public void setDescription(String description) {
        this.description = description;
    }

    /**
     * Р’РѕР·РІСЂР°С‰Р°РµС‚ РёРґРµРЅС‚РёС„РёРєР°С‚РѕСЂ РїСЂРѕРґР°РІС†Р°, РґРѕР±Р°РІРёРІС€РµРіРѕ С‚РѕРІР°СЂ.
     */
    public String getSellerId() {
        return sellerId;
    }

    /**
     * РЈСЃС‚Р°РЅР°РІР»РёРІР°РµС‚ РёРґРµРЅС‚РёС„РёРєР°С‚РѕСЂ РїСЂРѕРґР°РІС†Р° РґР»СЏ С‚РѕРІР°СЂР°.
     */
    public void setSellerId(String sellerId) {
        this.sellerId = sellerId;
    }

    /**
     * Р’РѕР·РІСЂР°С‰Р°РµС‚ РґРѕСЃС‚СѓРїРЅРѕРµ РєРѕР»РёС‡РµСЃС‚РІРѕ С‚РѕРІР°СЂР° РЅР° СЃРєР»Р°РґРµ.
     */
    public int getQuantity() {
        return quantity;
    }

    /**
     * РЈСЃС‚Р°РЅР°РІР»РёРІР°РµС‚ РґРѕСЃС‚СѓРїРЅРѕРµ РєРѕР»РёС‡РµСЃС‚РІРѕ С‚РѕРІР°СЂР° РЅР° СЃРєР»Р°РґРµ.
     */
    public void setQuantity(int quantity) {
        this.quantity = quantity;
    }

    /**
     * Р’РѕР·РІСЂР°С‰Р°РµС‚ СЃС‚СЂРѕРєРѕРІРѕРµ РїСЂРµРґСЃС‚Р°РІР»РµРЅРёРµ РѕР±СЉРµРєС‚Р° С‚РѕРІР°СЂР°. Р’РєР»СЋС‡Р°РµС‚ РёРґРµРЅС‚РёС„РёРєР°С‚РѕСЂ,
     * РЅР°Р·РІР°РЅРёРµ, С†РµРЅСѓ Рё РєРѕР»РёС‡РµСЃС‚РІРѕ.
     */
    @Override
    public String toString() {
        return "Product{id='" + id + "', name='" + name + "', price=" + price + ", quantity=" + quantity + "}";
    }
}

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\java\com\example\ozon\ProductAdapter.java
package com.example.ozon;

import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.os.Bundle;
import android.util.Base64;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import android.widget.Toast;
import androidx.annotation.NonNull;
import androidx.appcompat.app.AppCompatActivity;
import androidx.fragment.app.FragmentManager;
import androidx.recyclerview.widget.RecyclerView;
import com.google.firebase.firestore.FirebaseFirestore;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

/**
 * РљР»Р°СЃСЃ ProductAdapter РїСЂРµРґСЃС‚Р°РІР»СЏРµС‚ СЃРѕР±РѕР№ Р°РґР°РїС‚РµСЂ РґР»СЏ РѕС‚РѕР±СЂР°Р¶РµРЅРёСЏ СЃРїРёСЃРєР° С‚РѕРІР°СЂРѕРІ
 * РІ РїСЂРёР»РѕР¶РµРЅРёРё "OZON". РСЃРїРѕР»СЊР·СѓРµС‚СЃСЏ РІ СЂР°Р·Р»РёС‡РЅС‹С… СЂРµР¶РёРјР°С…: РґР»СЏ РїРѕРєСѓРїР°С‚РµР»РµР№,
 * РїСЂРѕРґР°РІС†РѕРІ Рё РІ РїСЂРѕС†РµСЃСЃРµ РѕС„РѕСЂРјР»РµРЅРёСЏ Р·Р°РєР°Р·Р°. РџРѕРґРґРµСЂР¶РёРІР°РµС‚ РґРѕР±Р°РІР»РµРЅРёРµ С‚РѕРІР°СЂРѕРІ РІ РєРѕСЂР·РёРЅСѓ,
 * СЂРµРґР°РєС‚РёСЂРѕРІР°РЅРёРµ Рё СѓРґР°Р»РµРЅРёРµ С‚РѕРІР°СЂРѕРІ РїСЂРѕРґР°РІС†РѕРј.
 */
public class ProductAdapter extends RecyclerView.Adapter<ProductAdapter.ProductViewHolder> {
    private List<Product> products = new ArrayList<>();
    private OnItemClickListener listener;
    private String userDocumentId;
    private String userRole;
    private boolean isForOrder;

    /**
     * РРЅС‚РµСЂС„РµР№СЃ РґР»СЏ РѕР±СЂР°Р±РѕС‚РєРё СЃРѕР±С‹С‚РёСЏ РєР»РёРєР° РїРѕ С‚РѕРІР°СЂСѓ.
     */
    public interface OnItemClickListener {
        void onItemClick(Product product);
    }

    /**
     * РљРѕРЅСЃС‚СЂСѓРєС‚РѕСЂ Р°РґР°РїС‚РµСЂР° РґР»СЏ РёСЃРїРѕР»СЊР·РѕРІР°РЅРёСЏ РІ РєР°С‚Р°Р»РѕРіРµ. РРЅРёС†РёР°Р»РёР·РёСЂСѓРµС‚ Р°РґР°РїС‚РµСЂ СЃ
     * РѕР±СЂР°Р±РѕС‚С‡РёРєРѕРј РєР»РёРєРѕРІ, РёРґРµРЅС‚РёС„РёРєР°С‚РѕСЂРѕРј РїРѕР»СЊР·РѕРІР°С‚РµР»СЏ Рё СЂРѕР»СЊСЋ РїРѕР»СЊР·РѕРІР°С‚РµР»СЏ.
     */
    public ProductAdapter(OnItemClickListener listener, String userDocumentId, String userRole) {
        this.listener = listener;
        this.userDocumentId = userDocumentId;
        this.userRole = userRole;
        this.isForOrder = false;
    }

    /**
     * РљРѕРЅСЃС‚СЂСѓРєС‚РѕСЂ Р°РґР°РїС‚РµСЂР° РґР»СЏ РёСЃРїРѕР»СЊР·РѕРІР°РЅРёСЏ РІ РїСЂРѕС†РµСЃСЃРµ РѕС„РѕСЂРјР»РµРЅРёСЏ Р·Р°РєР°Р·Р°. РРЅРёС†РёР°Р»РёР·РёСЂСѓРµС‚
     * Р°РґР°РїС‚РµСЂ С‚РѕР»СЊРєРѕ СЃ РёРґРµРЅС‚РёС„РёРєР°С‚РѕСЂРѕРј РїРѕР»СЊР·РѕРІР°С‚РµР»СЏ Рё СѓСЃС‚Р°РЅР°РІР»РёРІР°РµС‚ СЂРµР¶РёРј РѕС‚РѕР±СЂР°Р¶РµРЅРёСЏ РґР»СЏ Р·Р°РєР°Р·Р°.
     */
    public ProductAdapter(String userDocumentId) {
        this.userDocumentId = userDocumentId;
        this.isForOrder = true;
    }

    /**
     * РЎРѕР·РґР°РµС‚ РЅРѕРІС‹Р№ ViewHolder РґР»СЏ СЌР»РµРјРµРЅС‚Р° СЃРїРёСЃРєР° С‚РѕРІР°СЂРѕРІ. Р’С‹Р±РёСЂР°РµС‚ РјР°РєРµС‚ РІ Р·Р°РІРёСЃРёРјРѕСЃС‚Рё
     * РѕС‚ СЂРµР¶РёРјР° (РґР»СЏ Р·Р°РєР°Р·Р°, РїСЂРѕРґР°РІС†Р° РёР»Рё РїРѕРєСѓРїР°С‚РµР»СЏ) Рё РЅР°СЃС‚СЂР°РёРІР°РµС‚ РїР°СЂР°РјРµС‚СЂС‹ РѕС‚РѕР±СЂР°Р¶РµРЅРёСЏ.
     */
    @NonNull
    @Override
    public ProductViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
        int layoutResId = isForOrder ? R.layout.item_product_seller :
                userRole != null && userRole.equals("seller") ? R.layout.item_product_seller : R.layout.item_ptoduct;
        View view = LayoutInflater.from(parent.getContext()).inflate(layoutResId, parent, false);
        if (isForOrder) {
            int fixedWidthPx = (int) (160 * parent.getContext().getResources().getDisplayMetrics().density);
            RecyclerView.LayoutParams params = new RecyclerView.LayoutParams(
                    fixedWidthPx,
                    RecyclerView.LayoutParams.WRAP_CONTENT
            );
            view.setLayoutParams(params);
        }
        return new ProductViewHolder(view, isForOrder);
    }

    /**
     * РџСЂРёРІСЏР·С‹РІР°РµС‚ РґР°РЅРЅС‹Рµ С‚РѕРІР°СЂР° Рє ViewHolder. РЈСЃС‚Р°РЅР°РІР»РёРІР°РµС‚ РѕР±СЂР°Р±РѕС‚С‡РёРєРё СЃРѕР±С‹С‚РёР№ РґР»СЏ РєРЅРѕРїРѕРє
     * РґРѕР±Р°РІР»РµРЅРёСЏ РІ РєРѕСЂР·РёРЅСѓ, СЂРµРґР°РєС‚РёСЂРѕРІР°РЅРёСЏ Рё СѓРґР°Р»РµРЅРёСЏ, РµСЃР»Рё РїРѕР»СЊР·РѕРІР°С‚РµР»СЊ вЂ” РїСЂРѕРґР°РІРµС†.
     */
    @Override
    public void onBindViewHolder(@NonNull ProductViewHolder holder, int position) {
        Product product = products.get(position);
        holder.bind(product);
        if (holder.isForOrderMode) {
            return;
        }
        if (holder.addToCartButton != null) {
            if (product.getQuantity() <= 0) {
                holder.addToCartButton.setEnabled(false);
                holder.addToCartButton.setBackgroundColor(
                        holder.itemView.getContext().getResources().getColor(R.color.light_gray));
                holder.addToCartButton.setText("РќРµС‚ РІ РЅР°Р»РёС‡РёРё");
            } else {
                holder.addToCartButton.setEnabled(true);
                holder.addToCartButton.setOnClickListener(v -> addToCart(product, holder));
            }
        }
        holder.itemView.setOnClickListener(v -> {
            if (listener != null) {
                listener.onItemClick(product);
            }
        });
        if (userRole != null && userRole.equals("seller")) {
            if (holder.editButton != null) {
                holder.editButton.setOnClickListener(v -> editProduct(product, holder));
            }
            if (holder.deleteButton != null) {
                holder.deleteButton.setOnClickListener(v -> deleteProduct(product, holder));
            }
        }
    }

    /**
     * Р’РѕР·РІСЂР°С‰Р°РµС‚ РѕР±С‰РµРµ РєРѕР»РёС‡РµСЃС‚РІРѕ С‚РѕРІР°СЂРѕРІ РІ СЃРїРёСЃРєРµ.
     */
    @Override
    public int getItemCount() {
        return products.size();
    }

    /**
     * РћР±РЅРѕРІР»СЏРµС‚ СЃРїРёСЃРѕРє С‚РѕРІР°СЂРѕРІ Рё СЃРѕСЂС‚РёСЂСѓРµС‚ РёС… РїРѕ РїРѕРїСѓР»СЏСЂРЅРѕСЃС‚Рё, РµСЃР»Рё РїРµСЂРµРґР°РЅР° РєР°СЂС‚Р° РїРѕРїСѓР»СЏСЂРЅРѕСЃС‚Рё.
     * РЈРІРµРґРѕРјР»СЏРµС‚ Р°РґР°РїС‚РµСЂ РѕР± РёР·РјРµРЅРµРЅРёРё РґР°РЅРЅС‹С… РґР»СЏ РѕР±РЅРѕРІР»РµРЅРёСЏ UI.
     */
    public void updateData(List<Product> newProducts, Map<String, Integer> productPopularityMap) {
        this.products.clear();
        this.products.addAll(newProducts);
        if (productPopularityMap != null) {
            products.sort((p1, p2) -> {
                int popularity1 = productPopularityMap.getOrDefault(p1.getName(), 0);
                int popularity2 = productPopularityMap.getOrDefault(p2.getName(), 0);
                return Integer.compare(popularity2, popularity1);
            });
        }
        notifyDataSetChanged();
    }

    /**
     * Р”РѕР±Р°РІР»СЏРµС‚ С‚РѕРІР°СЂ РІ РєРѕСЂР·РёРЅСѓ РїРѕР»СЊР·РѕРІР°С‚РµР»СЏ РІ Firebase Firestore. РџСЂРѕРІРµСЂСЏРµС‚ РЅР°Р»РёС‡РёРµ С‚РѕРІР°СЂР°
     * РЅР° СЃРєР»Р°РґРµ Рё РѕР±РЅРѕРІР»СЏРµС‚ РёР»Рё СЃРѕР·РґР°РµС‚ Р·Р°РїРёСЃСЊ РІ РєРѕСЂР·РёРЅРµ.
     */
    private void addToCart(Product product, ProductViewHolder holder) {
        FirebaseFirestore db = FirebaseFirestore.getInstance();
        String productId = product.getId();
        String cartItemId = userDocumentId + "_" + productId;
        db.collection("products").document(productId)
                .get()
                .addOnSuccessListener(productDocument -> {
                    if (productDocument.exists()) {
                        int availableQuantity = productDocument.getLong("quantity").intValue();
                        if (availableQuantity <= 0) {
                            holder.addToCartButton.setEnabled(false);
                            holder.addToCartButton.setBackgroundColor(
                                    holder.itemView.getContext().getResources().getColor(R.color.light_gray));
                            showToast(holder, "РўРѕРІР°СЂ РѕС‚СЃСѓС‚СЃС‚РІСѓРµС‚ РЅР° СЃРєР»Р°РґРµ", false);
                            return;
                        }
                        db.collection("cart").document(cartItemId)
                                .get()
                                .addOnSuccessListener(cartDocument -> {
                                    if (cartDocument.exists()) {
                                        Cart existingCart = cartDocument.toObject(Cart.class);
                                        if (existingCart != null) {
                                            int newQuantity = existingCart.getQuantity() + 1;
                                            if (newQuantity <= availableQuantity) {
                                                db.collection("cart").document(cartItemId)
                                                        .update("quantity", newQuantity);
                                            } else {
                                                showToast(holder, "РќРµРґРѕСЃС‚Р°С‚РѕС‡РЅРѕ С‚РѕРІР°СЂР° РЅР° СЃРєР»Р°РґРµ", false);
                                            }
                                        }
                                    } else {
                                        Cart newCartItem = new Cart(
                                                productId,
                                                product.getName(),
                                                product.getPrice(),
                                                1,
                                                product.getImageBase64(),
                                                userDocumentId
                                        );
                                        db.collection("cart").document(cartItemId)
                                                .set(newCartItem);
                                    }
                                });
                    }
                })
                .addOnFailureListener(e -> {
                    showToast(holder, "РћС€РёР±РєР° РїСЂРё РїСЂРѕРІРµСЂРєРµ С‚РѕРІР°СЂР°", false);
                });
    }

    /**
     * РћС‚РєСЂС‹РІР°РµС‚ С„СЂР°РіРјРµРЅС‚ СЂРµРґР°РєС‚РёСЂРѕРІР°РЅРёСЏ С‚РѕРІР°СЂР° РґР»СЏ РїСЂРѕРґР°РІС†Р°. РџРµСЂРµРґР°РµС‚ РґР°РЅРЅС‹Рµ Рѕ С‚РѕРІР°СЂРµ
     * Рё РїРѕР»СЊР·РѕРІР°С‚РµР»Рµ РІ РЅРѕРІС‹Р№ С„СЂР°РіРјРµРЅС‚ ProductDetailSeller.
     */
    private void editProduct(Product product, ProductViewHolder holder) {
        ProductDetailSeller fragment = new ProductDetailSeller();
        Bundle args = new Bundle();
        args.putString("productId", product.getId());
        args.putString("userDocumentId", userDocumentId);
        args.putString("userRole", userRole);
        fragment.setArguments(args);
        FragmentManager fm = ((AppCompatActivity) holder.itemView.getContext()).getSupportFragmentManager();
        fm.beginTransaction()
                .replace(R.id.frameLayout, fragment)
                .addToBackStack(null)
                .commit();
    }

    /**
     * РЈРґР°Р»СЏРµС‚ С‚РѕРІР°СЂ РёР· Firebase Firestore. РЈРґР°Р»СЏРµС‚ С‚РѕРІР°СЂ РёР· СЃРїРёСЃРєР° Рё РѕР±РЅРѕРІР»СЏРµС‚ UI
     * РїРѕСЃР»Рµ СѓСЃРїРµС€РЅРѕРіРѕ СѓРґР°Р»РµРЅРёСЏ.
     */
    private void deleteProduct(Product product, ProductViewHolder holder) {
        FirebaseFirestore db = FirebaseFirestore.getInstance();
        db.collection("products").document(product.getId())
                .delete()
                .addOnSuccessListener(aVoid -> {
                    products.remove(product);
                    notifyDataSetChanged();
                })
                .addOnFailureListener(e -> {
                    showToast(holder, "РћС€РёР±РєР° РїСЂРё СѓРґР°Р»РµРЅРёРё", false);
                });
    }

    /**
     * РћС‚РѕР±СЂР°Р¶Р°РµС‚ РІСЃРїР»С‹РІР°СЋС‰РµРµ СЃРѕРѕР±С‰РµРЅРёРµ СЃ Р·Р°РґР°РЅРЅС‹Рј С‚РµРєСЃС‚РѕРј.
     */
    private void showToast(ProductViewHolder holder, String message, boolean isSuccess) {
        Toast.makeText(holder.itemView.getContext(), message, Toast.LENGTH_SHORT).show();
    }

    /**
     * Р’РЅСѓС‚СЂРµРЅРЅРёР№ РєР»Р°СЃСЃ ProductViewHolder РїСЂРµРґСЃС‚Р°РІР»СЏРµС‚ СЃРѕР±РѕР№ ViewHolder РґР»СЏ СЌР»РµРјРµРЅС‚Р° СЃРїРёСЃРєР° С‚РѕРІР°СЂРѕРІ.
     * РЎРѕРґРµСЂР¶РёС‚ СЃСЃС‹Р»РєРё РЅР° СЌР»РµРјРµРЅС‚С‹ UI РґР»СЏ РѕС‚РѕР±СЂР°Р¶РµРЅРёСЏ РґР°РЅРЅС‹С… С‚РѕРІР°СЂР° Рё РєРЅРѕРїРѕРє СѓРїСЂР°РІР»РµРЅРёСЏ.
     */
    static class ProductViewHolder extends RecyclerView.ViewHolder {
        TextView productName, productPrice;
        ImageView productImage;
        Button addToCartButton, editButton, deleteButton;
        boolean isForOrderMode;

        /**
         * РљРѕРЅСЃС‚СЂСѓРєС‚РѕСЂ ViewHolder. РРЅРёС†РёР°Р»РёР·РёСЂСѓРµС‚ СЌР»РµРјРµРЅС‚С‹ UI РІ Р·Р°РІРёСЃРёРјРѕСЃС‚Рё РѕС‚ СЂРµР¶РёРјР°
         * (РґР»СЏ Р·Р°РєР°Р·Р° РёР»Рё РєР°С‚Р°Р»РѕРіР°).
         */
        public ProductViewHolder(@NonNull View itemView, boolean isForOrder) {
            super(itemView);
            this.isForOrderMode = isForOrder;
            productName = itemView.findViewById(R.id.productName);
            productPrice = itemView.findViewById(R.id.productPrice);
            productImage = itemView.findViewById(R.id.productImage);
            if (!isForOrderMode) {
                addToCartButton = itemView.findViewById(R.id.addToCartButton);
                editButton = itemView.findViewById(R.id.editProductButton);
            }
        }

        /**
         * РџСЂРёРІСЏР·С‹РІР°РµС‚ РґР°РЅРЅС‹Рµ С‚РѕРІР°СЂР° Рє СЌР»РµРјРµРЅС‚Р°Рј UI. РЈСЃС‚Р°РЅР°РІР»РёРІР°РµС‚ РЅР°Р·РІР°РЅРёРµ, С†РµРЅСѓ Рё РёР·РѕР±СЂР°Р¶РµРЅРёРµ
         * С‚РѕРІР°СЂР°, С„РѕСЂРјР°С‚РёСЂСѓСЏ РѕС‚РѕР±СЂР°Р¶РµРЅРёРµ РІ Р·Р°РІРёСЃРёРјРѕСЃС‚Рё РѕС‚ СЂРµР¶РёРјР°.
         */
        public void bind(Product product) {
            if (productName != null) {
                productName.setText(product.getName() != null ? product.getName() : "");
            }
            if (productPrice != null) {
                if (isForOrderMode) {
                    productPrice.setText(String.format("%d в‚Ѕ Г— %d",
                            product.getPrice(),
                            product.getQuantity()));
                } else {
                    productPrice.setText(String.format("%d в‚Ѕ", product.getPrice()));
                }
            }
            if (productImage != null) {
                if (product.getImageBase64() != null && !product.getImageBase64().isEmpty()) {
                    try {
                        byte[] decodedBytes = Base64.decode(product.getImageBase64(), Base64.DEFAULT);
                        Bitmap bitmap = BitmapFactory.decodeByteArray(decodedBytes, 0, decodedBytes.length);
                        productImage.setImageBitmap(bitmap);
                    } catch (IllegalArgumentException e) {
                        productImage.setImageResource(R.drawable.no_photo);
                    }
                } else {
                    productImage.setImageResource(R.drawable.no_photo);
                }
            }
        }
    }
}

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\java\com\example\ozon\ProductDetail.java
package com.example.ozon;

import android.os.Bundle;
import android.util.Base64;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import android.widget.Toast;
import androidx.fragment.app.Fragment;
import com.bumptech.glide.Glide;
import com.google.firebase.firestore.DocumentSnapshot;
import com.google.firebase.firestore.FirebaseFirestore;

/**
 * РљР»Р°СЃСЃ ProductDetail РїСЂРµРґСЃС‚Р°РІР»СЏРµС‚ СЃРѕР±РѕР№ С„СЂР°РіРјРµРЅС‚ РґР»СЏ РѕС‚РѕР±СЂР°Р¶РµРЅРёСЏ РґРµС‚Р°Р»СЊРЅРѕР№ РёРЅС„РѕСЂРјР°С†РёРё
 * Рѕ С‚РѕРІР°СЂРµ РІ РїСЂРёР»РѕР¶РµРЅРёРё "OZON". РџРѕР·РІРѕР»СЏРµС‚ РїРѕР»СЊР·РѕРІР°С‚РµР»СЋ РїСЂРѕСЃРјРѕС‚СЂРµС‚СЊ
 * РґР°РЅРЅС‹Рµ Рѕ С‚РѕРІР°СЂРµ, С‚Р°РєРёРµ РєР°Рє РЅР°Р·РІР°РЅРёРµ, С†РµРЅР°, РѕРїРёСЃР°РЅРёРµ, С‚РёРї, РёР·РѕР±СЂР°Р¶РµРЅРёРµ Рё РјР°РіР°Р·РёРЅ,
 * Р° С‚Р°РєР¶Рµ РґРѕР±Р°РІРёС‚СЊ С‚РѕРІР°СЂ РІ РєРѕСЂР·РёРЅСѓ.
 */
public class ProductDetail extends Fragment {
    private ImageView productImage;
    private TextView productName, productPrice, productTypes, productDescription, storeNameTextView;
    private Button addToCartButton;
    private FirebaseFirestore db;
    private String documentId;
    private String imageBase64;
    private String name;
    private Long price;
    private String userDocumentId;
    private String sellerId;
    private int availableQuantity = 0;

    /**
     * РЎРѕР·РґР°РµС‚ Рё РІРѕР·РІСЂР°С‰Р°РµС‚ РїСЂРµРґСЃС‚Р°РІР»РµРЅРёРµ С„СЂР°РіРјРµРЅС‚Р°. РРЅРёС†РёР°Р»РёР·РёСЂСѓРµС‚ СЌР»РµРјРµРЅС‚С‹ UI,
     * РёР·РІР»РµРєР°РµС‚ РґР°РЅРЅС‹Рµ Рѕ С‚РѕРІР°СЂРµ Рё РїРѕР»СЊР·РѕРІР°С‚РµР»Рµ РёР· Р°СЂРіСѓРјРµРЅС‚РѕРІ Рё Р·Р°РіСЂСѓР¶Р°РµС‚ РґРµС‚Р°Р»Рё С‚РѕРІР°СЂР°.
     */
    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
        View view = inflater.inflate(R.layout.product_detail_layout, container, false);
        productImage = view.findViewById(R.id.productImage);
        productName = view.findViewById(R.id.productName);
        productPrice = view.findViewById(R.id.productPrice);
        productTypes = view.findViewById(R.id.productType);
        productDescription = view.findViewById(R.id.productDescription);
        addToCartButton = view.findViewById(R.id.addToCartButton);
        storeNameTextView = view.findViewById(R.id.storeNameTextView);
        db = FirebaseFirestore.getInstance();
        Bundle args = getArguments();
        if (args != null) {
            documentId = args.getString("productId");
            userDocumentId = args.getString("userDocumentId");
        }
        loadProductDetails(documentId);
        addToCartButton.setOnClickListener(v -> addToCart());
        return view;
    }

    /**
     * Р—Р°РіСЂСѓР¶Р°РµС‚ РґРµС‚Р°Р»СЊРЅСѓСЋ РёРЅС„РѕСЂРјР°С†РёСЋ Рѕ С‚РѕРІР°СЂРµ РёР· Firebase Firestore. Р—Р°РїРѕР»РЅСЏРµС‚ СЌР»РµРјРµРЅС‚С‹ UI
     * РґР°РЅРЅС‹РјРё Рѕ С‚РѕРІР°СЂРµ, С‚Р°РєРёРјРё РєР°Рє РЅР°Р·РІР°РЅРёРµ, С†РµРЅР°, РѕРїРёСЃР°РЅРёРµ, С‚РёРї Рё РёР·РѕР±СЂР°Р¶РµРЅРёРµ, Р° С‚Р°РєР¶Рµ
     * Р·Р°РіСЂСѓР¶Р°РµС‚ РЅР°Р·РІР°РЅРёРµ РјР°РіР°Р·РёРЅР° РїСЂРѕРґР°РІС†Р°.
     */
    private void loadProductDetails(String documentId) {
        db.collection("products")
                .document(documentId)
                .get()
                .addOnCompleteListener(task -> {
                    if (task.isSuccessful()) {
                        DocumentSnapshot document = task.getResult();
                        if (document != null && document.exists()) {
                            name = document.getString("name");
                            price = document.getLong("price");
                            String description = document.getString("description");
                            imageBase64 = document.getString("imageBase64");
                            String productType = document.getString("productType");
                            sellerId = document.getString("sellerId");
                            Long quantity = document.getLong("quantity");
                            availableQuantity = quantity != null ? quantity.intValue() : 0;
                            productName.setText(name);
                            productPrice.setText(price + " СЂСѓР±Р»РµР№");
                            productDescription.setText("РћРїРёСЃР°РЅРёРµ: " + description);
                            productTypes.setText("РўРёРї: " + productType);
                            if (imageBase64 != null && !imageBase64.isEmpty()) {
                                byte[] decodedString = Base64.decode(imageBase64, Base64.DEFAULT);
                                Glide.with(getContext())
                                        .load(decodedString)
                                        .into(productImage);
                            }
                            if (sellerId != null) {
                                loadStoreName(sellerId);
                            } else {
                                storeNameTextView.setText("РњР°РіР°Р·РёРЅ: РќРµРёР·РІРµСЃС‚РЅРѕ");
                            }
                            updateAddToCartButtonState();
                        }
                    }
                });
    }

    /**
     * РћР±РЅРѕРІР»СЏРµС‚ СЃРѕСЃС‚РѕСЏРЅРёРµ РєРЅРѕРїРєРё РґРѕР±Р°РІР»РµРЅРёСЏ РІ РєРѕСЂР·РёРЅСѓ. Р”РµР°РєС‚РёРІРёСЂСѓРµС‚ РєРЅРѕРїРєСѓ, РµСЃР»Рё С‚РѕРІР°СЂР°
     * РЅРµС‚ РІ РЅР°Р»РёС‡РёРё, Рё Р°РєС‚РёРІРёСЂСѓРµС‚ РµС‘, РµСЃР»Рё С‚РѕРІР°СЂ РґРѕСЃС‚СѓРїРµРЅ.
     */
    private void updateAddToCartButtonState() {
        if (availableQuantity <= 0) {
            addToCartButton.setEnabled(false);
            addToCartButton.setBackgroundColor(getResources().getColor(R.color.light_gray));
            addToCartButton.setText("РќРµС‚ РІ РЅР°Р»РёС‡РёРё");
        } else {
            addToCartButton.setEnabled(true);
            addToCartButton.setBackgroundColor(getResources().getColor(R.color.button_color));
        }
    }

    /**
     * Р—Р°РіСЂСѓР¶Р°РµС‚ РЅР°Р·РІР°РЅРёРµ РјР°РіР°Р·РёРЅР° РїСЂРѕРґР°РІС†Р° РёР· Firebase Firestore. РћР±РЅРѕРІР»СЏРµС‚ С‚РµРєСЃС‚РѕРІРѕРµ РїРѕР»Рµ
     * СЃ РЅР°Р·РІР°РЅРёРµРј РјР°РіР°Р·РёРЅР° РёР»Рё СѓСЃС‚Р°РЅР°РІР»РёРІР°РµС‚ Р·РЅР°С‡РµРЅРёРµ "РќРµРёР·РІРµСЃС‚РЅРѕ", РµСЃР»Рё РґР°РЅРЅС‹Рµ РѕС‚СЃСѓС‚СЃС‚РІСѓСЋС‚.
     */
    private void loadStoreName(String sellerId) {
        db.collection("users")
                .document(sellerId)
                .get()
                .addOnCompleteListener(task -> {
                    if (task.isSuccessful()) {
                        DocumentSnapshot document = task.getResult();
                        if (document != null && document.exists()) {
                            String storeName = document.getString("storeName");
                            if (storeName != null) {
                                storeNameTextView.setText("РњР°РіР°Р·РёРЅ: " + storeName);
                            } else {
                                storeNameTextView.setText("РњР°РіР°Р·РёРЅ: РќРµРёР·РІРµСЃС‚РЅРѕ");
                            }
                        } else {
                            storeNameTextView.setText("РњР°РіР°Р·РёРЅ: РќРµРёР·РІРµСЃС‚РЅРѕ");
                        }
                    }
                });
    }

    /**
     * Р”РѕР±Р°РІР»СЏРµС‚ С‚РѕРІР°СЂ РІ РєРѕСЂР·РёРЅСѓ РїРѕР»СЊР·РѕРІР°С‚РµР»СЏ РІ Firebase Firestore. РџСЂРѕРІРµСЂСЏРµС‚ РЅР°Р»РёС‡РёРµ С‚РѕРІР°СЂР°
     * РЅР° СЃРєР»Р°РґРµ, РѕР±РЅРѕРІР»СЏРµС‚ РєРѕР»РёС‡РµСЃС‚РІРѕ РІ РєРѕСЂР·РёРЅРµ РёР»Рё СЃРѕР·РґР°РµС‚ РЅРѕРІСѓСЋ Р·Р°РїРёСЃСЊ, РµСЃР»Рё С‚РѕРІР°СЂ РґРѕР±Р°РІР»СЏРµС‚СЃСЏ РІРїРµСЂРІС‹Рµ.
     */
    private void addToCart() {
        if (userDocumentId == null) {
            return;
        }
        if (availableQuantity <= 0) {
            Toast.makeText(getContext(), "РўРѕРІР°СЂР° РЅРµС‚ РІ РЅР°Р»РёС‡РёРё", Toast.LENGTH_SHORT).show();
            return;
        }
        String cartItemId = userDocumentId + "_" + documentId;
        FirebaseFirestore.getInstance().collection("cart")
                .document(cartItemId)
                .get()
                .addOnCompleteListener(task -> {
                    if (task.isSuccessful()) {
                        DocumentSnapshot document = task.getResult();
                        if (document != null && document.exists()) {
                            int currentQuantity = document.getLong("quantity").intValue();
                            if (currentQuantity + 1 > availableQuantity) {
                                Toast.makeText(getContext(), "РќРµРґРѕСЃС‚Р°С‚РѕС‡РЅРѕ С‚РѕРІР°СЂР° РЅР° СЃРєР»Р°РґРµ", Toast.LENGTH_SHORT).show();
                                return;
                            }
                            FirebaseFirestore.getInstance().collection("cart")
                                    .document(cartItemId)
                                    .update("quantity", currentQuantity + 1)
                                    .addOnFailureListener(e -> {
                                        Toast.makeText(getContext(), "РћС€РёР±РєР° РїСЂРё РѕР±РЅРѕРІР»РµРЅРёРё РєРѕСЂР·РёРЅС‹", Toast.LENGTH_SHORT).show();
                                    });
                        } else {
                            if (availableQuantity > 0) {
                                Cart cart = new Cart(documentId, name, price.intValue(), 1, imageBase64, userDocumentId);
                                FirebaseFirestore.getInstance().collection("cart")
                                        .document(cartItemId)
                                        .set(cart)
                                        .addOnFailureListener(e -> {
                                            Toast.makeText(getContext(), "РћС€РёР±РєР° РїСЂРё РґРѕР±Р°РІР»РµРЅРёРё РІ РєРѕСЂР·РёРЅСѓ", Toast.LENGTH_SHORT).show();
                                        });
                            } else {
                                Toast.makeText(getContext(), "РўРѕРІР°СЂР° РЅРµС‚ РІ РЅР°Р»РёС‡РёРё", Toast.LENGTH_SHORT).show();
                            }
                        }
                    } else {
                        Toast.makeText(getContext(), "РћС€РёР±РєР° РїСЂРё РїСЂРѕРІРµСЂРєРµ РєРѕСЂР·РёРЅС‹", Toast.LENGTH_SHORT).show();
                    }
                });
    }
}

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\java\com\example\ozon\ProductDetailSeller.java
package com.example.ozon;

import android.app.AlertDialog;
import android.content.Intent;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.net.Uri;
import android.os.Bundle;
import android.provider.MediaStore;
import android.util.Base64;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ArrayAdapter;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.Spinner;
import android.widget.TextView;
import android.widget.Toast;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.fragment.app.Fragment;
import com.bumptech.glide.Glide;
import com.google.firebase.firestore.DocumentSnapshot;
import com.google.firebase.firestore.FirebaseFirestore;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

/**
 * РљР»Р°СЃСЃ ProductDetailSeller РїСЂРµРґСЃС‚Р°РІР»СЏРµС‚ СЃРѕР±РѕР№ С„СЂР°РіРјРµРЅС‚ РґР»СЏ РѕС‚РѕР±СЂР°Р¶РµРЅРёСЏ Рё СЂРµРґР°РєС‚РёСЂРѕРІР°РЅРёСЏ
 * РґРµС‚Р°Р»СЊРЅРѕР№ РёРЅС„РѕСЂРјР°С†РёРё Рѕ С‚РѕРІР°СЂРµ РїСЂРѕРґР°РІС†РѕРј РІ РїСЂРёР»РѕР¶РµРЅРёРё "OZON". РџРѕР·РІРѕР»СЏРµС‚
 * РїСЂРѕРґР°РІС†Сѓ РёР·РјРµРЅСЏС‚СЊ РёРЅС„РѕСЂРјР°С†РёСЋ Рѕ С‚РѕРІР°СЂРµ, РїРѕРїРѕР»РЅСЏС‚СЊ РєРѕР»РёС‡РµСЃС‚РІРѕ, СѓРґР°Р»СЏС‚СЊ С‚РѕРІР°СЂ Рё РїСЂРѕСЃРјР°С‚СЂРёРІР°С‚СЊ
 * РІС‹СЂСѓС‡РєСѓ РѕС‚ РїСЂРѕРґР°Р¶.
 */
public class ProductDetailSeller extends Fragment {
    private Product product;
    private ImageView productImage;
    private TextView productName, productPrice, productType, productDescription, productQuantity;
    private Button editProductButton;
    private TextView revenueTextView;
    private String userDocumentId;
    private static final int PICK_IMAGE_REQUEST = 1;
    private Uri imageUri;

    /**
     * РЎРѕР·РґР°РµС‚ Рё РІРѕР·РІСЂР°С‰Р°РµС‚ РїСЂРµРґСЃС‚Р°РІР»РµРЅРёРµ С„СЂР°РіРјРµРЅС‚Р°. РРЅРёС†РёР°Р»РёР·РёСЂСѓРµС‚ СЌР»РµРјРµРЅС‚С‹ UI, Р·Р°РіСЂСѓР¶Р°РµС‚
     * РґР°РЅРЅС‹Рµ Рѕ С‚РѕРІР°СЂРµ РёР· Firebase Firestore Рё РЅР°СЃС‚СЂР°РёРІР°РµС‚ РѕР±СЂР°Р±РѕС‚С‡РёРє РґР»СЏ РєРЅРѕРїРєРё СЂРµРґР°РєС‚РёСЂРѕРІР°РЅРёСЏ.
     */
    @Override
    public View onCreateView(@NonNull LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
        View view = inflater.inflate(R.layout.product_detail_seller_layout, container, false);
        productImage = view.findViewById(R.id.productImage);
        productName = view.findViewById(R.id.productName);
        productPrice = view.findViewById(R.id.productPrice);
        productType = view.findViewById(R.id.productType);
        revenueTextView = view.findViewById(R.id.productRevenue);
        productDescription = view.findViewById(R.id.productDescription);
        productQuantity = view.findViewById(R.id.productQuantity);
        editProductButton = view.findViewById(R.id.editProductButton);
        Bundle bundle = getArguments();
        if (bundle != null) {
            userDocumentId = bundle.getString("userDocumentId");
            String productId = bundle.getString("productId");
            if (productId == null) {
                requireActivity().getSupportFragmentManager().popBackStack();
                return view;
            }
            FirebaseFirestore.getInstance().collection("products")
                    .document(productId)
                    .get()
                    .addOnCompleteListener(task -> {
                        if (task.isSuccessful()) {
                            DocumentSnapshot document = task.getResult();
                            if (document != null && document.exists()) {
                                product = document.toObject(Product.class);
                                if (product != null) {
                                    product.setId(document.getId());
                                    updateUI();
                                }
                            } else {
                                Toast.makeText(requireContext(), "РўРѕРІР°СЂ РЅРµ РЅР°Р№РґРµРЅ", Toast.LENGTH_SHORT).show();
                            }
                        } else {
                            Toast.makeText(requireContext(), "РћС€РёР±РєР° Р·Р°РіСЂСѓР·РєРё РґР°РЅРЅС‹С…", Toast.LENGTH_SHORT).show();
                        }
                    });
        } else {
            Toast.makeText(requireContext(), "РћС€РёР±РєР°: РґР°РЅРЅС‹Рµ РЅРµ РїРµСЂРµРґР°РЅС‹", Toast.LENGTH_SHORT).show();
            requireActivity().getSupportFragmentManager().popBackStack();
        }
        editProductButton.setOnClickListener(v -> showOptionsMenu());
        return view;
    }

    /**
     * Р’С‹С‡РёСЃР»СЏРµС‚ РІС‹СЂСѓС‡РєСѓ РѕС‚ РїСЂРѕРґР°Р¶ С‚РѕРІР°СЂР°. РђРЅР°Р»РёР·РёСЂСѓРµС‚ РІСЃРµ Р·Р°РєР°Р·С‹ РІ Firebase Firestore,
     * РїРѕРґСЃС‡РёС‚С‹РІР°РµС‚ РєРѕР»РёС‡РµСЃС‚РІРѕ РїСЂРѕРґР°РЅРЅС‹С… РµРґРёРЅРёС† Рё РѕР±С‰СѓСЋ СЃСѓРјРјСѓ, Р·Р°С‚РµРј РѕР±РЅРѕРІР»СЏРµС‚ UI.
     */
    private void calculateRevenue() {
        if (product == null) return;
        FirebaseFirestore.getInstance().collection("orders")
                .get()
                .addOnCompleteListener(task -> {
                    if (task.isSuccessful()) {
                        double totalRevenue = 0;
                        int totalQuantitySold = 0;
                        for (DocumentSnapshot order : task.getResult()) {
                            List<Map<String, Object>> products = (List<Map<String, Object>>) order.get("products");
                            if (products != null) {
                                for (Map<String, Object> productInOrder : products) {
                                    String productName = (String) productInOrder.get("name");
                                    Long priceLong = (Long) productInOrder.get("price");
                                    int price = priceLong != null ? priceLong.intValue() : 0;
                                    if (product.getName().equals(productName) && product.getPrice() == price) {
                                        Long quantityLong = (Long) productInOrder.get("quantity");
                                        int quantity = quantityLong != null ? quantityLong.intValue() : 0;
                                        totalRevenue += quantity * price;
                                        totalQuantitySold += quantity;
                                    }
                                }
                            }
                        }
                        revenueTextView.setText(String.format("Р’С‹СЂСѓС‡РєР°: %.2f в‚Ѕ (РїСЂРѕРґР°РЅРѕ %d С€С‚.)", totalRevenue, totalQuantitySold));
                    } else {
                        revenueTextView.setText("Р’С‹СЂСѓС‡РєР°: РґР°РЅРЅС‹Рµ РЅРµРґРѕСЃС‚СѓРїРЅС‹");
                    }
                });
    }

    /**
     * РћР±РЅРѕРІР»СЏРµС‚ СЌР»РµРјРµРЅС‚С‹ UI РґР°РЅРЅС‹РјРё Рѕ С‚РѕРІР°СЂРµ. РЈСЃС‚Р°РЅР°РІР»РёРІР°РµС‚ РЅР°Р·РІР°РЅРёРµ, С†РµРЅСѓ, С‚РёРї, РѕРїРёСЃР°РЅРёРµ,
     * РєРѕР»РёС‡РµСЃС‚РІРѕ Рё РёР·РѕР±СЂР°Р¶РµРЅРёРµ С‚РѕРІР°СЂР°, Р° С‚Р°РєР¶Рµ РІС‹Р·С‹РІР°РµС‚ РјРµС‚РѕРґ РґР»СЏ СЂР°СЃС‡РµС‚Р° РІС‹СЂСѓС‡РєРё.
     */
    private void updateUI() {
        if (product != null) {
            productName.setText(product.getName());
            productPrice.setText(String.format("%d в‚Ѕ", product.getPrice()));
            productType.setText(String.format("РўРёРї С‚РѕРІР°СЂР°: %s", product.getProductType()));
            productDescription.setText(product.getDescription());
            productQuantity.setText(String.format("РљРѕР»РёС‡РµСЃС‚РІРѕ: %d", product.getQuantity()));
            calculateRevenue();
            if (product.getImageBase64() != null && !product.getImageBase64().isEmpty()) {
                Bitmap bitmap = base64ToBitmap(product.getImageBase64());
                if (bitmap != null) {
                    Glide.with(this).load(bitmap).into(productImage);
                } else {
                    productImage.setImageResource(R.drawable.no_photo);
                }
            } else {
                productImage.setImageResource(R.drawable.no_photo);
            }
        }
    }

    /**
     * РћС‚РѕР±СЂР°Р¶Р°РµС‚ РјРµРЅСЋ СЃ РѕРїС†РёСЏРјРё РґР»СЏ СЂРµРґР°РєС‚РёСЂРѕРІР°РЅРёСЏ С‚РѕРІР°СЂР°. РџСЂРµРґР»Р°РіР°РµС‚ РїРѕР»СЊР·РѕРІР°С‚РµР»СЋ
     * РїРѕРїРѕР»РЅРёС‚СЊ РєРѕР»РёС‡РµСЃС‚РІРѕ, РёР·РјРµРЅРёС‚СЊ РёРЅС„РѕСЂРјР°С†РёСЋ Рѕ С‚РѕРІР°СЂРµ РёР»Рё СѓРґР°Р»РёС‚СЊ С‚РѕРІР°СЂ.
     */
    private void showOptionsMenu() {
        String[] options = {"РџРѕРїРѕР»РЅРёС‚СЊ РєРѕР»РёС‡РµСЃС‚РІРѕ", "РР·РјРµРЅРёС‚СЊ РёРЅС„РѕСЂРјР°С†РёСЋ", "РЈРґР°Р»РёС‚СЊ С‚РѕРІР°СЂ"};
        AlertDialog.Builder builder = new AlertDialog.Builder(requireContext());
        builder.setTitle("Р’С‹Р±РµСЂРёС‚Рµ РґРµР№СЃС‚РІРёРµ");
        builder.setItems(options, (dialog, which) -> {
            switch (which) {
                case 0:
                    showAddQuantityDialog();
                    break;
                case 1:
                    showEditProductDialog();
                    break;
                case 2:
                    deleteProduct();
                    break;
            }
        });
        builder.show();
    }

    /**
     * РћС‚РѕР±СЂР°Р¶Р°РµС‚ РґРёР°Р»РѕРіРѕРІРѕРµ РѕРєРЅРѕ РґР»СЏ РїРѕРїРѕР»РЅРµРЅРёСЏ РєРѕР»РёС‡РµСЃС‚РІР° С‚РѕРІР°СЂР°. РџРѕР·РІРѕР»СЏРµС‚ РїСЂРѕРґР°РІС†Сѓ
     * РІРІРµСЃС‚Рё РєРѕР»РёС‡РµСЃС‚РІРѕ РґР»СЏ РґРѕР±Р°РІР»РµРЅРёСЏ Рё РѕР±РЅРѕРІР»СЏРµС‚ РґР°РЅРЅС‹Рµ РІ Firebase Firestore.
     */
    private void showAddQuantityDialog() {
        AlertDialog.Builder builder = new AlertDialog.Builder(requireContext());
        LayoutInflater inflater = requireActivity().getLayoutInflater();
        View dialogView = inflater.inflate(R.layout.dialog_add_quantity, null);
        builder.setView(dialogView);
        EditText quantityInput = dialogView.findViewById(R.id.quantityInput);
        Button cancelButton = dialogView.findViewById(R.id.cancelButton);
        Button saveButton = dialogView.findViewById(R.id.saveButton);
        AlertDialog dialog = builder.create();
        cancelButton.setOnClickListener(v -> dialog.dismiss());
        saveButton.setOnClickListener(v -> {
            String quantityStr = quantityInput.getText().toString();
            if (!quantityStr.isEmpty()) {
                int addedQuantity = Integer.parseInt(quantityStr);
                if (addedQuantity < 1) {
                    Toast.makeText(requireContext(), "РљРѕР»РёС‡РµСЃС‚РІРѕ РґРѕР»Р¶РЅРѕ Р±С‹С‚СЊ РЅРµ РјРµРЅРµРµ 1", Toast.LENGTH_SHORT).show();
                    return;
                }
                updateProductQuantity(addedQuantity);
                dialog.dismiss();
            } else {
                Toast.makeText(requireContext(), "Р’РІРµРґРёС‚Рµ РєРѕР»РёС‡РµСЃС‚РІРѕ", Toast.LENGTH_SHORT).show();
            }
        });
        dialog.show();
    }

    /**
     * РћР±РЅРѕРІР»СЏРµС‚ РєРѕР»РёС‡РµСЃС‚РІРѕ С‚РѕРІР°СЂР° РІ Firebase Firestore. РЈРІРµР»РёС‡РёРІР°РµС‚ РєРѕР»РёС‡РµСЃС‚РІРѕ РЅР° СѓРєР°Р·Р°РЅРЅРѕРµ
     * Р·РЅР°С‡РµРЅРёРµ Рё РѕР±РЅРѕРІР»СЏРµС‚ UI РїРѕСЃР»Рµ СѓСЃРїРµС€РЅРѕРіРѕ РѕР±РЅРѕРІР»РµРЅРёСЏ.
     */
    private void updateProductQuantity(int addedQuantity) {
        int newQuantity = product.getQuantity() + addedQuantity;
        FirebaseFirestore.getInstance().collection("products")
                .document(product.getId())
                .update("quantity", newQuantity)
                .addOnSuccessListener(aVoid -> {
                    product.setQuantity(newQuantity);
                    productQuantity.setText(String.format("РљРѕР»РёС‡РµСЃС‚РІРѕ: %d", newQuantity));
                })
                .addOnFailureListener(e -> {
                    Toast.makeText(requireContext(), "РћС€РёР±РєР° РїСЂРё РѕР±РЅРѕРІР»РµРЅРёРё", Toast.LENGTH_SHORT).show();
                });
    }

    /**
     * РћС‚РѕР±СЂР°Р¶Р°РµС‚ РґРёР°Р»РѕРіРѕРІРѕРµ РѕРєРЅРѕ РґР»СЏ СЂРµРґР°РєС‚РёСЂРѕРІР°РЅРёСЏ РёРЅС„РѕСЂРјР°С†РёРё Рѕ С‚РѕРІР°СЂРµ. РџРѕР·РІРѕР»СЏРµС‚ РїСЂРѕРґР°РІС†Сѓ
     * РёР·РјРµРЅРёС‚СЊ РЅР°Р·РІР°РЅРёРµ, С†РµРЅСѓ, РѕРїРёСЃР°РЅРёРµ, С‚РёРї Рё РёР·РѕР±СЂР°Р¶РµРЅРёРµ С‚РѕРІР°СЂР°, Р° С‚Р°РєР¶Рµ СѓРґР°Р»РёС‚СЊ РёР·РѕР±СЂР°Р¶РµРЅРёРµ.
     */
    private void showEditProductDialog() {
        AlertDialog.Builder builder = new AlertDialog.Builder(requireContext());
        LayoutInflater inflater = requireActivity().getLayoutInflater();
        View dialogView = inflater.inflate(R.layout.dialog_edit_product, null);
        builder.setView(dialogView);
        EditText editName = dialogView.findViewById(R.id.editName);
        EditText editPrice = dialogView.findViewById(R.id.editPrice);
        EditText editDescription = dialogView.findViewById(R.id.editDescription);
        Spinner editTypeSpinner = dialogView.findViewById(R.id.editTypeSpinner);
        Button uploadImageButton = dialogView.findViewById(R.id.uploadImageButton);
        Button removeImageButton = dialogView.findViewById(R.id.removeImageButton);
        Button cancelButton = dialogView.findViewById(R.id.cancelButton);
        Button saveButton = dialogView.findViewById(R.id.saveButton);
        if (editName == null || editPrice == null || editDescription == null || editTypeSpinner == null ||
                uploadImageButton == null || cancelButton == null || saveButton == null || removeImageButton == null) {
            Toast.makeText(requireContext(), "РћС€РёР±РєР° РёРЅС‚РµСЂС„РµР№СЃР°", Toast.LENGTH_SHORT).show();
            return;
        }
        loadProductTypes(editTypeSpinner);
        editName.setText(product != null ? product.getName() : "");
        editPrice.setText(product != null ? String.valueOf(product.getPrice()) : "");
        editDescription.setText(product != null ? product.getDescription() : "");
        AlertDialog dialog = builder.create();
        uploadImageButton.setOnClickListener(v -> openImagePicker());
        removeImageButton.setOnClickListener(v -> {
            imageUri = null;
            updateProductInfo(editName.getText().toString().trim(),
                    Integer.parseInt(editPrice.getText().toString().trim()),
                    editDescription.getText().toString().trim(),
                    editTypeSpinner.getSelectedItem().toString(),
                    null);
            dialog.dismiss();
        });
        cancelButton.setOnClickListener(v -> dialog.dismiss());
        saveButton.setOnClickListener(v -> {
            String name = editName.getText().toString().trim();
            String priceStr = editPrice.getText().toString().trim();
            String description = editDescription.getText().toString().trim();
            Object selectedItem = editTypeSpinner.getSelectedItem();
            if (!validateProductInput(name, priceStr, description, selectedItem)) {
                return;
            }
            int price = Integer.parseInt(priceStr);
            String type = selectedItem.toString();
            updateProductInfo(name, price, description, type, imageUri);
            dialog.dismiss();
        });
        dialog.show();
    }

    /**
     * РџСЂРѕРІРµСЂСЏРµС‚ РєРѕСЂСЂРµРєС‚РЅРѕСЃС‚СЊ РІРІРµРґРµРЅРЅС‹С… РґР°РЅРЅС‹С… Рѕ С‚РѕРІР°СЂРµ. РЈР±РµР¶РґР°РµС‚СЃСЏ, С‡С‚Рѕ РЅР°Р·РІР°РЅРёРµ, С†РµРЅР°,
     * РѕРїРёСЃР°РЅРёРµ Рё С‚РёРї С‚РѕРІР°СЂР° СЃРѕРѕС‚РІРµС‚СЃС‚РІСѓСЋС‚ Р·Р°РґР°РЅРЅС‹Рј С‚СЂРµР±РѕРІР°РЅРёСЏРј.
     */
    private boolean validateProductInput(String name, String priceStr, String description, Object selectedItem) {
        if (name.length() < 4) {
            Toast.makeText(requireContext(), "РќР°Р·РІР°РЅРёРµ РґРѕР»Р¶РЅРѕ СЃРѕРґРµСЂР¶Р°С‚СЊ РјРёРЅРёРјСѓРј 4 СЃРёРјРІРѕР»Р°", Toast.LENGTH_SHORT).show();
            return false;
        }
        if (priceStr.isEmpty()) {
            Toast.makeText(requireContext(), "Р’РІРµРґРёС‚Рµ С†РµРЅСѓ", Toast.LENGTH_SHORT).show();
            return false;
        }
        try {
            int price = Integer.parseInt(priceStr);
            if (price < 1) {
                Toast.makeText(requireContext(), "Р¦РµРЅР° РґРѕР»Р¶РЅР° Р±С‹С‚СЊ РЅРµ РјРµРЅРµРµ 1 СЂСѓР±Р»СЏ", Toast.LENGTH_SHORT).show();
                return false;
            }
        } catch (NumberFormatException e) {
            Toast.makeText(requireContext(), "Р¦РµРЅР° РґРѕР»Р¶РЅР° Р±С‹С‚СЊ С‡РёСЃР»РѕРј", Toast.LENGTH_SHORT).show();
            return false;
        }
        if (description.length() < 10) {
            Toast.makeText(requireContext(), "РћРїРёСЃР°РЅРёРµ РґРѕР»Р¶РЅРѕ СЃРѕРґРµСЂР¶Р°С‚СЊ РјРёРЅРёРјСѓРј 10 СЃРёРјРІРѕР»РѕРІ", Toast.LENGTH_SHORT).show();
            return false;
        }
        if (selectedItem == null) {
            Toast.makeText(requireContext(), "Р’С‹Р±РµСЂРёС‚Рµ РєР°С‚РµРіРѕСЂРёСЋ С‚РѕРІР°СЂР°", Toast.LENGTH_SHORT).show();
            return false;
        }
        return true;
    }

    /**
     * Р—Р°РіСЂСѓР¶Р°РµС‚ СЃРїРёСЃРѕРє С‚РёРїРѕРІ С‚РѕРІР°СЂРѕРІ РёР· Firebase Firestore Рё Р·Р°РїРѕР»РЅСЏРµС‚ РІС‹РїР°РґР°СЋС‰РёР№ СЃРїРёСЃРѕРє.
     * РЈСЃС‚Р°РЅР°РІР»РёРІР°РµС‚ С‚РµРєСѓС‰РёР№ С‚РёРї С‚РѕРІР°СЂР°, РµСЃР»Рё РѕРЅ СѓР¶Рµ Р·Р°РґР°РЅ.
     */
    private void loadProductTypes(Spinner spinner) {
        FirebaseFirestore.getInstance().collection("productType")
                .get()
                .addOnCompleteListener(task -> {
                    if (task.isSuccessful()) {
                        List<String> types = new ArrayList<>();
                        for (DocumentSnapshot document : task.getResult()) {
                            String typeName = document.getString("name");
                            if (typeName != null) {
                                types.add(typeName);
                            }
                        }
                        ArrayAdapter<String> adapter = new ArrayAdapter<>(requireContext(), android.R.layout.simple_spinner_item, types);
                        adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
                        spinner.setAdapter(adapter);
                        if (product != null) {
                            int position = types.indexOf(product.getProductType());
                            if (position >= 0) {
                                spinner.setSelection(position);
                            }
                        }
                    } else {
                        Toast.makeText(requireContext(), "РћС€РёР±РєР° РїСЂРё Р·Р°РіСЂСѓР·РєРµ С‚РёРїРѕРІ С‚РѕРІР°СЂРѕРІ", Toast.LENGTH_SHORT).show();
                    }
                });
    }

    /**
     * РћР±РЅРѕРІР»СЏРµС‚ РёРЅС„РѕСЂРјР°С†РёСЋ Рѕ С‚РѕРІР°СЂРµ РІ Firebase Firestore. РЎРѕС…СЂР°РЅСЏРµС‚ РЅРѕРІС‹Рµ РґР°РЅРЅС‹Рµ Рѕ С‚РѕРІР°СЂРµ,
     * РІРєР»СЋС‡Р°СЏ РЅР°Р·РІР°РЅРёРµ, С†РµРЅСѓ, РѕРїРёСЃР°РЅРёРµ, С‚РёРї Рё РёР·РѕР±СЂР°Р¶РµРЅРёРµ, Рё РѕР±РЅРѕРІР»СЏРµС‚ UI РїРѕСЃР»Рµ СѓСЃРїРµС€РЅРѕРіРѕ СЃРѕС…СЂР°РЅРµРЅРёСЏ.
     */
    private void updateProductInfo(String name, int price, String description, String type, Uri imageUri) {
        String imageBase64 = product.getImageBase64();
        if (imageUri != null) {
            imageBase64 = handleImage(imageUri);
        } else if (imageUri == null && product.getImageBase64() != null && !product.getImageBase64().isEmpty()) {
            imageBase64 = null;
        }
        if (imageBase64 == null && imageUri != null) {
            Toast.makeText(requireContext(), "РћС€РёР±РєР° РѕР±СЂР°Р±РѕС‚РєРё РёР·РѕР±СЂР°Р¶РµРЅРёСЏ", Toast.LENGTH_SHORT).show();
            return;
        }
        final String finalImageBase64 = imageBase64;
        FirebaseFirestore.getInstance().collection("products")
                .document(product.getId())
                .update(
                        "name", name,
                        "price", price,
                        "description", description,
                        "productType", type,
                        "imageBase64", finalImageBase64
                )
                .addOnSuccessListener(aVoid -> {
                    product.setName(name);
                    product.setPrice(price);
                    product.setDescription(description);
                    product.setProductType(type);
                    product.setImageBase64(finalImageBase64);
                    updateUI();
                })
                .addOnFailureListener(e -> {
                    Toast.makeText(requireContext(), "РћС€РёР±РєР° РїСЂРё РѕР±РЅРѕРІР»РµРЅРёРё", Toast.LENGTH_SHORT).show();
                });
    }

    /**
     * РћР±СЂР°Р±Р°С‚С‹РІР°РµС‚ РІС‹Р±СЂР°РЅРЅРѕРµ РёР·РѕР±СЂР°Р¶РµРЅРёРµ. РџСЂРµРѕР±СЂР°Р·СѓРµС‚ РёР·РѕР±СЂР°Р¶РµРЅРёРµ РІ С„РѕСЂРјР°С‚ Base64 РїРѕСЃР»Рµ
     * РёР·РјРµРЅРµРЅРёСЏ СЂР°Р·РјРµСЂР° Рё СЃР¶Р°С‚РёСЏ.
     */
    private String handleImage(Uri imageUri) {
        try {
            InputStream inputStream = requireActivity().getContentResolver().openInputStream(imageUri);
            Bitmap bitmap = BitmapFactory.decodeStream(inputStream);
            Bitmap resizedBitmap = resizeBitmap(bitmap, 800, 800);
            ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();
            resizedBitmap.compress(Bitmap.CompressFormat.JPEG, 80, byteArrayOutputStream);
            byte[] byteArray = byteArrayOutputStream.toByteArray();
            return Base64.encodeToString(byteArray, Base64.DEFAULT);
        } catch (IOException e) {
            e.printStackTrace();
            return null;
        }
    }

    /**
     * РР·РјРµРЅСЏРµС‚ СЂР°Р·РјРµСЂ РёР·РѕР±СЂР°Р¶РµРЅРёСЏ, СЃРѕС…СЂР°РЅСЏСЏ РїСЂРѕРїРѕСЂС†РёРё, С‡С‚РѕР±С‹ С€РёСЂРёРЅР° Рё РІС‹СЃРѕС‚Р° РЅРµ РїСЂРµРІС‹С€Р°Р»Рё
     * Р·Р°РґР°РЅРЅС‹С… РјР°РєСЃРёРјР°Р»СЊРЅС‹С… Р·РЅР°С‡РµРЅРёР№.
     */
    private Bitmap resizeBitmap(Bitmap bitmap, int maxWidth, int maxHeight) {
        int width = bitmap.getWidth();
        int height = bitmap.getHeight();
        float ratioBitmap = (float) width / (float) height;
        float ratioMax = (float) maxWidth / (float) maxHeight;
        int finalWidth = maxWidth;
        int finalHeight = maxHeight;
        if (ratioMax > ratioBitmap) {
            finalWidth = (int) ((float) maxHeight * ratioBitmap);
        } else {
            finalHeight = (int) ((float) maxWidth / ratioBitmap);
        }
        return Bitmap.createScaledBitmap(bitmap, finalWidth, finalHeight, true);
    }

    /**
     * РЈРґР°Р»СЏРµС‚ С‚РѕРІР°СЂ РёР· Firebase Firestore. РџРѕСЃР»Рµ СѓСЃРїРµС€РЅРѕРіРѕ СѓРґР°Р»РµРЅРёСЏ РІРѕР·РІСЂР°С‰Р°РµС‚ РїРѕР»СЊР·РѕРІР°С‚РµР»СЏ
     * РЅР° РїСЂРµРґС‹РґСѓС‰РёР№ СЌРєСЂР°РЅ.
     */
    private void deleteProduct() {
        FirebaseFirestore.getInstance().collection("products")
                .document(product.getId())
                .delete()
                .addOnSuccessListener(aVoid -> {
                    requireActivity().getSupportFragmentManager().popBackStack();
                })
                .addOnFailureListener(e -> {
                    Toast.makeText(requireContext(), "РћС€РёР±РєР° РїСЂРё СѓРґР°Р»РµРЅРёРё", Toast.LENGTH_SHORT).show();
                });
    }

    /**
     * РџСЂРµРѕР±СЂР°Р·СѓРµС‚ СЃС‚СЂРѕРєСѓ Base64 РІ РѕР±СЉРµРєС‚ Bitmap. РСЃРїРѕР»СЊР·СѓРµС‚СЃСЏ РґР»СЏ РѕС‚РѕР±СЂР°Р¶РµРЅРёСЏ РёР·РѕР±СЂР°Р¶РµРЅРёСЏ С‚РѕРІР°СЂР°.
     */
    private Bitmap base64ToBitmap(String base64String) {
        try {
            byte[] decodedBytes = Base64.decode(base64String, Base64.DEFAULT);
            return BitmapFactory.decodeByteArray(decodedBytes, 0, decodedBytes.length);
        } catch (IllegalArgumentException e) {
            e.printStackTrace();
            return null;
        }
    }

    /**
     * РћС‚РєСЂС‹РІР°РµС‚ СЃРёСЃС‚РµРјРЅС‹Р№ РІС‹Р±РѕСЂ РёР·РѕР±СЂР°Р¶РµРЅРёСЏ РґР»СЏ Р·Р°РіСЂСѓР·РєРё РЅРѕРІРѕРіРѕ РёР·РѕР±СЂР°Р¶РµРЅРёСЏ С‚РѕРІР°СЂР°.
     */
    private void openImagePicker() {
        Intent intent = new Intent(Intent.ACTION_PICK, MediaStore.Images.Media.EXTERNAL_CONTENT_URI);
        startActivityForResult(intent, PICK_IMAGE_REQUEST);
    }

    /**
     * РћР±СЂР°Р±Р°С‚С‹РІР°РµС‚ СЂРµР·СѓР»СЊС‚Р°С‚ РІС‹Р±РѕСЂР° РёР·РѕР±СЂР°Р¶РµРЅРёСЏ. Р—Р°РіСЂСѓР¶Р°РµС‚ РІС‹Р±СЂР°РЅРЅРѕРµ РёР·РѕР±СЂР°Р¶РµРЅРёРµ РІ UI
     * СЃ РїРѕРјРѕС‰СЊСЋ Glide.
     */
    @Override
    public void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {
        super.onActivityResult(requestCode, resultCode, data);
        if (requestCode == PICK_IMAGE_REQUEST && resultCode == getActivity().RESULT_OK && data != null) {
            imageUri = data.getData();
            Glide.with(this).load(imageUri).into(productImage);
        }
    }
}

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\java\com\example\ozon\ProfileActivity.java
package com.example.ozon;

import android.app.AlertDialog;
import android.content.Context;
import android.content.Intent;
import android.content.SharedPreferences;
import android.os.Bundle;
import android.text.Editable;
import android.text.TextWatcher;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import android.widget.Toast;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.PopupMenu;
import androidx.fragment.app.Fragment;
import androidx.recyclerview.widget.LinearLayoutManager;
import androidx.recyclerview.widget.RecyclerView;
import androidx.work.WorkManager;
import com.google.firebase.firestore.DocumentSnapshot;
import com.google.firebase.firestore.FirebaseFirestore;
import com.google.firebase.firestore.ListenerRegistration;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.regex.Pattern;

/**
 * РљР»Р°СЃСЃ ProfileActivity РїСЂРµРґСЃС‚Р°РІР»СЏРµС‚ СЃРѕР±РѕР№ С„СЂР°РіРјРµРЅС‚ РґР»СЏ РѕС‚РѕР±СЂР°Р¶РµРЅРёСЏ РїСЂРѕС„РёР»СЏ РїРѕР»СЊР·РѕРІР°С‚РµР»СЏ
 * РІ РїСЂРёР»РѕР¶РµРЅРёРё "OZON". РџРѕР·РІРѕР»СЏРµС‚ РїРѕР»СЊР·РѕРІР°С‚РµР»СЋ РїСЂРѕСЃРјР°С‚СЂРёРІР°С‚СЊ СЃРІРѕРё РґР°РЅРЅС‹Рµ,
 * Р·Р°РєР°Р·С‹, РєР°СЂС‚С‹, Р° С‚Р°РєР¶Рµ СЂРµРґР°РєС‚РёСЂРѕРІР°С‚СЊ РїСЂРѕС„РёР»СЊ, РёР·РјРµРЅСЏС‚СЊ РїР°СЂРѕР»СЊ, СЂРµРіРёСЃС‚СЂРёСЂРѕРІР°С‚СЊСЃСЏ РєР°Рє РїСЂРѕРґР°РІРµС†
 * Рё СѓРґР°Р»СЏС‚СЊ Р°РєРєР°СѓРЅС‚.
 */
public class ProfileActivity extends Fragment {
    private static final String STATUS_CREATED = "СЃРѕР·РґР°РЅ";
    private static final String STATUS_DELIVERED = "РґРѕСЃС‚Р°РІР»РµРЅ";
    private SharedPreferences sharedPrefs;
    private Context context;
    private TextView tvUserName, tvUserLogin;
    private FirebaseFirestore db;
    private String userDocumentId;
    private String userRole;
    private LinearLayout completedOrdersContainer, inDeliveryOrdersContainer, cardsContainer;
    private ListenerRegistration userListener;
    private ListenerRegistration inDeliveryOrdersListener;
    private ListenerRegistration completedOrdersListener;
    private ListenerRegistration cardsListener;
    private static final Pattern SPECIAL_CHAR_PATTERN = Pattern.compile("[!@#$%^&*(),.?\":{}|<>]");

    /**
     * РЎРѕР·РґР°РµС‚ Рё РІРѕР·РІСЂР°С‰Р°РµС‚ РїСЂРµРґСЃС‚Р°РІР»РµРЅРёРµ С„СЂР°РіРјРµРЅС‚Р°. РРЅРёС†РёР°Р»РёР·РёСЂСѓРµС‚ СЌР»РµРјРµРЅС‚С‹ UI,
     * РёР·РІР»РµРєР°РµС‚ РґР°РЅРЅС‹Рµ Рѕ РїРѕР»СЊР·РѕРІР°С‚РµР»Рµ РёР· Р°СЂРіСѓРјРµРЅС‚РѕРІ Рё РЅР°СЃС‚СЂР°РёРІР°РµС‚ СЃР»СѓС€Р°С‚РµР»Рё РґР»СЏ РѕР±РЅРѕРІР»РµРЅРёСЏ РґР°РЅРЅС‹С….
     */
    @Nullable
    @Override
    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {
        View view = inflater.inflate(R.layout.profile_activity, container, false);
        db = FirebaseFirestore.getInstance();
        Bundle bundle = getArguments();
        if (bundle != null) {
            userDocumentId = bundle.getString("USER_DOCUMENT_ID");
            userRole = bundle.getString("USER_ROLE");
        }
        initializeViews(view);
        setupMenuButton(view);
        setupAddCardButton(view);
        setupRealtimeListeners();
        return view;
    }

    /**
     * Р’С‹Р·С‹РІР°РµС‚СЃСЏ РїСЂРё Р·Р°РїСѓСЃРєРµ С„СЂР°РіРјРµРЅС‚Р°. РЈСЃС‚Р°РЅР°РІР»РёРІР°РµС‚ СЃР»СѓС€Р°С‚РµР»Рё РґР»СЏ РѕР±РЅРѕРІР»РµРЅРёСЏ РґР°РЅРЅС‹С… РІ СЂРµР°Р»СЊРЅРѕРј РІСЂРµРјРµРЅРё.
     */
    @Override
    public void onStart() {
        super.onStart();
        setupRealtimeListeners();
    }

    /**
     * Р’С‹Р·С‹РІР°РµС‚СЃСЏ РїСЂРё РѕСЃС‚Р°РЅРѕРІРєРµ С„СЂР°РіРјРµРЅС‚Р°. РЈРґР°Р»СЏРµС‚ СЃР»СѓС€Р°С‚РµР»Рё РґР»СЏ РѕР±РЅРѕРІР»РµРЅРёСЏ РґР°РЅРЅС‹С… РІ СЂРµР°Р»СЊРЅРѕРј РІСЂРµРјРµРЅРё.
     */
    @Override
    public void onStop() {
        super.onStop();
        removeRealtimeListeners();
    }

    /**
     * Р’С‹Р·С‹РІР°РµС‚СЃСЏ РїСЂРё СѓРЅРёС‡С‚РѕР¶РµРЅРёРё С„СЂР°РіРјРµРЅС‚Р°. РЈРґР°Р»СЏРµС‚ СЃР»СѓС€Р°С‚РµР»Рё РґР»СЏ РѕР±РЅРѕРІР»РµРЅРёСЏ РґР°РЅРЅС‹С… РІ СЂРµР°Р»СЊРЅРѕРј РІСЂРµРјРµРЅРё.
     */
    @Override
    public void onDestroy() {
        super.onDestroy();
        removeRealtimeListeners();
    }

    /**
     * РРЅРёС†РёР°Р»РёР·РёСЂСѓРµС‚ СЌР»РµРјРµРЅС‚С‹ UI С„СЂР°РіРјРµРЅС‚Р°, С‚Р°РєРёРµ РєР°Рє С‚РµРєСЃС‚РѕРІС‹Рµ РїРѕР»СЏ Рё РєРѕРЅС‚РµР№РЅРµСЂС‹ РґР»СЏ Р·Р°РєР°Р·РѕРІ Рё РєР°СЂС‚.
     */
    private void initializeViews(View view) {
        tvUserName = view.findViewById(R.id.tvUserName);
        tvUserLogin = view.findViewById(R.id.tvUserLogin);
        completedOrdersContainer = view.findViewById(R.id.completedOrdersContainer);
        inDeliveryOrdersContainer = view.findViewById(R.id.inDeliveryOrdersContainer);
        cardsContainer = view.findViewById(R.id.cardsContainer);
    }

    /**
     * РќР°СЃС‚СЂР°РёРІР°РµС‚ РєРЅРѕРїРєСѓ РјРµРЅСЋ. РЈСЃС‚Р°РЅР°РІР»РёРІР°РµС‚ РѕР±СЂР°Р±РѕС‚С‡РёРє РґР»СЏ РѕС‚РѕР±СЂР°Р¶РµРЅРёСЏ РІСЃРїР»С‹РІР°СЋС‰РµРіРѕ РјРµРЅСЋ.
     */
    private void setupMenuButton(View view) {
        ImageView btnMenu = view.findViewById(R.id.btnMenu);
        btnMenu.setOnClickListener(v -> showPopupMenu(v));
    }

    /**
     * РќР°СЃС‚СЂР°РёРІР°РµС‚ РєРЅРѕРїРєСѓ РґРѕР±Р°РІР»РµРЅРёСЏ РєР°СЂС‚С‹. РЈСЃС‚Р°РЅР°РІР»РёРІР°РµС‚ РѕР±СЂР°Р±РѕС‚С‡РёРє РґР»СЏ РѕС‚РѕР±СЂР°Р¶РµРЅРёСЏ РґРёР°Р»РѕРіР° РґРѕР±Р°РІР»РµРЅРёСЏ РєР°СЂС‚С‹.
     */
    private void setupAddCardButton(View view) {
        Button btnAddCard = view.findViewById(R.id.btnAddCard);
        btnAddCard.setOnClickListener(v -> showAddCardDialog());
    }

    /**
     * РЈСЃС‚Р°РЅР°РІР»РёРІР°РµС‚ СЃР»СѓС€Р°С‚РµР»Рё РґР»СЏ РѕР±РЅРѕРІР»РµРЅРёСЏ РґР°РЅРЅС‹С… РІ СЂРµР°Р»СЊРЅРѕРј РІСЂРµРјРµРЅРё. РћС‚СЃР»РµР¶РёРІР°РµС‚ РёР·РјРµРЅРµРЅРёСЏ
     * РІ РґР°РЅРЅС‹С… РїРѕР»СЊР·РѕРІР°С‚РµР»СЏ, Р·Р°РєР°Р·Р°С… Рё РєР°СЂС‚Р°С… РІ Firebase Firestore.
     */
    private void setupRealtimeListeners() {
        removeRealtimeListeners();
        if (userDocumentId != null) {
            userListener = db.collection("users").document(userDocumentId)
                    .addSnapshotListener((documentSnapshot, e) -> {
                        if (e != null) {
                            return;
                        }
                        if (documentSnapshot != null && documentSnapshot.exists()) {
                            updateUserDataUI(documentSnapshot);
                        }
                    });
            inDeliveryOrdersListener = db.collection("orders")
                    .whereEqualTo("userId", userDocumentId)
                    .whereEqualTo("status", STATUS_CREATED)
                    .addSnapshotListener((querySnapshot, e) -> {
                        if (e != null) {
                            return;
                        }
                        if (querySnapshot != null) {
                            updateInDeliveryOrdersUI(querySnapshot.getDocuments());
                        }
                    });
            completedOrdersListener = db.collection("orders")
                    .whereEqualTo("userId", userDocumentId)
                    .whereEqualTo("status", STATUS_DELIVERED)
                    .addSnapshotListener((querySnapshot, e) -> {
                        if (e != null) {
                            return;
                        }
                        if (querySnapshot != null) {
                            updateCompletedOrdersUI(querySnapshot.getDocuments());
                        }
                    });
            cardsListener = db.collection("cards")
                    .whereEqualTo("userId", userDocumentId)
                    .addSnapshotListener((querySnapshot, e) -> {
                        if (e != null) {
                            return;
                        }
                        if (querySnapshot != null) {
                            updateCardsUI(querySnapshot.getDocuments());
                        }
                    });
        }
    }

    /**
     * РЈРґР°Р»СЏРµС‚ СЃР»СѓС€Р°С‚РµР»Рё РґР»СЏ РѕР±РЅРѕРІР»РµРЅРёСЏ РґР°РЅРЅС‹С… РІ СЂРµР°Р»СЊРЅРѕРј РІСЂРµРјРµРЅРё, С‡С‚РѕР±С‹ РёР·Р±РµР¶Р°С‚СЊ СѓС‚РµС‡РµРє РїР°РјСЏС‚Рё.
     */
    private void removeRealtimeListeners() {
        if (userListener != null) {
            userListener.remove();
            userListener = null;
        }
        if (inDeliveryOrdersListener != null) {
            inDeliveryOrdersListener.remove();
            inDeliveryOrdersListener = null;
        }
        if (completedOrdersListener != null) {
            completedOrdersListener.remove();
            completedOrdersListener = null;
        }
        if (cardsListener != null) {
            cardsListener.remove();
            cardsListener = null;
        }
    }

    /**
     * РћР±РЅРѕРІР»СЏРµС‚ UI РґР°РЅРЅС‹РјРё РїРѕР»СЊР·РѕРІР°С‚РµР»СЏ. РЈСЃС‚Р°РЅР°РІР»РёРІР°РµС‚ РёРјСЏ Рё Р»РѕРіРёРЅ РїРѕР»СЊР·РѕРІР°С‚РµР»СЏ РІ С‚РµРєСЃС‚РѕРІС‹Рµ РїРѕР»СЏ.
     */
    private void updateUserDataUI(DocumentSnapshot document) {
        tvUserName.setText(document.getString("name"));
        tvUserLogin.setText("Р›РѕРіРёРЅ: " + document.getString("email"));
    }

    /**
     * РћР±РЅРѕРІР»СЏРµС‚ UI СЃРїРёСЃРєРѕРј Р·Р°РєР°Р·РѕРІ РІ РґРѕСЃС‚Р°РІРєРµ. РћС‚РѕР±СЂР°Р¶Р°РµС‚ Р·Р°РєР°Р·С‹ РёР»Рё СЃРѕРѕР±С‰РµРЅРёРµ РѕР± РёС… РѕС‚СЃСѓС‚СЃС‚РІРёРё.
     */
    private void updateInDeliveryOrdersUI(List<DocumentSnapshot> documents) {
        inDeliveryOrdersContainer.removeAllViews();
        if (documents.isEmpty()) {
            addEmptyMessage(inDeliveryOrdersContainer, "РќРµС‚ Р·Р°РєР°Р·РѕРІ РІ РґРѕСЃС‚Р°РІРєРµ");
        } else {
            for (DocumentSnapshot document : documents) {
                addOrderCard(inDeliveryOrdersContainer, document, true);
            }
        }
    }

    /**
     * РћР±РЅРѕРІР»СЏРµС‚ UI СЃРїРёСЃРєРѕРј РІС‹РїРѕР»РЅРµРЅРЅС‹С… Р·Р°РєР°Р·РѕРІ. РћС‚РѕР±СЂР°Р¶Р°РµС‚ Р·Р°РєР°Р·С‹ РёР»Рё СЃРѕРѕР±С‰РµРЅРёРµ РѕР± РёС… РѕС‚СЃСѓС‚СЃС‚РІРёРё.
     */
    private void updateCompletedOrdersUI(List<DocumentSnapshot> documents) {
        completedOrdersContainer.removeAllViews();
        if (documents.isEmpty()) {
            addEmptyMessage(completedOrdersContainer, "РќРµС‚ РІС‹РїРѕР»РЅРµРЅРЅС‹С… Р·Р°РєР°Р·РѕРІ");
        } else {
            for (DocumentSnapshot document : documents) {
                addOrderCard(completedOrdersContainer, document, false);
            }
        }
    }

    /**
     * РћР±РЅРѕРІР»СЏРµС‚ UI СЃРїРёСЃРєРѕРј РєР°СЂС‚ РїРѕР»СЊР·РѕРІР°С‚РµР»СЏ. РћС‚РѕР±СЂР°Р¶Р°РµС‚ РґРѕР±Р°РІР»РµРЅРЅС‹Рµ РєР°СЂС‚С‹.
     */
    private void updateCardsUI(List<DocumentSnapshot> documents) {
        cardsContainer.removeAllViews();
        for (DocumentSnapshot document : documents) {
            addCardToView(document);
        }
    }

    /**
     * Р”РѕР±Р°РІР»СЏРµС‚ РєР°СЂС‚РѕС‡РєСѓ Р·Р°РєР°Р·Р° РІ СѓРєР°Р·Р°РЅРЅС‹Р№ РєРѕРЅС‚РµР№РЅРµСЂ. РћС‚РѕР±СЂР°Р¶Р°РµС‚ СЃС‚Р°С‚СѓСЃ, РґРµС‚Р°Р»Рё Р·Р°РєР°Р·Р°,
     * СЃРїРёСЃРѕРє С‚РѕРІР°СЂРѕРІ Рё, РїСЂРё РЅРµРѕР±С…РѕРґРёРјРѕСЃС‚Рё, РєРѕР»РёС‡РµСЃС‚РІРѕ РґРЅРµР№ РґРѕ РґРѕСЃС‚Р°РІРєРё.
     */
    private void addOrderCard(LinearLayout container, DocumentSnapshot document, boolean showDeliveryDays) {
        View orderView = LayoutInflater.from(requireContext()).inflate(R.layout.item_order_profile, container, false);
        TextView tvOrderStatus = orderView.findViewById(R.id.tvOrderStatus);
        TextView tvOrderDetails = orderView.findViewById(R.id.tvOrderDetails);
        TextView tvDaysUntilDelivery = orderView.findViewById(R.id.tvDaysUntilDelivery);
        RecyclerView rvProducts = orderView.findViewById(R.id.productsRecyclerView);
        String deliveryAddress = document.getString("deliveryAddress") != null ?
                document.getString("deliveryAddress") : "РђРґСЂРµСЃ РЅРµ СѓРєР°Р·Р°РЅ";
        Long totalAmount = document.getLong("totalAmount") != null ?
                document.getLong("totalAmount") : 0L;
        String status = document.getString("status") != null ?
                document.getString("status") : "РќРµРёР·РІРµСЃС‚РЅС‹Р№ СЃС‚Р°С‚СѓСЃ";
        StringBuilder details = new StringBuilder()
                .append("РђРґСЂРµСЃ: ").append(deliveryAddress).append("\n")
                .append("РЎСѓРјРјР°: ").append(totalAmount).append(" в‚Ѕ");
        StringBuilder days = new StringBuilder();
        if (showDeliveryDays) {
            Long daysUntilDelivery = document.getLong("days");
            if (daysUntilDelivery != null) {
                days.append("\nР”РЅРµР№ РґРѕ РґРѕСЃС‚Р°РІРєРё: ").append(daysUntilDelivery);
            }
            tvDaysUntilDelivery.setVisibility(View.VISIBLE);
            tvDaysUntilDelivery.setText(days.toString());
        } else {
            tvDaysUntilDelivery.setVisibility(View.GONE);
        }
        tvOrderStatus.setText(status);
        tvOrderDetails.setText(details.toString());
        rvProducts.setLayoutManager(new LinearLayoutManager(
                requireContext(),
                LinearLayoutManager.HORIZONTAL,
                false
        ));
        List<Map<String, Object>> productMaps = (List<Map<String, Object>>) document.get("products");
        List<Product> productList = new ArrayList<>();
        if (productMaps != null) {
            for (Map<String, Object> productMap : productMaps) {
                try {
                    Product product = new Product(
                            (String) productMap.get("name"),
                            ((Long) productMap.getOrDefault("price", 0L)).intValue(),
                            null,
                            (String) productMap.get("imageBase64"),
                            null,
                            ((Long) productMap.getOrDefault("quantity", 1L)).intValue()
                    );
                    productList.add(product);
                } catch (Exception e) {
                }
            }
        }
        ProductAdapter productAdapter = new ProductAdapter(userDocumentId);
        productAdapter.updateData(productList, null);
        rvProducts.setAdapter(productAdapter);
        container.addView(orderView);
    }

    /**
     * Р”РѕР±Р°РІР»СЏРµС‚ СЃРѕРѕР±С‰РµРЅРёРµ РѕР± РѕС‚СЃСѓС‚СЃС‚РІРёРё РґР°РЅРЅС‹С… РІ СѓРєР°Р·Р°РЅРЅС‹Р№ РєРѕРЅС‚РµР№РЅРµСЂ.
     */
    private void addEmptyMessage(LinearLayout container, String message) {
        TextView emptyView = new TextView(requireContext());
        emptyView.setText(message);
        emptyView.setTextSize(16);
        emptyView.setPadding(16, 16, 16, 16);
        container.addView(emptyView);
    }

    /**
     * РћС‚РѕР±СЂР°Р¶Р°РµС‚ РІСЃРїР»С‹РІР°СЋС‰РµРµ РјРµРЅСЋ СЃ РѕРїС†РёСЏРјРё РїСЂРѕС„РёР»СЏ, С‚Р°РєРёРјРё РєР°Рє РІС‹С…РѕРґ, СЂРµРіРёСЃС‚СЂР°С†РёСЏ РїСЂРѕРґР°РІС†Р°,
     * СЂРµРґР°РєС‚РёСЂРѕРІР°РЅРёРµ Р°РєРєР°СѓРЅС‚Р°, СЃРјРµРЅР° РїР°СЂРѕР»СЏ Рё СѓРґР°Р»РµРЅРёРµ Р°РєРєР°СѓРЅС‚Р°.
     */
    private void showPopupMenu(View view) {
        PopupMenu popupMenu = new PopupMenu(requireContext(), view);
        popupMenu.getMenuInflater().inflate(R.menu.menu_account, popupMenu.getMenu());
        popupMenu.setOnMenuItemClickListener(item -> {
            int id = item.getItemId();
            if (id == R.id.action_logout) {
                logoutUser();
                return true;
            } else if (id == R.id.action_register_seller) {
                checkIfSellerExistsBeforeRegistration();
                return true;
            } else if (id == R.id.action_edit_account) {
                showEditAccountDialog();
                return true;
            } else if (id == R.id.action_change_password) {
                showConfirmPasswordDialog();
                return true;
            } else if (id == R.id.action_delete_account) {
                deleteAccount();
                return true;
            }
            return false;
        });
        popupMenu.show();
    }

    /**
     * Р’С‹РїРѕР»РЅСЏРµС‚ РІС‹С…РѕРґ РїРѕР»СЊР·РѕРІР°С‚РµР»СЏ РёР· СЃРёСЃС‚РµРјС‹. РћС‡РёС‰Р°РµС‚ РґР°РЅРЅС‹Рµ РІ SharedPreferences,
     * РѕС‚РјРµРЅСЏРµС‚ РІСЃРµ Р·Р°РґР°С‡Рё WorkManager Рё РїРµСЂРµРЅР°РїСЂР°РІР»СЏРµС‚ РЅР° СЌРєСЂР°РЅ РІС…РѕРґР°.
     */
    private void logoutUser() {
        SharedPreferences sharedPrefs = requireActivity().getSharedPreferences("AppPrefs", Context.MODE_PRIVATE);
        sharedPrefs.edit().clear().apply();
        WorkManager.getInstance(requireContext()).cancelAllWork();
        Intent intent = new Intent(requireContext(), MainActivity.class);
        intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP | Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);
        startActivity(intent);
        requireActivity().finish();
    }

    /**
     * РџСЂРѕРІРµСЂСЏРµС‚, Р·Р°СЂРµРіРёСЃС‚СЂРёСЂРѕРІР°РЅ Р»Рё РїРѕР»СЊР·РѕРІР°С‚РµР»СЊ РєР°Рє РїСЂРѕРґР°РІРµС†, РїРµСЂРµРґ РЅР°С‡Р°Р»РѕРј СЂРµРіРёСЃС‚СЂР°С†РёРё.
     * Р•СЃР»Рё РїРѕР»СЊР·РѕРІР°С‚РµР»СЊ СѓР¶Рµ РїСЂРѕРґР°РІРµС†, РѕС‚РѕР±СЂР°Р¶Р°РµС‚ СЃРѕРѕР±С‰РµРЅРёРµ, РёРЅР°С‡Рµ РѕС‚РєСЂС‹РІР°РµС‚ РґРёР°Р»РѕРі СЂРµРіРёСЃС‚СЂР°С†РёРё.
     */
    private void checkIfSellerExistsBeforeRegistration() {
        db.collection("users")
                .whereEqualTo("userId", userDocumentId)
                .whereEqualTo("role", "seller")
                .get()
                .addOnCompleteListener(task -> {
                    if (task.isSuccessful()) {
                        if (task.getResult().isEmpty()) {
                            showRegisterSellerDialog();
                        } else {
                            Toast.makeText(requireContext(), "Р’С‹ СѓР¶Рµ Р·Р°СЂРµРіРёСЃС‚СЂРёСЂРѕРІР°РЅС‹ РєР°Рє РїСЂРѕРґР°РІРµС†", Toast.LENGTH_SHORT).show();
                        }
                    }
                });
    }

    /**
     * РћС‚РѕР±СЂР°Р¶Р°РµС‚ РґРёР°Р»РѕРіРѕРІРѕРµ РѕРєРЅРѕ РґР»СЏ СЂРµРіРёСЃС‚СЂР°С†РёРё РїСЂРѕРґР°РІС†Р°. Р—Р°РїСЂР°С€РёРІР°РµС‚ РґР°РЅРЅС‹Рµ, С‚Р°РєРёРµ РєР°Рє
     * РЅР°Р·РІР°РЅРёРµ РјР°РіР°Р·РёРЅР°, Р¤РРћ, РћР“Р РќРРџ Рё РРќРќ, Рё РІС‹РїРѕР»РЅСЏРµС‚ СЂРµРіРёСЃС‚СЂР°С†РёСЋ.
     */
    private void showRegisterSellerDialog() {
        View dialogView = LayoutInflater.from(requireContext()).inflate(R.layout.seller_registration_dialog, null);
        AlertDialog dialog = new AlertDialog.Builder(requireContext())
                .setView(dialogView)
                .create();
        EditText etStoreName = dialogView.findViewById(R.id.etStoreName);
        EditText etLastName = dialogView.findViewById(R.id.etLastName);
        EditText etFirstName = dialogView.findViewById(R.id.etFirstName);
        EditText etMiddleName = dialogView.findViewById(R.id.etMiddleName);
        EditText etOGRNIP = dialogView.findViewById(R.id.etOGRNIP);
        EditText etINN = dialogView.findViewById(R.id.etINN);
        Button btnCancel = dialogView.findViewById(R.id.btnCancel);
        Button btnCreateAccount = dialogView.findViewById(R.id.btnCreateAccount);
        btnCancel.setOnClickListener(v -> dialog.dismiss());
        btnCreateAccount.setOnClickListener(v -> {
            String storeName = etStoreName.getText().toString().trim();
            String lastName = etLastName.getText().toString().trim();
            String firstName = etFirstName.getText().toString().trim();
            String middleName = etMiddleName.getText().toString().trim();
            String ogrnip = etOGRNIP.getText().toString().trim();
            String inn = etINN.getText().toString().trim();
            if (validateSellerInput(storeName, lastName, firstName, middleName, ogrnip, inn)) {
                registerSeller(storeName, lastName, firstName, middleName, ogrnip, inn);
                dialog.dismiss();
            }
        });
        dialog.show();
    }

    /**
     * РџСЂРѕРІРµСЂСЏРµС‚ РєРѕСЂСЂРµРєС‚РЅРѕСЃС‚СЊ РІРІРµРґРµРЅРЅС‹С… РґР°РЅРЅС‹С… РґР»СЏ СЂРµРіРёСЃС‚СЂР°С†РёРё РїСЂРѕРґР°РІС†Р°. РЈР±РµР¶РґР°РµС‚СЃСЏ, С‡С‚Рѕ
     * РІСЃРµ РїРѕР»СЏ Р·Р°РїРѕР»РЅРµРЅС‹ РїСЂР°РІРёР»СЊРЅРѕ, РІРєР»СЋС‡Р°СЏ С„РѕСЂРјР°С‚ РћР“Р РќРРџ Рё РРќРќ.
     */
    private boolean validateSellerInput(String storeName, String lastName, String firstName, String middleName, String ogrnip, String inn) {
        if (storeName.isEmpty()) {
            Toast.makeText(requireContext(), "РќР°РёРјРµРЅРѕРІР°РЅРёРµ РјР°РіР°Р·РёРЅР° РґРѕР»Р¶РЅРѕ СЃРѕРґРµСЂР¶Р°С‚СЊ С…РѕС‚СЏ Р±С‹ 1 СЃРёРјРІРѕР»", Toast.LENGTH_SHORT).show();
            return false;
        }
        if (lastName.length() < 2 || !lastName.matches("[a-zA-ZР°-СЏРђ-РЇ]+")) {
            Toast.makeText(requireContext(), "Р¤Р°РјРёР»РёСЏ РґРѕР»Р¶РЅР° СЃРѕРґРµСЂР¶Р°С‚СЊ РЅРµ РјРµРЅРµРµ 2 Р±СѓРєРІ Рё С‚РѕР»СЊРєРѕ Р±СѓРєРІС‹", Toast.LENGTH_SHORT).show();
            return false;
        }
        if (firstName.length() < 2 || !firstName.matches("[a-zA-ZР°-СЏРђ-РЇ]+")) {
            Toast.makeText(requireContext(), "РРјСЏ РґРѕР»Р¶РЅРѕ СЃРѕРґРµСЂР¶Р°С‚СЊ РЅРµ РјРµРЅРµРµ 2 Р±СѓРєРІ Рё С‚РѕР»СЊРєРѕ Р±СѓРєРІС‹", Toast.LENGTH_SHORT).show();
            return false;
        }
        if (!middleName.isEmpty() && (middleName.length() < 5 || !middleName.matches("[a-zA-ZР°-СЏРђ-РЇ]+"))) {
            Toast.makeText(requireContext(), "РћС‚С‡РµСЃС‚РІРѕ РґРѕР»Р¶РЅРѕ СЃРѕРґРµСЂР¶Р°С‚СЊ РЅРµ РјРµРЅРµРµ 5 Р±СѓРєРІ Рё С‚РѕР»СЊРєРѕ Р±СѓРєРІС‹", Toast.LENGTH_SHORT).show();
            return false;
        }
        if (!ogrnip.matches("\\d{15}")) {
            Toast.makeText(requireContext(), "РћР“Р РќРРџ РґРѕР»Р¶РµРЅ СЃРѕРґРµСЂР¶Р°С‚СЊ СЂРѕРІРЅРѕ 15 С†РёС„СЂ", Toast.LENGTH_SHORT).show();
            return false;
        }
        if (!inn.matches("\\d{10}")) {
            Toast.makeText(requireContext(), "РРќРќ РґРѕР»Р¶РµРЅ СЃРѕРґРµСЂР¶Р°С‚СЊ СЂРѕРІРЅРѕ 10 С†РёС„СЂ", Toast.LENGTH_SHORT).show();
            return false;
        }
        return true;
    }

    /**
     * Р РµРіРёСЃС‚СЂРёСЂСѓРµС‚ РїРѕР»СЊР·РѕРІР°С‚РµР»СЏ РєР°Рє РїСЂРѕРґР°РІС†Р° РІ Firebase Firestore. РЎРѕР·РґР°РµС‚ РЅРѕРІС‹Р№ РґРѕРєСѓРјРµРЅС‚
     * СЃ РґР°РЅРЅС‹РјРё РїСЂРѕРґР°РІС†Р° Рё РїРµСЂРµРЅР°РїСЂР°РІР»СЏРµС‚ РЅР° СЌРєСЂР°РЅ РїСЂРѕРґР°РІС†Р°.
     */
    private void registerSeller(String storeName, String lastName, String firstName,
                                String middleName, String ogrnip, String inn) {
        db.collection("users").document(userDocumentId)
                .get()
                .addOnCompleteListener(task -> {
                    if (task.isSuccessful() && task.getResult() != null) {
                        DocumentSnapshot document = task.getResult();
                        if (document.exists()) {
                            Map<String, Object> sellerData = new HashMap<>();
                            sellerData.put("email", document.getString("email"));
                            sellerData.put("password", document.getString("password"));
                            sellerData.put("role", "seller");
                            sellerData.put("storeName", storeName);
                            sellerData.put("lastName", lastName);
                            sellerData.put("firstName", firstName);
                            sellerData.put("middleName", middleName.isEmpty() ? null : middleName);
                            sellerData.put("ogrnip", ogrnip);
                            sellerData.put("inn", inn);
                            sellerData.put("userId", userDocumentId);
                            db.collection("users")
                                    .add(sellerData)
                                    .addOnSuccessListener(documentReference -> {
                                        navigateToSellerActivity(documentReference.getId());
                                    })
                                    .addOnFailureListener(e -> {
                                        Toast.makeText(requireContext(), "РћС€РёР±РєР° РїСЂРё СЂРµРіРёСЃС‚СЂР°С†РёРё РїСЂРѕРґР°РІС†Р°: " + e.getMessage(), Toast.LENGTH_SHORT).show();
                                    });
                        }
                    }
                });
    }

    /**
     * РџРµСЂРµРЅР°РїСЂР°РІР»СЏРµС‚ РїРѕР»СЊР·РѕРІР°С‚РµР»СЏ РЅР° СЌРєСЂР°РЅ РїСЂРѕРґР°РІС†Р° РїРѕСЃР»Рµ СѓСЃРїРµС€РЅРѕР№ СЂРµРіРёСЃС‚СЂР°С†РёРё. РћР±РЅРѕРІР»СЏРµС‚
     * SharedPreferences Рё Р·Р°РїСѓСЃРєР°РµС‚ SellerMainActivity.
     */
    private void navigateToSellerActivity(String sellerDocumentId) {
        SharedPreferences sharedPrefs = requireActivity().getSharedPreferences("AppPrefs", Context.MODE_PRIVATE);
        SharedPreferences.Editor editor = sharedPrefs.edit();
        editor.clear();
        editor.putString("userId", sellerDocumentId);
        editor.putString("userRole", "seller");
        editor.putBoolean("isLoggedIn", true);
        editor.apply();
        Toast.makeText(requireContext(), "РђРєРєР°СѓРЅС‚ РїСЂРѕРґР°РІС†Р° СѓСЃРїРµС€РЅРѕ СЃРѕР·РґР°РЅ", Toast.LENGTH_SHORT).show();
        Intent intent = new Intent(requireContext(), SellerMainActivity.class);
        intent.putExtra("USER_DOCUMENT_ID", sellerDocumentId);
        intent.putExtra("USER_ROLE", "seller");
        intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP | Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);
        startActivity(intent);
        requireActivity().finish();
    }

    /**
     * РћС‚РѕР±СЂР°Р¶Р°РµС‚ РґРёР°Р»РѕРіРѕРІРѕРµ РѕРєРЅРѕ РґР»СЏ СЂРµРґР°РєС‚РёСЂРѕРІР°РЅРёСЏ РґР°РЅРЅС‹С… Р°РєРєР°СѓРЅС‚Р°. РџРѕР·РІРѕР»СЏРµС‚ РїРѕР»СЊР·РѕРІР°С‚РµР»СЋ
     * РёР·РјРµРЅРёС‚СЊ СЃРІРѕРµ РёРјСЏ.
     */
    private void showEditAccountDialog() {
        View dialogView = LayoutInflater.from(requireContext()).inflate(R.layout.edit_customer_dialog, null);
        AlertDialog dialog = new AlertDialog.Builder(requireContext())
                .setView(dialogView)
                .create();
        EditText etEditName = dialogView.findViewById(R.id.etEditName);
        Button btnCancel = dialogView.findViewById(R.id.btnCancel);
        Button btnSave = dialogView.findViewById(R.id.btnSave);
        etEditName.setText(tvUserName.getText().toString());
        btnCancel.setOnClickListener(v -> dialog.dismiss());
        btnSave.setOnClickListener(v -> {
            String newName = etEditName.getText().toString().trim();
            if (validateAccountInput(newName)) {
                updateUserData(newName);
                dialog.dismiss();
            }
        });
        dialog.show();
    }

    /**
     * РџСЂРѕРІРµСЂСЏРµС‚ РєРѕСЂСЂРµРєС‚РЅРѕСЃС‚СЊ РІРІРµРґРµРЅРЅРѕРіРѕ РёРјРµРЅРё РґР»СЏ СЂРµРґР°РєС‚РёСЂРѕРІР°РЅРёСЏ Р°РєРєР°СѓРЅС‚Р°. РЈР±РµР¶РґР°РµС‚СЃСЏ, С‡С‚Рѕ
     * РёРјСЏ РЅРµ РїСѓСЃС‚РѕРµ.
     */
    private boolean validateAccountInput(String name) {
        if (name.isEmpty()) {
            Toast.makeText(requireContext(), "РРјСЏ РЅРµ РјРѕР¶РµС‚ Р±С‹С‚СЊ РїСѓСЃС‚С‹Рј", Toast.LENGTH_SHORT).show();
            return false;
        }
        return true;
    }

    /**
     * РћР±РЅРѕРІР»СЏРµС‚ РґР°РЅРЅС‹Рµ РїРѕР»СЊР·РѕРІР°С‚РµР»СЏ РІ Firebase Firestore. РЎРѕС…СЂР°РЅСЏРµС‚ РЅРѕРІРѕРµ РёРјСЏ РїРѕР»СЊР·РѕРІР°С‚РµР»СЏ.
     */
    private void updateUserData(String newName) {
        Map<String, Object> updates = new HashMap<>();
        updates.put("name", newName);
        db.collection("users").document(userDocumentId)
                .update(updates)
                .addOnSuccessListener(aVoid -> {
                    Toast.makeText(requireContext(), "Р”Р°РЅРЅС‹Рµ СѓСЃРїРµС€РЅРѕ РѕР±РЅРѕРІР»РµРЅС‹", Toast.LENGTH_SHORT).show();
                });
    }

    /**
     * РћС‚РѕР±СЂР°Р¶Р°РµС‚ РґРёР°Р»РѕРіРѕРІРѕРµ РѕРєРЅРѕ РґР»СЏ РїРѕРґС‚РІРµСЂР¶РґРµРЅРёСЏ СЃС‚Р°СЂРѕРіРѕ РїР°СЂРѕР»СЏ РїРµСЂРµРґ РµРіРѕ РёР·РјРµРЅРµРЅРёРµРј.
     */
    private void showConfirmPasswordDialog() {
        View dialogView = LayoutInflater.from(requireContext()).inflate(R.layout.confirm_password_dialog, null);
        AlertDialog dialog = new AlertDialog.Builder(requireContext())
                .setView(dialogView)
                .create();
        EditText etOldPassword = dialogView.findViewById(R.id.etOldPassword);
        Button btnConfirm = dialogView.findViewById(R.id.btnConfirm);
        Button btnForgotPassword = dialogView.findViewById(R.id.btnForgotPassword);
        Button btnCancel = dialogView.findViewById(R.id.cancelButton);
        btnForgotPassword.setVisibility(View.GONE);
        btnConfirm.setOnClickListener(v -> {
            String oldPassword = etOldPassword.getText().toString().trim();
            if (oldPassword.isEmpty()) {
                Toast.makeText(requireContext(), "Р’РІРµРґРёС‚Рµ СЃС‚Р°СЂС‹Р№ РїР°СЂРѕР»СЊ", Toast.LENGTH_SHORT).show();
                return;
            }
            verifyOldPassword(oldPassword, dialog, btnForgotPassword);
        });
        btnForgotPassword.setOnClickListener(v -> {
            dialog.dismiss();
            showForgotPasswordDialog(tvUserLogin.getText().toString().replace("Р›РѕРіРёРЅ: ", ""));
        });
        btnCancel.setOnClickListener(v -> dialog.dismiss());
        dialog.show();
    }

    /**
     * РџСЂРѕРІРµСЂСЏРµС‚ РїСЂР°РІРёР»СЊРЅРѕСЃС‚СЊ РІРІРµРґРµРЅРЅРѕРіРѕ СЃС‚Р°СЂРѕРіРѕ РїР°СЂРѕР»СЏ. Р•СЃР»Рё РїР°СЂРѕР»СЊ РІРµСЂРЅС‹Р№, РѕС‚РєСЂС‹РІР°РµС‚ РґРёР°Р»РѕРі
     * РґР»СЏ СЃРјРµРЅС‹ РїР°СЂРѕР»СЏ, РёРЅР°С‡Рµ РѕС‚РѕР±СЂР°Р¶Р°РµС‚ РєРЅРѕРїРєСѓ РІРѕСЃСЃС‚Р°РЅРѕРІР»РµРЅРёСЏ РїР°СЂРѕР»СЏ.
     */
    private void verifyOldPassword(String oldPassword, AlertDialog dialog, Button btnForgotPassword) {
        db.collection("users").document(userDocumentId)
                .get()
                .addOnCompleteListener(task -> {
                    if (task.isSuccessful() && task.getResult() != null) {
                        DocumentSnapshot document = task.getResult();
                        if (document.exists() && document.getString("password").equals(oldPassword)) {
                            dialog.dismiss();
                            showChangePasswordDialog();
                        } else {
                            Toast.makeText(requireContext(), "РќРµРІРµСЂРЅС‹Р№ РїР°СЂРѕР»СЊ", Toast.LENGTH_SHORT).show();
                            btnForgotPassword.setVisibility(View.VISIBLE);
                        }
                    } else {
                        Toast.makeText(requireContext(), "РћС€РёР±РєР° РїСЂРѕРІРµСЂРєРё РїР°СЂРѕР»СЏ", Toast.LENGTH_SHORT).show();
                    }
                });
    }

    /**
     * РћС‚РѕР±СЂР°Р¶Р°РµС‚ РґРёР°Р»РѕРіРѕРІРѕРµ РѕРєРЅРѕ РґР»СЏ РІРѕСЃСЃС‚Р°РЅРѕРІР»РµРЅРёСЏ РїР°СЂРѕР»СЏ. РћС‚РїСЂР°РІР»СЏРµС‚ РєРѕРґ РЅР° email РїРѕР»СЊР·РѕРІР°С‚РµР»СЏ
     * Рё РїРѕР·РІРѕР»СЏРµС‚ РІРІРµСЃС‚Рё РєРѕРґ РґР»СЏ СЃРјРµРЅС‹ РїР°СЂРѕР»СЏ.
     */
    private void showForgotPasswordDialog(String email) {
        View view = LayoutInflater.from(requireContext()).inflate(R.layout.password_recovery, null);
        AlertDialog dialog = new AlertDialog.Builder(requireContext())
                .setView(view)
                .create();
        EditText emailField = view.findViewById(R.id.loginField);
        EditText codeField = view.findViewById(R.id.codeField);
        Button sendCodeButton = view.findViewById(R.id.sendCodeButton);
        Button changePasswordButton = view.findViewById(R.id.changePasswordButton);
        emailField.setText(email);
        emailField.setEnabled(false);
        changePasswordButton.setEnabled(false);
        changePasswordButton.setAlpha(0.5f);
        String[] generatedCode = {null};
        sendCodeButton.setOnClickListener(v -> {
            generatedCode[0] = String.valueOf(10000 + (int)(Math.random() * 90000));
            sendPasswordRecoveryEmail(email, generatedCode[0]);
            changePasswordButton.setEnabled(true);
            changePasswordButton.setAlpha(1.0f);
        });
        changePasswordButton.setOnClickListener(v -> {
            if (generatedCode[0] != null && generatedCode[0].equals(codeField.getText().toString())) {
                dialog.dismiss();
                showChangePasswordDialog();
            } else {
                Toast.makeText(requireContext(), "РќРµРІРµСЂРЅС‹Р№ РєРѕРґ", Toast.LENGTH_SHORT).show();
            }
        });
        dialog.show();
    }

    /**
     * РћС‚РїСЂР°РІР»СЏРµС‚ email СЃ РєРѕРґРѕРј РґР»СЏ РІРѕСЃСЃС‚Р°РЅРѕРІР»РµРЅРёСЏ РїР°СЂРѕР»СЏ. Р¤РѕСЂРјРёСЂСѓРµС‚ HTML-СЃРѕРѕР±С‰РµРЅРёРµ СЃ РєРѕРґРѕРј
     * Рё РѕС‚РїСЂР°РІР»СЏРµС‚ РµРіРѕ С‡РµСЂРµР· SendEmailTask.
     */
    private void sendPasswordRecoveryEmail(String email, String code) {
        String subject = "Р’РѕСЃСЃС‚Р°РЅРѕРІР»РµРЅРёРµ РїР°СЂРѕР»СЏ Ozon";
        String body = "<!DOCTYPE html>" +
                "<html lang='ru'>" +
                "<head>" +
                "<meta charset='UTF-8'>" +
                "<meta name='viewport' content='width=device-width, initial-scale=1.0'>" +
                "<title>Р’РѕСЃСЃС‚Р°РЅРѕРІР»РµРЅРёРµ РїР°СЂРѕР»СЏ</title>" +
                "</head>" +
                "<body style='margin: 0; padding: 0; font-family: Arial, sans-serif; background-color: #f4f4f4;'>" +
                "<table role='presentation' cellpadding='0' cellspacing='0' style='width: 100%; max-width: 600px; margin: 20px auto; background-color: #ffffff; border-radius: 8px; box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);'>" +
                "<tr>" +
                "<td style='background-color: #005BFF; padding: 20px; text-align: center; border-top-left-radius: 8px; border-top-right-radius: 8px;'>" +
                "<h1 style='color: #ffffff; margin: 0; font-size: 24px;'>Ozon</h1>" +
                "<h2 style='color: #ffffff; margin: 5px 0 0; font-size: 18px;'>Р’РѕСЃСЃС‚Р°РЅРѕРІР»РµРЅРёРµ РїР°СЂРѕР»СЏ</h2>" +
                "</td>" +
                "</tr>" +
                "<tr>" +
                "<td style='padding: 30px; text-align: center;'>" +
                "<h3 style='color: #001A34; font-size: 20px; margin: 0 0 10px;'>Р’Р°С€ РєРѕРґ РґР»СЏ РІРѕСЃСЃС‚Р°РЅРѕРІР»РµРЅРёСЏ РїР°СЂРѕР»СЏ</h3>" +
                "<p style='color: #666666; font-size: 16px; margin: 0 0 20px;'>РСЃРїРѕР»СЊР·СѓР№С‚Рµ СЌС‚РѕС‚ РєРѕРґ РґР»СЏ СЃР±СЂРѕСЃР° РїР°СЂРѕР»СЏ РІ РїСЂРёР»РѕР¶РµРЅРёРё Ozon:</p>" +
                "<div style='background-color: #E6F0FF; padding: 15px; border-radius: 5px; display: inline-block;'>" +
                "<span style='font-size: 24px; font-weight: bold; color: #005BFF; letter-spacing: 2px;'>" + code + "</span>" +
                "</div>" +
                "<p style='color: #666666; font-size: 14px; margin: 20px 0 0;'>РљРѕРґ РґРµР№СЃС‚РІРёС‚РµР»РµРЅ РІ С‚РµС‡РµРЅРёРµ 10 РјРёРЅСѓС‚.</p>" +
                "</td>" +
                "</tr>" +
                "<tr>" +
                "<td style='padding: 20px; text-align: center; background-color: #f9f9f9; border-bottom-left-radius: 8px; border-bottom-right-radius: 8px;'>" +
                "<p style='color: #999999; font-size: 12px; margin: 0;'>Р•СЃР»Рё РІС‹ РЅРµ Р·Р°РїСЂР°С€РёРІР°Р»Рё РІРѕСЃСЃС‚Р°РЅРѕРІР»РµРЅРёРµ РїР°СЂРѕР»СЏ, РїСЂРѕРёРіРЅРѕСЂРёСЂСѓР№С‚Рµ СЌС‚Рѕ СЃРѕРѕР±С‰РµРЅРёРµ.</p>" +
                "<p style='color: #999999; font-size: 12px; margin: 5px 0 0;'>РЎРІСЏР¶РёС‚РµСЃСЊ СЃ РЅР°РјРё: <a href='mailto:support@ozon.ru' style='color: #005BFF; text-decoration: none;'>support@ozon.ru</a></p>" +
                "</td>" +
                "</tr>" +
                "</table>" +
                "</body>" +
                "</html>";
        new SendEmailTask(requireContext(), email, subject, body, true).execute();
    }

    /**
     * РћС‚РѕР±СЂР°Р¶Р°РµС‚ РґРёР°Р»РѕРіРѕРІРѕРµ РѕРєРЅРѕ РґР»СЏ СЃРјРµРЅС‹ РїР°СЂРѕР»СЏ. РџРѕР·РІРѕР»СЏРµС‚ РїРѕР»СЊР·РѕРІР°С‚РµР»СЋ РІРІРµСЃС‚Рё РЅРѕРІС‹Р№ РїР°СЂРѕР»СЊ
     * Рё РїРѕРґС‚РІРµСЂРґРёС‚СЊ РµРіРѕ.
     */
    private void showChangePasswordDialog() {
        View dialogView = LayoutInflater.from(requireContext()).inflate(R.layout.change_password_layout, null);
        AlertDialog dialog = new AlertDialog.Builder(requireContext())
                .setView(dialogView)
                .create();
        EditText newPasswordField = dialogView.findViewById(R.id.newPasswordField);
        EditText confirmPasswordField = dialogView.findViewById(R.id.confirmPasswordField);
        Button btnSave = dialogView.findViewById(R.id.savePasswordButton);
        btnSave.setOnClickListener(v -> {
            String newPassword = newPasswordField.getText().toString().trim();
            String confirmPassword = confirmPasswordField.getText().toString().trim();
            if (validateNewPassword(newPassword, confirmPassword)) {
                updatePassword(newPassword);
                dialog.dismiss();
            }
        });
        dialog.show();
    }

    /**
     * РџСЂРѕРІРµСЂСЏРµС‚ РєРѕСЂСЂРµРєС‚РЅРѕСЃС‚СЊ РЅРѕРІРѕРіРѕ РїР°СЂРѕР»СЏ. РЈР±РµР¶РґР°РµС‚СЃСЏ, С‡С‚Рѕ РїР°СЂРѕР»СЊ СЃРѕРѕС‚РІРµС‚СЃС‚РІСѓРµС‚ С‚СЂРµР±РѕРІР°РЅРёСЏРј
     * РїРѕ РґР»РёРЅРµ, РЅР°Р»РёС‡РёСЋ Р·Р°РіР»Р°РІРЅС‹С… Рё СЃС‚СЂРѕС‡РЅС‹С… Р±СѓРєРІ, С†РёС„СЂ Рё СЃРїРµС†РёР°Р»СЊРЅС‹С… СЃРёРјРІРѕР»РѕРІ.
     */
    private boolean validateNewPassword(String newPassword, String confirmPassword) {
        if (newPassword.isEmpty() || confirmPassword.isEmpty()) {
            Toast.makeText(requireContext(), "Р—Р°РїРѕР»РЅРёС‚Рµ РІСЃРµ РїРѕР»СЏ", Toast.LENGTH_SHORT).show();
            return false;
        }
        if (!newPassword.equals(confirmPassword)) {
            Toast.makeText(requireContext(), "РџР°СЂРѕР»Рё РЅРµ СЃРѕРІРїР°РґР°СЋС‚", Toast.LENGTH_SHORT).show();
            return false;
        }
        if (newPassword.length() < 7) {
            Toast.makeText(requireContext(), "РџР°СЂРѕР»СЊ РґРѕР»Р¶РµРЅ СЃРѕРґРµСЂР¶Р°С‚СЊ РјРёРЅРёРјСѓРј 7 СЃРёРјРІРѕР»РѕРІ", Toast.LENGTH_SHORT).show();
            return false;
        }
        if (!Pattern.compile("[A-Z]").matcher(newPassword).find()) {
            Toast.makeText(requireContext(), "РџР°СЂРѕР»СЊ РґРѕР»Р¶РµРЅ СЃРѕРґРµСЂР¶Р°С‚СЊ С…РѕС‚СЏ Р±С‹ РѕРґРЅСѓ Р·Р°РіР»Р°РІРЅСѓСЋ Р±СѓРєРІСѓ", Toast.LENGTH_SHORT).show();
            return false;
        }
        if (!Pattern.compile("[a-z]").matcher(newPassword).find()) {
            Toast.makeText(requireContext(), "РџР°СЂРѕР»СЊ РґРѕР»Р¶РµРЅ СЃРѕРґРµСЂР¶Р°С‚СЊ С…РѕС‚СЏ Р±С‹ РѕРґРЅСѓ СЃС‚СЂРѕС‡РЅСѓСЋ Р±СѓРєРІСѓ", Toast.LENGTH_SHORT).show();
            return false;
        }
        if (!Pattern.compile("[0-9]").matcher(newPassword).find()) {
            Toast.makeText(requireContext(), "РџР°СЂРѕР»СЊ РґРѕР»Р¶РµРЅ СЃРѕРґРµСЂР¶Р°С‚СЊ С…РѕС‚СЏ Р±С‹ РѕРґРЅСѓ С†РёС„СЂСѓ", Toast.LENGTH_SHORT).show();
            return false;
        }
        if (!SPECIAL_CHAR_PATTERN.matcher(newPassword).find()) {
            Toast.makeText(requireContext(), "РџР°СЂРѕР»СЊ РґРѕР»Р¶РµРЅ СЃРѕРґРµСЂР¶Р°С‚СЊ С…РѕС‚СЏ Р±С‹ РѕРґРёРЅ СЃРїРµС†РёР°Р»СЊРЅС‹Р№ СЃРёРјРІРѕР» (!@#$%^&*(),.?\":{}|<>)", Toast.LENGTH_SHORT).show();
            return false;
        }
        return true;
    }

    /**
     * РћР±РЅРѕРІР»СЏРµС‚ РїР°СЂРѕР»СЊ РїРѕР»СЊР·РѕРІР°С‚РµР»СЏ РІ Firebase Firestore. РЎРѕС…СЂР°РЅСЏРµС‚ РЅРѕРІС‹Р№ РїР°СЂРѕР»СЊ.
     */
    private void updatePassword(String newPassword) {
        db.collection("users").document(userDocumentId)
                .update("password", newPassword)
                .addOnSuccessListener(aVoid -> {
                    Toast.makeText(requireContext(), "РџР°СЂРѕР»СЊ СѓСЃРїРµС€РЅРѕ РёР·РјРµРЅРµРЅ", Toast.LENGTH_SHORT).show();
                });
    }

    /**
     * РЈРґР°Р»СЏРµС‚ Р°РєРєР°СѓРЅС‚ РїРѕР»СЊР·РѕРІР°С‚РµР»СЏ. Р—Р°РїСЂР°С€РёРІР°РµС‚ РїРѕРґС‚РІРµСЂР¶РґРµРЅРёРµ Рё СѓРґР°Р»СЏРµС‚ РІСЃРµ СЃРІСЏР·Р°РЅРЅС‹Рµ РґР°РЅРЅС‹Рµ
     * РїРµСЂРµРґ СѓРґР°Р»РµРЅРёРµРј Р°РєРєР°СѓРЅС‚Р°.
     */
    private void deleteAccount() {
        new AlertDialog.Builder(requireContext())
                .setTitle("РЈРґР°Р»РµРЅРёРµ Р°РєРєР°СѓРЅС‚Р°")
                .setMessage("Р’С‹ СѓРІРµСЂРµРЅС‹, С‡С‚Рѕ С…РѕС‚РёС‚Рµ СѓРґР°Р»РёС‚СЊ Р°РєРєР°СѓРЅС‚? Р­С‚Рѕ РґРµР№СЃС‚РІРёРµ РЅРµР»СЊР·СЏ РѕС‚РјРµРЅРёС‚СЊ.")
                .setPositiveButton("РЈРґР°Р»РёС‚СЊ", (dialog, which) -> {
                    deleteUserRelatedData(() -> {
                        db.collection("users").document(userDocumentId)
                                .delete()
                                .addOnSuccessListener(aVoid -> {
                                    Toast.makeText(requireContext(), "РђРєРєР°СѓРЅС‚ СѓСЃРїРµС€РЅРѕ СѓРґР°Р»РµРЅ", Toast.LENGTH_SHORT).show();
                                    logoutUser();
                                })
                                .addOnFailureListener(e -> {
                                    Toast.makeText(requireContext(), "РћС€РёР±РєР° РїСЂРё СѓРґР°Р»РµРЅРёРё Р°РєРєР°СѓРЅС‚Р°: " + e.getMessage(), Toast.LENGTH_SHORT).show();
                                });
                    });
                })
                .setNegativeButton("РћС‚РјРµРЅР°", null)
                .show();
    }

    /**
     * РЈРґР°Р»СЏРµС‚ РІСЃРµ РґР°РЅРЅС‹Рµ, СЃРІСЏР·Р°РЅРЅС‹Рµ СЃ РїРѕР»СЊР·РѕРІР°С‚РµР»РµРј, С‚Р°РєРёРµ РєР°Рє РєР°СЂС‚С‹ Рё Р·Р°РєР°Р·С‹, РїРµСЂРµРґ СѓРґР°Р»РµРЅРёРµРј Р°РєРєР°СѓРЅС‚Р°.
     */
    private void deleteUserRelatedData(Runnable onComplete) {
        db.collection("cards")
                .whereEqualTo("userId", userDocumentId)
                .get()
                .addOnSuccessListener(queryDocumentSnapshots -> {
                    for (DocumentSnapshot document : queryDocumentSnapshots) {
                        document.getReference().delete();
                    }
                    db.collection("orders")
                            .whereEqualTo("userId", userDocumentId)
                            .get()
                            .addOnSuccessListener(orderSnapshots -> {
                                for (DocumentSnapshot orderDoc : orderSnapshots) {
                                    orderDoc.getReference().delete();
                                }
                                onComplete.run();
                            })
                            .addOnFailureListener(e -> {
                                onComplete.run();
                            });
                })
                .addOnFailureListener(e -> {
                    onComplete.run();
                });
    }

    /**
     * РћС‚РѕР±СЂР°Р¶Р°РµС‚ РґРёР°Р»РѕРіРѕРІРѕРµ РѕРєРЅРѕ РґР»СЏ РґРѕР±Р°РІР»РµРЅРёСЏ РЅРѕРІРѕР№ РєР°СЂС‚С‹. РџРѕР·РІРѕР»СЏРµС‚ РїРѕР»СЊР·РѕРІР°С‚РµР»СЋ РІРІРµСЃС‚Рё
     * РґР°РЅРЅС‹Рµ РєР°СЂС‚С‹ Рё СЃРѕС…СЂР°РЅРёС‚СЊ РёС….
     */
    private void showAddCardDialog() {
        View dialogView = LayoutInflater.from(requireContext()).inflate(R.layout.add_card_dialog, null);
        AlertDialog dialog = new AlertDialog.Builder(requireContext())
                .setView(dialogView)
                .create();
        EditText etCardNumber = dialogView.findViewById(R.id.etCardNumber);
        EditText etCardCVV = dialogView.findViewById(R.id.etCardCVV);
        EditText etCardExpiry = dialogView.findViewById(R.id.etCardExpiry);
        Button btnCancel = dialogView.findViewById(R.id.btnCancel);
        Button btnAdd = dialogView.findViewById(R.id.btnAdd);
        etCardNumber.addTextChangedListener(new TextWatcher() {
            private boolean isFormatting;
            @Override
            public void beforeTextChanged(CharSequence s, int start, int count, int after) {}
            @Override
            public void onTextChanged(CharSequence s, int start, int before, int count) {}
            @Override
            public void afterTextChanged(Editable s) {
                if (isFormatting) return;
                isFormatting = true;
                String input = s.toString().replaceAll("[^0-9]", "");
                if (input.length() > 16) {
                    input = input.substring(0, 16);
                }
                StringBuilder formatted = new StringBuilder();
                for (int i = 0; i < input.length(); i++) {
                    if (i > 0 && i % 4 == 0) {
                        formatted.append(" ");
                    }
                    formatted.append(input.charAt(i));
                }
                etCardNumber.setText(formatted.toString());
                etCardNumber.setSelection(formatted.length());
                isFormatting = false;
            }
        });
        etCardExpiry.addTextChangedListener(new TextWatcher() {
            private boolean isFormatting;
            @Override
            public void beforeTextChanged(CharSequence s, int start, int count, int after) {}
            @Override
            public void onTextChanged(CharSequence s, int start, int before, int count) {}
            @Override
            public void afterTextChanged(Editable s) {
                if (isFormatting) return;
                isFormatting = true;
                String input = s.toString().replaceAll("[^0-9]", "");
                if (input.length() > 4) {
                    input = input.substring(0, 4);
                }
                StringBuilder formatted = new StringBuilder(input);
                if (input.length() >= 2 && !s.toString().contains("/")) {
                    String monthStr = input.substring(0, 2);
                    int month = Integer.parseInt(monthStr);
                    if (month > 12) {
                        formatted = new StringBuilder("12");
                    } else {
                        formatted = new StringBuilder(monthStr);
                    }
                    if (input.length() > 2) {
                        formatted.append("/").append(input.substring(2));
                    } else {
                        formatted.append("/");
                    }
                }
                etCardExpiry.setText(formatted.toString());
                etCardExpiry.setSelection(formatted.length());
                isFormatting = false;
            }
        });
        btnCancel.setOnClickListener(v -> dialog.dismiss());
        btnAdd.setOnClickListener(v -> {
            String cardNumber = etCardNumber.getText().toString().replaceAll(" ", "");
            String cardCVV = etCardCVV.getText().toString();
            String cardExpiry = etCardExpiry.getText().toString();
            if (validateCardInput(cardNumber, cardCVV, cardExpiry)) {
                saveCardToFirestore(cardNumber, cardCVV, cardExpiry);
                dialog.dismiss();
            }
        });
        dialog.show();
    }

    /**
     * РџСЂРѕРІРµСЂСЏРµС‚ РєРѕСЂСЂРµРєС‚РЅРѕСЃС‚СЊ РІРІРµРґРµРЅРЅС‹С… РґР°РЅРЅС‹С… РєР°СЂС‚С‹. РЈР±РµР¶РґР°РµС‚СЃСЏ, С‡С‚Рѕ РЅРѕРјРµСЂ РєР°СЂС‚С‹, CVV Рё СЃСЂРѕРє
     * РґРµР№СЃС‚РІРёСЏ СЃРѕРѕС‚РІРµС‚СЃС‚РІСѓСЋС‚ С‚СЂРµР±РѕРІР°РЅРёСЏРј.
     */
    private boolean validateCardInput(String cardNumber, String cardCVV, String cardExpiry) {
        if (cardNumber.isEmpty() || cardCVV.isEmpty() || cardExpiry.isEmpty()) {
            Toast.makeText(requireContext(), "Р—Р°РїРѕР»РЅРёС‚Рµ РІСЃРµ РїРѕР»СЏ", Toast.LENGTH_SHORT).show();
            return false;
        }
        if (cardNumber.length() != 16) {
            Toast.makeText(requireContext(), "РќРѕРјРµСЂ РєР°СЂС‚С‹ РґРѕР»Р¶РµРЅ СЃРѕРґРµСЂР¶Р°С‚СЊ 16 С†РёС„СЂ", Toast.LENGTH_SHORT).show();
            return false;
        }
        if (cardCVV.length() != 3) {
            Toast.makeText(requireContext(), "CVV РєРѕРґ РґРѕР»Р¶РµРЅ СЃРѕРґРµСЂР¶Р°С‚СЊ 3 С†РёС„СЂС‹", Toast.LENGTH_SHORT).show();
            return false;
        }
        if (cardExpiry.length() != 5 || !cardExpiry.contains("/")) {
            Toast.makeText(requireContext(), "Р’РІРµРґРёС‚Рµ РґР°С‚Сѓ РІ С„РѕСЂРјР°С‚Рµ РњРњ/Р“Р“", Toast.LENGTH_SHORT).show();
            return false;
        }
        String[] expiryParts = cardExpiry.split("/");
        int month = Integer.parseInt(expiryParts[0]);
        int year = Integer.parseInt(expiryParts[1]);
        int currentYear = java.util.Calendar.getInstance().get(java.util.Calendar.YEAR) % 100;
        int maxYear = currentYear + 10;
        if (month < 1 || month > 12) {
            Toast.makeText(requireContext(), "РњРµСЃСЏС† РґРѕР»Р¶РµРЅ Р±С‹С‚СЊ РѕС‚ 01 РґРѕ 12", Toast.LENGTH_SHORT).show();
            return false;
        }
        if (year < currentYear) {
            Toast.makeText(requireContext(), "Р“РѕРґ РЅРµ РјРѕР¶РµС‚ Р±С‹С‚СЊ РјРµРЅСЊС€Рµ С‚РµРєСѓС‰РµРіРѕ (" + currentYear + ")", Toast.LENGTH_SHORT).show();
            return false;
        }
        if (year > maxYear) {
            Toast.makeText(requireContext(), "Р“РѕРґ РЅРµ РјРѕР¶РµС‚ Р±С‹С‚СЊ Р±РѕР»СЊС€Рµ " + maxYear + " (С‚РµРєСѓС‰РёР№ + 10 Р»РµС‚)", Toast.LENGTH_SHORT).show();
            return false;
        }
        return true;
    }

    /**
     * РЎРѕС…СЂР°РЅСЏРµС‚ РґР°РЅРЅС‹Рµ РєР°СЂС‚С‹ РІ Firebase Firestore. Р”РѕР±Р°РІР»СЏРµС‚ РЅРѕРІСѓСЋ РєР°СЂС‚Сѓ РІ РєРѕР»Р»РµРєС†РёСЋ "cards".
     */
    private void saveCardToFirestore(String cardNumber, String cardCVV, String cardExpiry) {
        Map<String, Object> cardData = new HashMap<>();
        cardData.put("cardNumber", cardNumber);
        cardData.put("cvv", cardCVV);
        cardData.put("expiryDate", cardExpiry);
        cardData.put("userId", userDocumentId);
        db.collection("cards")
                .add(cardData)
                .addOnFailureListener(e -> {
                    Toast.makeText(requireContext(), "РћС€РёР±РєР° РїСЂРё РґРѕР±Р°РІР»РµРЅРёРё РєР°СЂС‚С‹: " + e.getMessage(), Toast.LENGTH_SHORT).show();
                });
    }

    /**
     * Р”РѕР±Р°РІР»СЏРµС‚ РєР°СЂС‚РѕС‡РєСѓ РєР°СЂС‚С‹ РІ UI. РћС‚РѕР±СЂР°Р¶Р°РµС‚ РїРѕСЃР»РµРґРЅРёРµ 4 С†РёС„СЂС‹ РЅРѕРјРµСЂР° РєР°СЂС‚С‹ Рё РїРѕР·РІРѕР»СЏРµС‚
     * РѕС‚РєСЂС‹С‚СЊ РјРµРЅСЋ РґР»СЏ СѓРґР°Р»РµРЅРёСЏ РєР°СЂС‚С‹.
     */
    private void addCardToView(DocumentSnapshot document) {
        String cardNumber = document.getString("cardNumber");
        String cardId = document.getId();
        View cardView = LayoutInflater.from(requireContext()).inflate(R.layout.item_card, null);
        TextView tvCardNumber = cardView.findViewById(R.id.tvCardNumber);
        tvCardNumber.setText("РљР°СЂС‚Р° **** " + cardNumber.substring(cardNumber.length() - 4));
        cardView.setOnClickListener(v -> showCardOptionsMenu(v, cardId));
        cardsContainer.addView(cardView);
    }

    /**
     * РћС‚РѕР±СЂР°Р¶Р°РµС‚ РІСЃРїР»С‹РІР°СЋС‰РµРµ РјРµРЅСЋ РґР»СЏ РєР°СЂС‚С‹ СЃ РѕРїС†РёРµР№ СѓРґР°Р»РµРЅРёСЏ.
     */
    private void showCardOptionsMenu(View view, String cardId) {
        PopupMenu popupMenu = new PopupMenu(requireContext(), view);
        popupMenu.getMenuInflater().inflate(R.menu.card_delete_menu, popupMenu.getMenu());
        popupMenu.setOnMenuItemClickListener(item -> {
            if (item.getItemId() == R.id.action_delete_card) {
                deleteCard(cardId);
                return true;
            }
            return false;
        });
        popupMenu.show();
    }

    /**
     * РЈРґР°Р»СЏРµС‚ РєР°СЂС‚Сѓ РёР· Firebase Firestore. РЈРґР°Р»СЏРµС‚ РґРѕРєСѓРјРµРЅС‚ РєР°СЂС‚С‹ РїРѕ СѓРєР°Р·Р°РЅРЅРѕРјСѓ РёРґРµРЅС‚РёС„РёРєР°С‚РѕСЂСѓ.
     */
    private void deleteCard(String cardId) {
        db.collection("cards").document(cardId)
                .delete()
                .addOnSuccessListener(aVoid -> {
                    Toast.makeText(requireContext(), "РљР°СЂС‚Р° СѓСЃРїРµС€РЅРѕ СѓРґР°Р»РµРЅР°", Toast.LENGTH_SHORT).show();
                })
                .addOnFailureListener(e -> {
                    Toast.makeText(requireContext(), "РћС€РёР±РєР° РїСЂРё СѓРґР°Р»РµРЅРёРё РєР°СЂС‚С‹: " + e.getMessage(), Toast.LENGTH_SHORT).show();
                });
    }
}

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\java\com\example\ozon\RegistrationActivity.java
package com.example.ozon;

import android.content.Intent;
import android.content.SharedPreferences;
import android.graphics.Color;
import android.graphics.LinearGradient;
import android.graphics.Shader;
import android.os.Bundle;
import android.util.Patterns;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import android.widget.Toast;
import androidx.appcompat.app.AppCompatActivity;
import com.google.firebase.firestore.FirebaseFirestore;
import com.google.firebase.firestore.QuerySnapshot;
import java.util.HashMap;
import java.util.Map;
import java.util.regex.Pattern;

/**
 * РљР»Р°СЃСЃ RegistrationActivity РїСЂРµРґСЃС‚Р°РІР»СЏРµС‚ СЃРѕР±РѕР№ Р°РєС‚РёРІРЅРѕСЃС‚СЊ РґР»СЏ СЂРµРіРёСЃС‚СЂР°С†РёРё РЅРѕРІРѕРіРѕ РїРѕР»СЊР·РѕРІР°С‚РµР»СЏ
 * РІ РїСЂРёР»РѕР¶РµРЅРёРё "OZON". РџРѕР·РІРѕР»СЏРµС‚ РїРѕР»СЊР·РѕРІР°С‚РµР»СЋ РІРІРµСЃС‚Рё РёРјСЏ, email Рё РїР°СЂРѕР»СЊ,
 * Р° С‚Р°РєР¶Рµ РїРµСЂРµР№С‚Рё РЅР° СЌРєСЂР°РЅ РІС…РѕРґР° РёР»Рё Р°РІС‚РѕСЂРёР·Р°С†РёРё РїСЂРѕРґР°РІС†Р°.
 */
public class RegistrationActivity extends AppCompatActivity {
    private TextView loginLink;
    private TextView sellerAuthLink;
    private EditText loginField, passwordField, nameField;
    private Button registerButton;
    private FirebaseFirestore db;
    private static final Pattern SPECIAL_CHAR_PATTERN = Pattern.compile("[!@#$%^&*(),.?\":{}|<>]");

    /**
     * РРЅРёС†РёР°Р»РёР·РёСЂСѓРµС‚ Р°РєС‚РёРІРЅРѕСЃС‚СЊ. РЈСЃС‚Р°РЅР°РІР»РёРІР°РµС‚ layout, РёРЅРёС†РёР°Р»РёР·РёСЂСѓРµС‚ СЌР»РµРјРµРЅС‚С‹ UI,
     * РЅР°СЃС‚СЂР°РёРІР°РµС‚ РѕР±СЂР°Р±РѕС‚С‡РёРєРё СЃРѕР±С‹С‚РёР№ Рё РїСЂРёРјРµРЅСЏРµС‚ РіСЂР°РґРёРµРЅС‚ Рє С‚РµРєСЃС‚Сѓ Р»РѕРіРѕС‚РёРїР°.
     */
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.registration);
        loginField = findViewById(R.id.loginField);
        passwordField = findViewById(R.id.passwordField);
        registerButton = findViewById(R.id.registerButton);
        nameField = findViewById(R.id.nameField);
        loginLink = findViewById(R.id.loginLink);
        sellerAuthLink = findViewById(R.id.sellerAuthLink);
        db = FirebaseFirestore.getInstance();
        loginLink.setOnClickListener(v -> {
            Intent intent = new Intent(RegistrationActivity.this, MainActivity.class);
            startActivity(intent);
        });
        sellerAuthLink.setOnClickListener(v -> {
            Intent intent = new Intent(RegistrationActivity.this, AutorizationForSellerActivity.class);
            startActivity(intent);
        });
        registerButton.setOnClickListener(v -> {
            registerUser(loginField.getText().toString(), passwordField.getText().toString(), nameField.getText().toString());
        });
        TextView logoText = findViewById(R.id.logoText);
        applyTextGradient(logoText);
    }

    /**
     * РџСЂРёРјРµРЅСЏРµС‚ РіСЂР°РґРёРµРЅС‚РЅС‹Р№ СЌС„С„РµРєС‚ Рє С‚РµРєСЃС‚Сѓ. РСЃРїРѕР»СЊР·СѓРµС‚ LinearGradient РґР»СЏ СЃРѕР·РґР°РЅРёСЏ
     * С†РІРµС‚РѕРІРѕРіРѕ РїРµСЂРµС…РѕРґР° РѕС‚ СЃРёРЅРµРіРѕ Рє СЂРѕР·РѕРІРѕРјСѓ.
     */
    private void applyTextGradient(TextView textView) {
        textView.post(() -> {
            float width = textView.getPaint().measureText(textView.getText().toString());
            Shader textShader = new LinearGradient(
                    0, 0, width, textView.getTextSize(),
                    new int[]{
                            Color.parseColor("#2B67FF"),
                            Color.parseColor("#EC407A")
                    },
                    null, Shader.TileMode.CLAMP
            );
            textView.getPaint().setShader(textShader);
            textView.invalidate();
        });
    }

    /**
     * Р’С‹РїРѕР»РЅСЏРµС‚ СЂРµРіРёСЃС‚СЂР°С†РёСЋ РїРѕР»СЊР·РѕРІР°С‚РµР»СЏ. РџСЂРѕРІРµСЂСЏРµС‚ РІРІРµРґРµРЅРЅС‹Рµ РґР°РЅРЅС‹Рµ Рё, РµСЃР»Рё РѕРЅРё РєРѕСЂСЂРµРєС‚РЅС‹,
     * РїСЂРѕРІРµСЂСЏРµС‚ СѓРЅРёРєР°Р»СЊРЅРѕСЃС‚СЊ email РїРµСЂРµРґ СЃРѕС…СЂР°РЅРµРЅРёРµРј РґР°РЅРЅС‹С… РІ Firebase Firestore.
     */
    private void registerUser(String login, String password, String name) {
        if (name.isEmpty()) {
            Toast.makeText(this, "Р—Р°РїРѕР»РЅРёС‚Рµ РёРјСЏ", Toast.LENGTH_SHORT).show();
            return;
        }
        if (!validateLogin(login)) {
            return;
        }
        if (!validatePassword(password)) {
            return;
        }
        db.collection("users")
                .whereEqualTo("email", login)
                .get()
                .addOnCompleteListener(task -> {
                    if (task.isSuccessful()) {
                        QuerySnapshot querySnapshot = task.getResult();
                        if (querySnapshot != null && !querySnapshot.isEmpty()) {
                            Toast.makeText(this, "Р­С‚РѕС‚ email СѓР¶Рµ Р·Р°СЂРµРіРёСЃС‚СЂРёСЂРѕРІР°РЅ", Toast.LENGTH_SHORT).show();
                        } else {
                            performRegistration(login, password, name);
                        }
                    } else {
                        Toast.makeText(this, "РћС€РёР±РєР° РїСЂРѕРІРµСЂРєРё email: " + task.getException().getMessage(), Toast.LENGTH_SHORT).show();
                    }
                });
    }

    /**
     * РџСЂРѕРІРµСЂСЏРµС‚ РєРѕСЂСЂРµРєС‚РЅРѕСЃС‚СЊ РІРІРµРґРµРЅРЅРѕРіРѕ Р»РѕРіРёРЅР° (email). РЈР±РµР¶РґР°РµС‚СЃСЏ, С‡С‚Рѕ email РЅРµ РїСѓСЃС‚РѕР№,
     * СЃРѕРґРµСЂР¶РёС‚ РјРёРЅРёРјСѓРј 5 СЃРёРјРІРѕР»РѕРІ Рё СЃРѕРѕС‚РІРµС‚СЃС‚РІСѓРµС‚ С„РѕСЂРјР°С‚Сѓ email.
     */
    private boolean validateLogin(String login) {
        if (login.isEmpty()) {
            Toast.makeText(this, "Р—Р°РїРѕР»РЅРёС‚Рµ Р»РѕРіРёРЅ (email)", Toast.LENGTH_SHORT).show();
            return false;
        }
        if (login.length() < 5) {
            Toast.makeText(this, "Email РґРѕР»Р¶РµРЅ СЃРѕРґРµСЂР¶Р°С‚СЊ РјРёРЅРёРјСѓРј 8 СЃРёРјРІРѕР»РѕРІ", Toast.LENGTH_SHORT).show();
            return false;
        }
        if (!Patterns.EMAIL_ADDRESS.matcher(login).matches()) {
            Toast.makeText(this, "РќРµРІРµСЂРЅС‹Р№ С„РѕСЂРјР°С‚ РїРѕС‡С‚С‹", Toast.LENGTH_SHORT).show();
            return false;
        }
        return true;
    }

    /**
     * РџСЂРѕРІРµСЂСЏРµС‚ РєРѕСЂСЂРµРєС‚РЅРѕСЃС‚СЊ РІРІРµРґРµРЅРЅРѕРіРѕ РїР°СЂРѕР»СЏ. РЈР±РµР¶РґР°РµС‚СЃСЏ, С‡С‚Рѕ РїР°СЂРѕР»СЊ СЃРѕРѕС‚РІРµС‚СЃС‚РІСѓРµС‚ С‚СЂРµР±РѕРІР°РЅРёСЏРј
     * РїРѕ РґР»РёРЅРµ, РЅР°Р»РёС‡РёСЋ Р·Р°РіР»Р°РІРЅС‹С… Рё СЃС‚СЂРѕС‡РЅС‹С… Р±СѓРєРІ, С†РёС„СЂ Рё СЃРїРµС†РёР°Р»СЊРЅС‹С… СЃРёРјРІРѕР»РѕРІ.
     */
    private boolean validatePassword(String password) {
        if (password.isEmpty()) {
            Toast.makeText(this, "Р—Р°РїРѕР»РЅРёС‚Рµ РїР°СЂРѕР»СЊ", Toast.LENGTH_SHORT).show();
            return false;
        }
        if (password.length() < 7) {
            Toast.makeText(this, "РџР°СЂРѕР»СЊ РґРѕР»Р¶РµРЅ СЃРѕРґРµСЂР¶Р°С‚СЊ РјРёРЅРёРјСѓРј 7 СЃРёРјРІРѕР»РѕРІ", Toast.LENGTH_SHORT).show();
            return false;
        }
        if (!Pattern.compile("[A-Z]").matcher(password).find()) {
            Toast.makeText(this, "РџР°СЂРѕР»СЊ РґРѕР»Р¶РµРЅ СЃРѕРґРµСЂР¶Р°С‚СЊ С…РѕС‚СЏ Р±С‹ РѕРґРЅСѓ Р·Р°РіР»Р°РІРЅСѓСЋ Р±СѓРєРІСѓ", Toast.LENGTH_SHORT).show();
            return false;
        }
        if (!Pattern.compile("[a-z]").matcher(password).find()) {
            Toast.makeText(this, "РџР°СЂРѕР»СЊ РґРѕР»Р¶РµРЅ СЃРѕРґРµСЂР¶Р°С‚СЊ С…РѕС‚СЏ Р±С‹ РѕРґРЅСѓ СЃС‚СЂРѕС‡РЅСѓСЋ Р±СѓРєРІСѓ", Toast.LENGTH_SHORT).show();
            return false;
        }
        if (!Pattern.compile("[0-9]").matcher(password).find()) {
            Toast.makeText(this, "РџР°СЂРѕР»СЊ РґРѕР»Р¶РµРЅ СЃРѕРґРµСЂР¶Р°С‚СЊ С…РѕС‚СЏ Р±С‹ РѕРґРЅСѓ С†РёС„СЂСѓ", Toast.LENGTH_SHORT).show();
            return false;
        }
        if (!SPECIAL_CHAR_PATTERN.matcher(password).find()) {
            Toast.makeText(this, "РџР°СЂРѕР»СЊ РґРѕР»Р¶РµРЅ СЃРѕРґРµСЂР¶Р°С‚СЊ С…РѕС‚СЏ Р±С‹ РѕРґРёРЅ СЃРїРµС†РёР°Р»СЊРЅС‹Р№ СЃРёРјРІРѕР» (!@#$%^&*(),.?\":{}|<>)", Toast.LENGTH_SHORT).show();
            return false;
        }
        return true;
    }

    /**
     * РЎРѕС…СЂР°РЅСЏРµС‚ РґР°РЅРЅС‹Рµ РЅРѕРІРѕРіРѕ РїРѕР»СЊР·РѕРІР°С‚РµР»СЏ РІ Firebase Firestore. РџРѕСЃР»Рµ СѓСЃРїРµС€РЅРѕР№ СЂРµРіРёСЃС‚СЂР°С†РёРё
     * СЃРѕС…СЂР°РЅСЏРµС‚ РґР°РЅРЅС‹Рµ Р°РІС‚РѕСЂРёР·Р°С†РёРё Рё РїРµСЂРµРЅР°РїСЂР°РІР»СЏРµС‚ РЅР° РіР»Р°РІРЅС‹Р№ СЌРєСЂР°РЅ РїРѕРєСѓРїР°С‚РµР»СЏ.
     */
    private void performRegistration(String login, String password, String name) {
        Map<String, Object> user = new HashMap<>();
        user.put("name", name);
        user.put("email", login);
        user.put("password", password);
        user.put("role", "customer");
        db.collection("users").add(user)
                .addOnSuccessListener(documentReference -> {
                    String userDocumentId = documentReference.getId();
                    saveUserAuthData(userDocumentId, "customer");
                    Toast.makeText(this, "Р РµРіРёСЃС‚СЂР°С†РёСЏ СѓСЃРїРµС€РЅР°", Toast.LENGTH_SHORT).show();
                    Intent intent = new Intent(RegistrationActivity.this, CustomerMainActivity.class);
                    intent.putExtra("USER_DOCUMENT_ID", userDocumentId);
                    intent.putExtra("USER_ROLE", "customer");
                    startActivity(intent);
                    finish();
                })
                .addOnFailureListener(e -> {
                    Toast.makeText(this, "РћС€РёР±РєР° РїСЂРё СЂРµРіРёСЃС‚СЂР°С†РёРё: " + e.getMessage(), Toast.LENGTH_SHORT).show();
                });
    }

    /**
     * РЎРѕС…СЂР°РЅСЏРµС‚ РґР°РЅРЅС‹Рµ Р°РІС‚РѕСЂРёР·Р°С†РёРё РїРѕР»СЊР·РѕРІР°С‚РµР»СЏ РІ SharedPreferences. РЎРѕС…СЂР°РЅСЏРµС‚ ID РїРѕР»СЊР·РѕРІР°С‚РµР»СЏ,
     * СЂРѕР»СЊ Рё СЃС‚Р°С‚СѓСЃ РІС…РѕРґР°.
     */
    private void saveUserAuthData(String userDocumentId, String userRole) {
        SharedPreferences sharedPrefs = getSharedPreferences("AppPrefs", MODE_PRIVATE);
        SharedPreferences.Editor editor = sharedPrefs.edit();
        editor.putBoolean("isLoggedIn", true);
        editor.putString("userId", userDocumentId);
        editor.putString("userRole", userRole);
        editor.apply();
    }
}

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\java\com\example\ozon\SellerCatalogActivity.java
package com.example.ozon;

import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.fragment.app.Fragment;
import androidx.fragment.app.FragmentManager;
import androidx.fragment.app.FragmentTransaction;
import androidx.recyclerview.widget.GridLayoutManager;
import androidx.recyclerview.widget.RecyclerView;
import com.google.firebase.firestore.DocumentSnapshot;
import com.google.firebase.firestore.FirebaseFirestore;
import com.google.firebase.firestore.Query;
import java.util.ArrayList;
import java.util.List;

/**
 * РљР»Р°СЃСЃ SellerCatalogActivity РїСЂРµРґСЃС‚Р°РІР»СЏРµС‚ СЃРѕР±РѕР№ С„СЂР°РіРјРµРЅС‚ РґР»СЏ РѕС‚РѕР±СЂР°Р¶РµРЅРёСЏ РєР°С‚Р°Р»РѕРіР° С‚РѕРІР°СЂРѕРІ
 * РїСЂРѕРґР°РІС†Р° РІ РїСЂРёР»РѕР¶РµРЅРёРё "OZON". РџРѕР·РІРѕР»СЏРµС‚ РїСЂРѕРґР°РІС†Сѓ РїСЂРѕСЃРјР°С‚СЂРёРІР°С‚СЊ СЃРІРѕРё С‚РѕРІР°СЂС‹
 * Рё РїРµСЂРµС…РѕРґРёС‚СЊ Рє РґРµС‚Р°Р»СЊРЅРѕР№ РёРЅС„РѕСЂРјР°С†РёРё Рѕ РєР°Р¶РґРѕРј С‚РѕРІР°СЂРµ.
 */
public class SellerCatalogActivity extends Fragment {
    private RecyclerView recyclerView;
    private ProductAdapter productAdapter;
    private FirebaseFirestore db;
    private String userDocumentId;
    private String userRole;
    private TextView emptyView;

    /**
     * РЎРѕР·РґР°РµС‚ Рё РІРѕР·РІСЂР°С‰Р°РµС‚ РїСЂРµРґСЃС‚Р°РІР»РµРЅРёРµ С„СЂР°РіРјРµРЅС‚Р°. РРЅРёС†РёР°Р»РёР·РёСЂСѓРµС‚ СЌР»РµРјРµРЅС‚С‹ UI,
     * РёР·РІР»РµРєР°РµС‚ РґР°РЅРЅС‹Рµ Рѕ РїРѕР»СЊР·РѕРІР°С‚РµР»Рµ РёР· Р°СЂРіСѓРјРµРЅС‚РѕРІ, РЅР°СЃС‚СЂР°РёРІР°РµС‚ Р°РґР°РїС‚РµСЂ РґР»СЏ СЃРїРёСЃРєР° С‚РѕРІР°СЂРѕРІ
     * Рё Р·Р°РіСЂСѓР¶Р°РµС‚ С‚РѕРІР°СЂС‹ РїСЂРѕРґР°РІС†Р°.
     */
    @Override
    public View onCreateView(@NonNull LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
        View view = inflater.inflate(R.layout.catalog_seller_layout, container, false);
        db = FirebaseFirestore.getInstance();
        recyclerView = view.findViewById(R.id.recyclerView);
        if (recyclerView == null) {
            return view;
        }
        recyclerView.setLayoutManager(new GridLayoutManager(getContext(), 2));
        emptyView = view.findViewById(R.id.emptyView);
        if (emptyView == null) {
            return view;
        }
        Bundle bundle = getArguments();
        if (bundle != null) {
            userDocumentId = bundle.getString("USER_DOCUMENT_ID");
            userRole = bundle.getString("USER_ROLE");
        } else {
            return view;
        }
        productAdapter = new ProductAdapter(product -> {
            openProductDetailSeller(product.getId(), userDocumentId, userRole);
        }, userDocumentId, userRole);
        recyclerView.setAdapter(productAdapter);
        loadProducts(userDocumentId);
        return view;
    }

    /**
     * Р—Р°РіСЂСѓР¶Р°РµС‚ СЃРїРёСЃРѕРє С‚РѕРІР°СЂРѕРІ РїСЂРѕРґР°РІС†Р° РёР· Firebase Firestore. РћР±РЅРѕРІР»СЏРµС‚ Р°РґР°РїС‚РµСЂ РґР°РЅРЅС‹РјРё
     * Рё СѓРїСЂР°РІР»СЏРµС‚ РІРёРґРёРјРѕСЃС‚СЊСЋ СЃРїРёСЃРєР° С‚РѕРІР°СЂРѕРІ Рё СЃРѕРѕР±С‰РµРЅРёСЏ РѕР± РёС… РѕС‚СЃСѓС‚СЃС‚РІРёРё.
     */
    private void loadProducts(String sellerId) {
        if (db == null || sellerId == null) {
            return;
        }
        Query query = db.collection("products")
                .whereEqualTo("sellerId", sellerId);
        query.get().addOnSuccessListener(queryDocumentSnapshots -> {
            List<Product> products = new ArrayList<>();
            for (DocumentSnapshot document : queryDocumentSnapshots) {
                Product product = document.toObject(Product.class);
                if (product != null) {
                    product.setId(document.getId());
                    products.add(product);
                }
            }
            if (productAdapter != null) {
                productAdapter.updateData(products, null);
            }
            if (emptyView != null && recyclerView != null) {
                if (products.isEmpty()) {
                    emptyView.setText("РЈ РІР°СЃ РµС‰Рµ РЅРµС‚ С‚РѕРІР°СЂРѕРІ");
                    emptyView.setVisibility(View.VISIBLE);
                    recyclerView.setVisibility(View.GONE);
                } else {
                    emptyView.setVisibility(View.GONE);
                    recyclerView.setVisibility(View.VISIBLE);
                }
            }
        }).addOnFailureListener(e -> {
        });
    }

    /**
     * РћС‚РєСЂС‹РІР°РµС‚ С„СЂР°РіРјРµРЅС‚ СЃ РґРµС‚Р°Р»СЊРЅРѕР№ РёРЅС„РѕСЂРјР°С†РёРµР№ Рѕ С‚РѕРІР°СЂРµ РґР»СЏ РїСЂРѕРґР°РІС†Р°. РџРµСЂРµРґР°РµС‚ РґР°РЅРЅС‹Рµ
     * Рѕ С‚РѕРІР°СЂРµ Рё РїРѕР»СЊР·РѕРІР°С‚РµР»Рµ РІ РЅРѕРІС‹Р№ С„СЂР°РіРјРµРЅС‚ Рё РґРѕР±Р°РІР»СЏРµС‚ РµРіРѕ РІ СЃС‚РµРє РІРѕР·РІСЂР°С‚Р°.
     */
    private void openProductDetailSeller(String productId, String userDocumentId, String userRole) {
        if (productId == null || userDocumentId == null || userRole == null) {
            return;
        }
        ProductDetailSeller productDetailSeller = new ProductDetailSeller();
        Bundle bundle = new Bundle();
        bundle.putString("productId", productId);
        bundle.putString("userDocumentId", userDocumentId);
        bundle.putString("userRole", userRole);
        productDetailSeller.setArguments(bundle);
        FragmentManager fragmentManager = getParentFragmentManager();
        if (fragmentManager != null) {
            FragmentTransaction transaction = fragmentManager.beginTransaction();
            transaction.replace(R.id.frameLayoutseller, productDetailSeller);
            transaction.addToBackStack(null);
            transaction.commit();
        }
    }
}

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\java\com\example\ozon\SellerMainActivity.java
package com.example.ozon;

import android.os.Bundle;
import androidx.appcompat.app.AppCompatActivity;
import androidx.fragment.app.Fragment;
import com.google.android.material.bottomnavigation.BottomNavigationView;

/**
 * РљР»Р°СЃСЃ SellerMainActivity РїСЂРµРґСЃС‚Р°РІР»СЏРµС‚ СЃРѕР±РѕР№ РѕСЃРЅРѕРІРЅСѓСЋ Р°РєС‚РёРІРЅРѕСЃС‚СЊ РґР»СЏ РїСЂРѕРґР°РІС†Р°
 * РІ РїСЂРёР»РѕР¶РµРЅРёРё "OZON". РЈРїСЂР°РІР»СЏРµС‚ РЅР°РІРёРіР°С†РёРµР№ РјРµР¶РґСѓ С„СЂР°РіРјРµРЅС‚Р°РјРё
 * РєР°С‚Р°Р»РѕРіР°, СЃРѕР·РґР°РЅРёСЏ С‚РѕРІР°СЂР° Рё РїСЂРѕС„РёР»СЏ РїСЂРѕРґР°РІС†Р° С‡РµСЂРµР· РЅРёР¶РЅСЋСЋ РїР°РЅРµР»СЊ РЅР°РІРёРіР°С†РёРё.
 */
public class SellerMainActivity extends AppCompatActivity {

    /**
     * РРЅРёС†РёР°Р»РёР·РёСЂСѓРµС‚ Р°РєС‚РёРІРЅРѕСЃС‚СЊ. РЈСЃС‚Р°РЅР°РІР»РёРІР°РµС‚ layout, РёР·РІР»РµРєР°РµС‚ РґР°РЅРЅС‹Рµ Рѕ РїРѕР»СЊР·РѕРІР°С‚РµР»Рµ
     * РёР· Intent, РЅР°СЃС‚СЂР°РёРІР°РµС‚ РЅРёР¶РЅСЋСЋ РїР°РЅРµР»СЊ РЅР°РІРёРіР°С†РёРё Рё РѕС‚РѕР±СЂР°Р¶Р°РµС‚ С„СЂР°РіРјРµРЅС‚ РєР°С‚Р°Р»РѕРіР°
     * РїРѕ СѓРјРѕР»С‡Р°РЅРёСЋ РїСЂРё РїРµСЂРІРѕРј Р·Р°РїСѓСЃРєРµ.
     */
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.seller_layout);
        String userDocumentId = getIntent().getStringExtra("USER_DOCUMENT_ID");
        String userRole = getIntent().getStringExtra("USER_ROLE");
        BottomNavigationView bottomNavigationView = findViewById(R.id.bottom_navigation);
        bottomNavigationView.setOnNavigationItemSelectedListener(item -> {
            Fragment selectedFragment = null;
            if (item.getItemId() == R.id.nav_catalog) {
                selectedFragment = new SellerCatalogActivity();
                Bundle bundle = new Bundle();
                bundle.putString("USER_DOCUMENT_ID", userDocumentId);
                bundle.putString("USER_ROLE", userRole);
                selectedFragment.setArguments(bundle);
            } else if (item.getItemId() == R.id.nav_cart) {
                selectedFragment = new CreateProductActivity();
                Bundle bundle = new Bundle();
                bundle.putString("USER_DOCUMENT_ID", userDocumentId);
                bundle.putString("USER_ROLE", userRole);
                selectedFragment.setArguments(bundle);
            } else if (item.getItemId() == R.id.nav_profile) {
                selectedFragment = new SellerProfileActivity();
                Bundle bundle = new Bundle();
                bundle.putString("USER_DOCUMENT_ID", userDocumentId);
                bundle.putString("USER_ROLE", userRole);
                selectedFragment.setArguments(bundle);
            }
            if (selectedFragment != null) {
                getSupportFragmentManager().beginTransaction()
                        .replace(R.id.frameLayoutseller, selectedFragment)
                        .commit();
            }
            return true;
        });
        if (savedInstanceState == null) {
            bottomNavigationView.setSelectedItemId(R.id.nav_catalog);
        }
    }
}

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\java\com\example\ozon\SellerProfileActivity.java
package com.example.ozon;

import android.app.AlertDialog;
import android.content.Intent;
import android.content.SharedPreferences;
import android.os.Bundle;
import android.os.Handler;
import android.os.Looper;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AdapterView;
import android.widget.ArrayAdapter;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.PopupMenu;
import android.widget.Spinner;
import android.widget.TextView;
import android.widget.Toast;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.fragment.app.Fragment;
import com.github.mikephil.charting.charts.LineChart;
import com.github.mikephil.charting.components.XAxis;
import com.github.mikephil.charting.data.Entry;
import com.github.mikephil.charting.data.LineData;
import com.github.mikephil.charting.data.LineDataSet;
import com.github.mikephil.charting.formatter.IndexAxisValueFormatter;
import com.google.firebase.firestore.DocumentSnapshot;
import com.google.firebase.firestore.FirebaseFirestore;
import com.google.firebase.firestore.Query;
import com.google.firebase.firestore.QueryDocumentSnapshot;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Locale;
import java.util.Map;
import java.util.Random;
import java.util.regex.Pattern;

/**
 * РљР»Р°СЃСЃ SellerProfileActivity РїСЂРµРґСЃС‚Р°РІР»СЏРµС‚ СЃРѕР±РѕР№ С„СЂР°РіРјРµРЅС‚ РґР»СЏ РѕС‚РѕР±СЂР°Р¶РµРЅРёСЏ РїСЂРѕС„РёР»СЏ РїСЂРѕРґР°РІС†Р°
 * РІ РїСЂРёР»РѕР¶РµРЅРёРё "OZON". РџРѕР·РІРѕР»СЏРµС‚ РїСЂРѕРґР°РІС†Сѓ РїСЂРѕСЃРјР°С‚СЂРёРІР°С‚СЊ СЃРІРѕРё РґР°РЅРЅС‹Рµ,
 * РіСЂР°С„РёРє РІС‹СЂСѓС‡РєРё РїРѕ С‚РѕРІР°СЂР°Рј, СЂРµРґР°РєС‚РёСЂРѕРІР°С‚СЊ РїСЂРѕС„РёР»СЊ, РёР·РјРµРЅСЏС‚СЊ РїР°СЂРѕР»СЊ Рё СѓРґР°Р»СЏС‚СЊ Р°РєРєР°СѓРЅС‚.
 */
public class SellerProfileActivity extends Fragment {
    private TextView tvSellerName, tvSellerLogin, tvSellerShop, tvSellerOGRNIP, tvSellerINN;
    private ImageView btnMenu;
    private Spinner productSpinner;
    private LineChart revenueChart;
    private FirebaseFirestore db;
    private String userDocumentId, userRole;
    private List<String> productIds = new ArrayList<>();
    private static final Pattern SPECIAL_CHAR_PATTERN = Pattern.compile("[!@#$%^&*(),.?\":{}|<>]");
    private Map<String, String> productIdToNameMap = new HashMap<>();
    private Map<String, List<ProductRevenue>> productRevenueMap = new HashMap<>();
    private List<Order> cachedOrders;

    /**
     * РЎРѕР·РґР°РµС‚ Рё РІРѕР·РІСЂР°С‰Р°РµС‚ РїСЂРµРґСЃС‚Р°РІР»РµРЅРёРµ С„СЂР°РіРјРµРЅС‚Р°. РРЅРёС†РёР°Р»РёР·РёСЂСѓРµС‚ СЌР»РµРјРµРЅС‚С‹ UI,
     * РёР·РІР»РµРєР°РµС‚ РґР°РЅРЅС‹Рµ Рѕ РїРѕР»СЊР·РѕРІР°С‚РµР»Рµ РёР· Р°СЂРіСѓРјРµРЅС‚РѕРІ, Р·Р°РіСЂСѓР¶Р°РµС‚ РґР°РЅРЅС‹Рµ РїСЂРѕРґР°РІС†Р° Рё С‚РѕРІР°СЂРѕРІ,
     * Р° С‚Р°РєР¶Рµ РЅР°СЃС‚СЂР°РёРІР°РµС‚ РјРµРЅСЋ РґРµР№СЃС‚РІРёР№.
     */
    @Nullable
    @Override
    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {
        try {
            View view = inflater.inflate(R.layout.seller_profile_layout, container, false);
            db = FirebaseFirestore.getInstance();
            Bundle bundle = getArguments();
            if (bundle != null) {
                userDocumentId = bundle.getString("USER_DOCUMENT_ID");
                userRole = bundle.getString("USER_ROLE");
            }
            tvSellerName = view.findViewById(R.id.tvSellerName);
            tvSellerLogin = view.findViewById(R.id.tvSellerLogin);
            tvSellerShop = view.findViewById(R.id.tvSellerShop);
            tvSellerOGRNIP = view.findViewById(R.id.tvSellerOGRNIP);
            tvSellerINN = view.findViewById(R.id.tvSellerINN);
            btnMenu = view.findViewById(R.id.btnMenu);
            productSpinner = view.findViewById(R.id.productSpinner);
            revenueChart = view.findViewById(R.id.revenueChart);
            loadSellerData();
            loadSellerProducts();
            btnMenu.setOnClickListener(v -> showSellerActionsMenu(v));
            return view;
        } catch (Exception e) {
            return null;
        }
    }

    /**
     * Р—Р°РіСЂСѓР¶Р°РµС‚ СЃРїРёСЃРѕРє С‚РѕРІР°СЂРѕРІ РїСЂРѕРґР°РІС†Р° РёР· Firebase Firestore. РџРѕРґРіРѕС‚Р°РІР»РёРІР°РµС‚ РґР°РЅРЅС‹Рµ
     * РґР»СЏ РѕС‚РѕР±СЂР°Р¶РµРЅРёСЏ РІ РІС‹РїР°РґР°СЋС‰РµРј СЃРїРёСЃРєРµ Рё РЅР° РіСЂР°С„РёРєРµ РІС‹СЂСѓС‡РєРё.
     */
    private void loadSellerProducts() {
        if (!isAdded() || userDocumentId == null) {
            return;
        }
        revenueChart.clear();
        revenueChart.setNoDataText("Р“СЂР°С„РёРє РІС‹РіСЂСѓР¶Р°РµС‚СЃСЏ...");
        revenueChart.invalidate();

        db.collection("products")
                .whereEqualTo("sellerId", userDocumentId)
                .get()
                .addOnSuccessListener(queryDocumentSnapshots -> {
                    if (!isAdded()) {
                        return;
                    }
                    productIds.clear();
                    productIdToNameMap.clear();
                    if (queryDocumentSnapshots.isEmpty()) {
                        Toast.makeText(requireContext(), "РЈ РІР°СЃ РЅРµС‚ С‚РѕРІР°СЂРѕРІ", Toast.LENGTH_SHORT).show();
                        setupProductSpinner();
                        return;
                    }
                    for (QueryDocumentSnapshot document : queryDocumentSnapshots) {
                        String productId = document.getId();
                        String productName = document.getString("name");
                        if (productId == null || productName == null) {
                            continue;
                        }
                        productIds.add(productId);
                        productIdToNameMap.put(productId, productName);
                    }
                    setupProductSpinner();
                    if (!productIds.isEmpty()) {
                        loadOrdersData();
                    } else {
                        revenueChart.clear();
                        revenueChart.setNoDataText("РќРµС‚ С‚РѕРІР°СЂРѕРІ РґР»СЏ РѕС‚РѕР±СЂР°Р¶РµРЅРёСЏ");
                        revenueChart.invalidate();
                        Toast.makeText(requireContext(), "РќРµС‚ С‚РѕРІР°СЂРѕРІ РґР»СЏ РѕС‚РѕР±СЂР°Р¶РµРЅРёСЏ", Toast.LENGTH_SHORT).show();
                    }
                })
                .addOnFailureListener(e -> {
                    if (isAdded()) {
                        Toast.makeText(requireContext(), "РћС€РёР±РєР° Р·Р°РіСЂСѓР·РєРё С‚РѕРІР°СЂРѕРІ: " + e.getMessage(), Toast.LENGTH_SHORT).show();
                        revenueChart.clear();
                        revenueChart.setNoDataText("РћС€РёР±РєР° Р·Р°РіСЂСѓР·РєРё РґР°РЅРЅС‹С…");
                        revenueChart.invalidate();
                    }
                });
    }

    /**
     * Р—Р°РіСЂСѓР¶Р°РµС‚ РґР°РЅРЅС‹Рµ РїСЂРѕРґР°РІС†Р° РёР· Firebase Firestore. РћР±РЅРѕРІР»СЏРµС‚ UI СЃ РёРЅС„РѕСЂРјР°С†РёРµР№
     * Рѕ РїСЂРѕРґР°РІС†Рµ, РІРєР»СЋС‡Р°СЏ РёРјСЏ, email, РЅР°Р·РІР°РЅРёРµ РјР°РіР°Р·РёРЅР°, РћР“Р РќРРџ Рё РРќРќ.
     */
    private void loadSellerData() {
        if (!isAdded() || userDocumentId == null) {
            Toast.makeText(requireContext(), "РћС€РёР±РєР°: ID РїРѕР»СЊР·РѕРІР°С‚РµР»СЏ РЅРµ РЅР°Р№РґРµРЅ", Toast.LENGTH_SHORT).show();
            return;
        }
        db.collection("users").document(userDocumentId)
                .get()
                .addOnCompleteListener(task -> {
                    if (!isAdded()) {
                        return;
                    }
                    if (task.isSuccessful()) {
                        DocumentSnapshot document = task.getResult();
                        if (document.exists()) {
                            if (userRole == null || !userRole.equals("seller")) {
                                Toast.makeText(requireContext(), "Р”РѕСЃС‚СѓРї Р·Р°РїСЂРµС‰РµРЅ: РІС‹ РЅРµ РїСЂРѕРґР°РІРµС†", Toast.LENGTH_SHORT).show();
                                Intent intent = new Intent(requireContext(), MainActivity.class);
                                startActivity(intent);
                                if (getActivity() != null) {
                                    getActivity().finish();
                                }
                                return;
                            }
                            String firstName = document.getString("firstName");
                            String lastName = document.getString("lastName");
                            String middleName = document.getString("middleName");
                            String email = document.getString("email");
                            String storeName = document.getString("storeName");
                            String ogrnip = document.getString("ogrnip");
                            String inn = document.getString("inn");
                            if (firstName == null || lastName == null || email == null || storeName == null || ogrnip == null || inn == null) {
                                Toast.makeText(requireContext(), "РќРµРєРѕС‚РѕСЂС‹Рµ РґР°РЅРЅС‹Рµ РїСЂРѕРґР°РІС†Р° РѕС‚СЃСѓС‚СЃС‚РІСѓСЋС‚", Toast.LENGTH_SHORT).show();
                                return;
                            }
                            String fullName = lastName + " " + firstName + " " + (middleName != null ? middleName : "");
                            tvSellerName.setText(fullName);
                            tvSellerLogin.setText("Р›РѕРіРёРЅ: " + email);
                            tvSellerShop.setText("РњР°РіР°Р·РёРЅ: " + storeName);
                            tvSellerOGRNIP.setText("РћР“Р РќРРџ: " + ogrnip);
                            tvSellerINN.setText("РРќРќ: " + inn);
                        } else {
                            Toast.makeText(requireContext(), "Р”Р°РЅРЅС‹Рµ РїСЂРѕРґР°РІС†Р° РЅРµ РЅР°Р№РґРµРЅС‹", Toast.LENGTH_SHORT).show();
                        }
                    } else {
                        Toast.makeText(requireContext(), "РћС€РёР±РєР° Р·Р°РіСЂСѓР·РєРё РґР°РЅРЅС‹С…", Toast.LENGTH_SHORT).show();
                    }
                });
    }

    /**
     * Р—Р°РіСЂСѓР¶Р°РµС‚ РґР°РЅРЅС‹Рµ Рѕ Р·Р°РєР°Р·Р°С… Р·Р° РїРѕСЃР»РµРґРЅРёРµ 14 РґРЅРµР№ РёР· Firebase Firestore.
     * РСЃРїРѕР»СЊР·СѓРµС‚ РєСЌС€РёСЂРѕРІР°РЅРЅС‹Рµ РґР°РЅРЅС‹Рµ, РµСЃР»Рё РѕРЅРё РґРѕСЃС‚СѓРїРЅС‹, Рё РІС‹Р·С‹РІР°РµС‚ РѕР±СЂР°Р±РѕС‚РєСѓ Р·Р°РєР°Р·РѕРІ.
     */
    private void loadOrdersData() {
        if (!isAdded()) {
            return;
        }
        if (cachedOrders != null) {
            processOrdersData(cachedOrders);
            return;
        }
        revenueChart.clear();
        revenueChart.setNoDataText("Р“СЂР°С„РёРє РІС‹РіСЂСѓР¶Р°РµС‚СЃСЏ...");
        revenueChart.invalidate();

        Calendar calendar = Calendar.getInstance();
        calendar.add(Calendar.DAY_OF_YEAR, -14);
        Date startDate = calendar.getTime();
        db.collection("orders")
                .whereGreaterThanOrEqualTo("orderDate", startDate)
                .orderBy("orderDate", Query.Direction.ASCENDING)
                .limit(50)
                .get()
                .addOnSuccessListener(queryDocumentSnapshots -> {
                    if (!isAdded()) {
                        return;
                    }
                    productRevenueMap.clear();
                    cachedOrders = new ArrayList<>();
                    if (queryDocumentSnapshots.isEmpty()) {
                        Toast.makeText(requireContext(), "РќРµС‚ Р·Р°РєР°Р·РѕРІ Р·Р° РїРѕСЃР»РµРґРЅРёРµ 14 РґРЅРµР№", Toast.LENGTH_SHORT).show();
                        if (!productIds.isEmpty()) {
                            updateChart(productIds.get(0));
                        }
                        return;
                    }
                    for (QueryDocumentSnapshot document : queryDocumentSnapshots) {
                        Order order = document.toObject(Order.class);
                        order.setId(document.getId());
                        cachedOrders.add(order);
                    }
                    processOrdersData(cachedOrders);
                })
                .addOnFailureListener(e -> {
                    if (isAdded()) {
                        Toast.makeText(requireContext(), "РћС€РёР±РєР° Р·Р°РіСЂСѓР·РєРё Р·Р°РєР°Р·РѕРІ: " + e.getMessage(), Toast.LENGTH_SHORT).show();
                        revenueChart.clear();
                        revenueChart.setNoDataText("РћС€РёР±РєР° Р·Р°РіСЂСѓР·РєРё РґР°РЅРЅС‹С…");
                        revenueChart.invalidate();
                    }
                });
    }

    /**
     * РћР±СЂР°Р±Р°С‚С‹РІР°РµС‚ РґР°РЅРЅС‹Рµ Рѕ Р·Р°РєР°Р·Р°С…. Р’С‹С‡РёСЃР»СЏРµС‚ РІС‹СЂСѓС‡РєСѓ РїРѕ РєР°Р¶РґРѕРјСѓ С‚РѕРІР°СЂСѓ Рё РѕР±РЅРѕРІР»СЏРµС‚ РіСЂР°С„РёРє
     * РґР»СЏ РїРµСЂРІРѕРіРѕ С‚РѕРІР°СЂР° РІ СЃРїРёСЃРєРµ РёР»Рё РІС‹Р±СЂР°РЅРЅРѕРіРѕ С‚РѕРІР°СЂР°.
     */
    private void processOrdersData(List<Order> orders) {
        if (!isAdded()) {
            return;
        }
        revenueChart.clear();
        revenueChart.setNoDataText("Р“СЂР°С„РёРє РІС‹РіСЂСѓР¶Р°РµС‚СЃСЏ...");
        revenueChart.invalidate();

        productRevenueMap.clear();
        for (Order order : orders) {
            List<Map<String, Object>> products = order.getProducts();
            if (products == null || products.isEmpty()) {
                continue;
            }
            Date orderDate = order.getOrderDate();
            if (orderDate == null) {
                continue;
            }
            for (Map<String, Object> product : products) {
                String productId = (String) product.get("productId");
                Object quantityObj = product.get("quantity");
                Object priceObj = product.get("price");
                if (productId == null || quantityObj == null || priceObj == null) {
                    continue;
                }
                if (!productIds.contains(productId)) {
                    continue;
                }
                long quantity = (quantityObj instanceof Long) ? (Long) quantityObj : Long.parseLong(quantityObj.toString());
                long price = (priceObj instanceof Long) ? (Long) priceObj : Long.parseLong(priceObj.toString());
                long revenue = quantity * price;
                productRevenueMap.putIfAbsent(productId, new ArrayList<>());
                productRevenueMap.get(productId).add(new ProductRevenue(orderDate, revenue));
            }
        }
        if (!productIds.isEmpty()) {
            updateChart(productIds.get(0));
        } else {
            updateChart(null);
        }
    }

    /**
     * РќР°СЃС‚СЂР°РёРІР°РµС‚ РІС‹РїР°РґР°СЋС‰РёР№ СЃРїРёСЃРѕРє С‚РѕРІР°СЂРѕРІ. Р—Р°РїРѕР»РЅСЏРµС‚ РµРіРѕ РЅР°Р·РІР°РЅРёСЏРјРё С‚РѕРІР°СЂРѕРІ Рё
     * СѓСЃС‚Р°РЅР°РІР»РёРІР°РµС‚ РѕР±СЂР°Р±РѕС‚С‡РёРє РІС‹Р±РѕСЂР° С‚РѕРІР°СЂР° РґР»СЏ РѕР±РЅРѕРІР»РµРЅРёСЏ РіСЂР°С„РёРєР°.
     */
    private void setupProductSpinner() {
        if (!isAdded()) {
            return;
        }
        List<String> spinnerItems = new ArrayList<>();
        if (productIds.isEmpty()) {
            spinnerItems.add("РќРµС‚");
            productSpinner.setEnabled(false);
            revenueChart.clear();
            revenueChart.setNoDataText("РќРµС‚ С‚РѕРІР°СЂРѕРІ РґР»СЏ РѕС‚РѕР±СЂР°Р¶РµРЅРёСЏ");
            revenueChart.invalidate();
        } else {
            for (String productId : productIds) {
                String productName = productIdToNameMap.get(productId);
                spinnerItems.add(productName != null ? productName : productId);
            }
            productSpinner.setEnabled(true);
        }

        ArrayAdapter<String> adapter = new ArrayAdapter<>(requireContext(),
                android.R.layout.simple_spinner_item, spinnerItems);
        adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
        productSpinner.setAdapter(adapter);

        productSpinner.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
            @Override
            public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                if (!isAdded()) {
                    return;
                }
                if (productIds.isEmpty()) {
                    updateChart(null);
                } else {
                    String selectedProductId = productIds.get(position);
                    updateChart(selectedProductId);
                }
            }

            @Override
            public void onNothingSelected(AdapterView<?> parent) {
            }
        });
    }

    /**
     * РћР±РЅРѕРІР»СЏРµС‚ РіСЂР°С„РёРє РІС‹СЂСѓС‡РєРё РґР»СЏ РІС‹Р±СЂР°РЅРЅРѕРіРѕ С‚РѕРІР°СЂР°. РћС‚РѕР±СЂР°Р¶Р°РµС‚ РґР°РЅРЅС‹Рµ Рѕ РІС‹СЂСѓС‡РєРµ
     * Р·Р° РїРѕСЃР»РµРґРЅРёРµ 14 РґРЅРµР№ РёР»Рё СЃРѕРѕР±С‰РµРЅРёРµ РѕР± РѕС‚СЃСѓС‚СЃС‚РІРёРё РґР°РЅРЅС‹С….
     */
    private void updateChart(String productId) {
        if (!isAdded()) {
            return;
        }

        if (productId == null) {
            revenueChart.clear();
            revenueChart.setNoDataText("РќРµС‚ С‚РѕРІР°СЂРѕРІ РґР»СЏ РѕС‚РѕР±СЂР°Р¶РµРЅРёСЏ");
            revenueChart.invalidate();
            return;
        }

        List<ProductRevenue> revenues = productRevenueMap.get(productId);
        if (revenues == null || revenues.isEmpty()) {
            revenueChart.clear();
            revenueChart.setNoDataText("Р—Р°РіСЂСѓР·РєР°");
            revenueChart.invalidate();

            Handler handler = new Handler(Looper.getMainLooper());
            Runnable timeoutRunnable = () -> {
                if (isAdded()) {
                    revenueChart.clear();
                    revenueChart.setNoDataText("РќРµС‚ РґР°РЅРЅС‹С… РґР»СЏ С‚РѕРІР°СЂР°");
                    revenueChart.invalidate();
                }
            };
            handler.postDelayed(timeoutRunnable, 10 * 1000);

            return;
        }

        List<Entry> entries = new ArrayList<>();
        Map<Integer, Long> dailyRevenue = new HashMap<>();
        Calendar calendar = Calendar.getInstance();
        calendar.add(Calendar.DAY_OF_YEAR, -14);
        Date startDate = calendar.getTime();
        int daysInPeriod = 14;

        for (int i = 0; i < daysInPeriod; i++) {
            dailyRevenue.put(i, 0L);
        }

        for (ProductRevenue revenue : revenues) {
            long diffInMillis = revenue.date.getTime() - startDate.getTime();
            int dayIndex = (int) (diffInMillis / (1000 * 60 * 60 * 24));
            if (dayIndex >= 0 && dayIndex < daysInPeriod) {
                dailyRevenue.put(dayIndex, dailyRevenue.get(dayIndex) + revenue.revenue);
            }
        }

        for (int i = 0; i < daysInPeriod; i++) {
            entries.add(new Entry(i, dailyRevenue.get(i)));
        }

        if (entries.isEmpty()) {
            revenueChart.clear();
            revenueChart.setNoDataText("Р—Р°РіСЂСѓР·РєР°");
            revenueChart.invalidate();

            Handler handler = new Handler(Looper.getMainLooper());
            Runnable timeoutRunnable = () -> {
                if (isAdded()) {
                    revenueChart.clear();
                    revenueChart.setNoDataText("РќРµС‚ РґР°РЅРЅС‹С… РґР»СЏ С‚РѕРІР°СЂР°");
                    revenueChart.invalidate();
                }
            };
            handler.postDelayed(timeoutRunnable, 10 * 1000);

            return;
        }

        LineDataSet dataSet = new LineDataSet(entries, "Р’С‹СЂСѓС‡РєР° (СЂСѓР±.)");
        dataSet.setColor(getResources().getColor(android.R.color.holo_blue_dark));
        dataSet.setValueTextSize(10f);
        dataSet.setDrawCircles(true);
        dataSet.setCircleColor(getResources().getColor(android.R.color.holo_blue_dark));
        dataSet.setLineWidth(2f);
        dataSet.setCircleRadius(4f);
        dataSet.setDrawValues(false);

        LineData lineData = new LineData(dataSet);
        revenueChart.setData(lineData);

        XAxis xAxis = revenueChart.getXAxis();
        xAxis.setPosition(XAxis.XAxisPosition.BOTTOM);
        xAxis.setGranularity(1f);
        xAxis.setLabelCount(daysInPeriod, true);
        xAxis.setValueFormatter(new IndexAxisValueFormatter() {
            @Override
            public String getFormattedValue(float value) {
                Calendar dateLabel = Calendar.getInstance();
                dateLabel.setTime(startDate);
                dateLabel.add(Calendar.DAY_OF_YEAR, (int) value);
                return new SimpleDateFormat("dd", Locale.getDefault()).format(dateLabel.getTime());
            }
        });

        revenueChart.getDescription().setEnabled(false);
        revenueChart.getAxisRight().setEnabled(false);
        revenueChart.getAxisLeft().setAxisMinimum(0f);
        revenueChart.setTouchEnabled(false);
        revenueChart.setDragEnabled(false);
        revenueChart.setScaleEnabled(false);
        revenueChart.setPinchZoom(false);
        revenueChart.invalidate();
    }

    /**
     * РћС‚РѕР±СЂР°Р¶Р°РµС‚ РІСЃРїР»С‹РІР°СЋС‰РµРµ РјРµРЅСЋ СЃ РґРµР№СЃС‚РІРёСЏРјРё РїСЂРѕРґР°РІС†Р°, С‚Р°РєРёРјРё РєР°Рє СЂРµРґР°РєС‚РёСЂРѕРІР°РЅРёРµ РїСЂРѕС„РёР»СЏ,
     * СЃРјРµРЅР° РїР°СЂРѕР»СЏ, СѓРґР°Р»РµРЅРёРµ Р°РєРєР°СѓРЅС‚Р° Рё РІС‹С…РѕРґ РёР· СЃРёСЃС‚РµРјС‹.
     */
    private void showSellerActionsMenu(View view) {
        PopupMenu popupMenu = new PopupMenu(requireContext(), view);
        popupMenu.getMenuInflater().inflate(R.menu.seller_profile_menu, popupMenu.getMenu());
        popupMenu.setOnMenuItemClickListener(item -> {
            if (item.getItemId() == R.id.action_edit_account) {
                showEditSellerDialog();
                return true;
            } else if (item.getItemId() == R.id.action_delete_account) {
                deleteSellerAccount();
                return true;
            } else if (item.getItemId() == R.id.action_logout) {
                logout();
                return true;
            } else if (item.getItemId() == R.id.action_change_password) {
                showConfirmPasswordDialog();
                return true;
            }
            return false;
        });
        popupMenu.show();
    }

    /**
     * РћС‚РѕР±СЂР°Р¶Р°РµС‚ РґРёР°Р»РѕРіРѕРІРѕРµ РѕРєРЅРѕ РґР»СЏ РїРѕРґС‚РІРµСЂР¶РґРµРЅРёСЏ СЃС‚Р°СЂРѕРіРѕ РїР°СЂРѕР»СЏ РїРµСЂРµРґ РµРіРѕ РёР·РјРµРЅРµРЅРёРµРј.
     * РџСЂРѕРІРµСЂСЏРµС‚ РІРІРµРґРµРЅРЅС‹Р№ РїР°СЂРѕР»СЊ Рё РѕС‚РєСЂС‹РІР°РµС‚ РґРёР°Р»РѕРі СЃРјРµРЅС‹ РїР°СЂРѕР»СЏ РїСЂРё СѓСЃРїРµС…Рµ.
     */
    private void showConfirmPasswordDialog() {
        View dialogView = LayoutInflater.from(requireContext()).inflate(R.layout.confirm_password_dialog, null);
        EditText etOldPassword = dialogView.findViewById(R.id.etOldPassword);
        Button btnConfirm = dialogView.findViewById(R.id.btnConfirm);
        Button btnForgotPassword = dialogView.findViewById(R.id.btnForgotPassword);
        Button btnCancel = dialogView.findViewById(R.id.cancelButton);
        btnForgotPassword.setVisibility(View.GONE);
        AlertDialog.Builder builder = new AlertDialog.Builder(requireContext());
        builder.setView(dialogView);
        AlertDialog dialog = builder.create();
        btnConfirm.setOnClickListener(v -> {
            String oldPassword = etOldPassword.getText().toString().trim();
            if (oldPassword.isEmpty()) {
                Toast.makeText(requireContext(), "Р’РІРµРґРёС‚Рµ СЃС‚Р°СЂС‹Р№ РїР°СЂРѕР»СЊ", Toast.LENGTH_SHORT).show();
                return;
            }
            db.collection("users").document(userDocumentId)
                    .get()
                    .addOnCompleteListener(task -> {
                        if (task.isSuccessful()) {
                            DocumentSnapshot document = task.getResult();
                            if (document.exists()) {
                                String currentPassword = document.getString("password");
                                if (currentPassword != null && currentPassword.equals(oldPassword)) {
                                    dialog.dismiss();
                                    showChangePasswordDialog();
                                } else {
                                    Toast.makeText(requireContext(), "РќРµРІРµСЂРЅС‹Р№ РїР°СЂРѕР»СЊ", Toast.LENGTH_SHORT).show();
                                    btnForgotPassword.setVisibility(View.VISIBLE);
                                }
                            } else {
                                Toast.makeText(requireContext(), "РџРѕР»СЊР·РѕРІР°С‚РµР»СЊ РЅРµ РЅР°Р№РґРµРЅ", Toast.LENGTH_SHORT).show();
                            }
                        } else {
                            Toast.makeText(requireContext(), "РћС€РёР±РєР° РїСЂРё РїСЂРѕРІРµСЂРєРµ РїР°СЂРѕР»СЏ", Toast.LENGTH_SHORT).show();
                        }
                    });
        });
        btnForgotPassword.setOnClickListener(v -> {
            dialog.dismiss();
            showForgotPasswordDialog(tvSellerLogin.getText().toString().replace("Р›РѕРіРёРЅ: ", ""));
        });
        btnCancel.setOnClickListener(v -> dialog.dismiss());
        dialog.show();
    }

    /**
     * РћС‚РѕР±СЂР°Р¶Р°РµС‚ РґРёР°Р»РѕРіРѕРІРѕРµ РѕРєРЅРѕ РґР»СЏ РІРѕСЃСЃС‚Р°РЅРѕРІР»РµРЅРёСЏ РїР°СЂРѕР»СЏ. РћС‚РїСЂР°РІР»СЏРµС‚ РєРѕРґ РЅР° email РїСЂРѕРґР°РІС†Р°
     * Рё РїРѕР·РІРѕР»СЏРµС‚ РІРІРµСЃС‚Рё РєРѕРґ РґР»СЏ СЃРјРµРЅС‹ РїР°СЂРѕР»СЏ.
     */
    private void showForgotPasswordDialog(String email) {
        AlertDialog.Builder builder = new AlertDialog.Builder(requireContext());
        View view = LayoutInflater.from(requireContext()).inflate(R.layout.password_recovery, null);
        builder.setView(view);
        EditText emailField = view.findViewById(R.id.loginField);
        EditText codeField = view.findViewById(R.id.codeField);
        Button sendCodeButton = view.findViewById(R.id.sendCodeButton);
        Button changePasswordButton = view.findViewById(R.id.changePasswordButton);
        emailField.setText(email);
        emailField.setEnabled(false);
        changePasswordButton.setEnabled(false);
        changePasswordButton.setAlpha(0.5f);
        AlertDialog dialog = builder.create();
        String[] generatedCode = {null};
        sendCodeButton.setOnClickListener(v -> {
            String enteredEmail = emailField.getText().toString().trim();
            if (enteredEmail.isEmpty()) {
                Toast.makeText(requireContext(), "Р’РІРµРґРёС‚Рµ email", Toast.LENGTH_SHORT).show();
            } else {
                db.collection("users")
                        .whereEqualTo("email", enteredEmail)
                        .whereEqualTo("role", "seller")
                        .get()
                        .addOnSuccessListener(queryDocumentSnapshots -> {
                            if (!queryDocumentSnapshots.isEmpty()) {
                                generatedCode[0] = generateVerificationCode();
                                sendPasswordRecoveryEmail(enteredEmail, generatedCode[0]);
                                changePasswordButton.setEnabled(true);
                                changePasswordButton.setAlpha(1.0f);
                            } else {
                                Toast.makeText(requireContext(), "РџРѕР»СЊР·РѕРІР°С‚РµР»СЊ РЅРµ РЅР°Р№РґРµРЅ РёР»Рё РЅРµ СЏРІР»СЏРµС‚СЃСЏ РїСЂРѕРґР°РІС†РѕРј", Toast.LENGTH_SHORT).show();
                            }
                        })
                        .addOnFailureListener(e -> {
                            Toast.makeText(requireContext(), "РћС€РёР±РєР° РїСЂРё РїСЂРѕРІРµСЂРєРµ email: " + e.getMessage(), Toast.LENGTH_SHORT).show();
                        });
            }
        });
        changePasswordButton.setOnClickListener(v -> {
            String enteredCode = codeField.getText().toString().trim();
            if (enteredCode.isEmpty()) {
                Toast.makeText(requireContext(), "Р’РІРµРґРёС‚Рµ РєРѕРґ", Toast.LENGTH_SHORT).show();
            } else if (generatedCode[0] == null) {
                Toast.makeText(requireContext(), "РЎРЅР°С‡Р°Р»Р° РѕС‚РїСЂР°РІСЊС‚Рµ РєРѕРґ", Toast.LENGTH_SHORT).show();
            } else if (!enteredCode.equals(generatedCode[0])) {
                Toast.makeText(requireContext(), "РќРµРІРµСЂРЅС‹Р№ РєРѕРґ", Toast.LENGTH_SHORT).show();
            } else {
                dialog.dismiss();
                showChangePasswordDialog();
            }
        });
        dialog.show();
    }

    /**
     * Р“РµРЅРµСЂРёСЂСѓРµС‚ СЃР»СѓС‡Р°Р№РЅС‹Р№ РїСЏС‚РёР·РЅР°С‡РЅС‹Р№ РєРѕРґ РґР»СЏ РІРѕСЃСЃС‚Р°РЅРѕРІР»РµРЅРёСЏ РїР°СЂРѕР»СЏ.
     */
    private String generateVerificationCode() {
        Random random = new Random();
        int code = 10000 + random.nextInt(90000);
        return String.valueOf(code);
    }

    /**
     * РћС‚РїСЂР°РІР»СЏРµС‚ email СЃ РєРѕРґРѕРј РґР»СЏ РІРѕСЃСЃС‚Р°РЅРѕРІР»РµРЅРёСЏ РїР°СЂРѕР»СЏ. Р¤РѕСЂРјРёСЂСѓРµС‚ HTML-СЃРѕРѕР±С‰РµРЅРёРµ СЃ РєРѕРґРѕРј
     * Рё РѕС‚РїСЂР°РІР»СЏРµС‚ РµРіРѕ С‡РµСЂРµР· SendEmailTask.
     */
    private void sendPasswordRecoveryEmail(String email, String code) {
        String subject = "Р’РѕСЃСЃС‚Р°РЅРѕРІР»РµРЅРёРµ РїР°СЂРѕР»СЏ Ozon";
        String body = "<!DOCTYPE html>" +
                "<html lang='ru'>" +
                "<head>" +
                "<meta charset='UTF-8'>" +
                "<meta name='viewport' content='width=device-width, initial-scale=1.0'>" +
                "<title>Р’РѕСЃСЃС‚Р°РЅРѕРІР»РµРЅРёРµ РїР°СЂРѕР»СЏ</title>" +
                "</head>" +
                "<body style='margin: 0; padding: 0; font-family: Arial, sans-serif; background-color: #f4f4f4;'>" +
                "<table role='presentation' cellpadding='0' cellspacing='0' style='width: 100%; max-width: 600px; margin: 20px auto; background-color: #ffffff; border-radius: 8px; box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);'>" +
                "<tr>" +
                "<td style='background-color: #005BFF; padding: 20px; text-align: center; border-top-left-radius: 8px; border-top-right-radius: 8px;'>" +
                "<h1 style='color: #ffffff; margin: 0; font-size: 24px;'>Ozon</h1>" +
                "<h2 style='color: #ffffff; margin: 5px 0 0; font-size: 18px;'>Р’РѕСЃСЃС‚Р°РЅРѕРІР»РµРЅРёРµ РїР°СЂРѕР»СЏ</h2>" +
                "</td>" +
                "</tr>" +
                "<tr>" +
                "<td style='padding: 30px; text-align: center;'>" +
                "<h3 style='color: #001A34; font-size: 20px; margin: 0 0 10px;'>Р’Р°С€ РєРѕРґ РґР»СЏ РІРѕСЃСЃС‚Р°РЅРѕРІР»РµРЅРёСЏ РїР°СЂРѕР»СЏ</h3>" +
                "<p style='color: #666666; font-size: 16px; margin: 0 0 20px;'>РСЃРїРѕР»СЊР·СѓР№С‚Рµ СЌС‚РѕС‚ РєРѕРґ РґР»СЏ СЃР±СЂРѕСЃР° РїР°СЂРѕР»СЏ РІ РїСЂРёР»РѕР¶РµРЅРёРё Ozon:</p>" +
                "<div style='background-color: #E6F0FF; padding: 15px; border-radius: 5px; display: inline-block;'>" +
                "<span style='font-size: 24px; font-weight: bold; color: #005BFF; letter-spacing: 2px;'>" + code + "</span>" +
                "</div>" +
                "<p style='color: #666666; font-size: 14px; margin: 20px 0 0;'>РљРѕРґ РґРµР№СЃС‚РІРёС‚РµР»РµРЅ РІ С‚РµС‡РµРЅРёРµ 10 РјРёРЅСѓС‚.</p>" +
                "</td>" +
                "</tr>" +
                "<tr>" +
                "<td style='padding: 20px; text-align: center; background-color: #f9f9f9; border-bottom-left-radius: 8px; border-bottom-right-radius: 8px;'>" +
                "<p style='color: #999999; font-size: 12px; margin: 0;'>Р•СЃР»Рё РІС‹ РЅРµ Р·Р°РїСЂР°С€РёРІР°Р»Рё РІРѕСЃСЃС‚Р°РЅРѕРІР»РµРЅРёРµ РїР°СЂРѕР»СЏ, РїСЂРѕРёРіРЅРѕСЂРёСЂСѓР№С‚Рµ СЌС‚Рѕ СЃРѕРѕР±С‰РµРЅРёРµ.</p>" +
                "<p style='color: #999999; font-size: 12px; margin: 5px 0 0;'>РЎРІСЏР¶РёС‚РµСЃСЊ СЃ РЅР°РјРё: <a href='mailto:support@ozon.ru' style='color: #005BFF; text-decoration: none;'>support@ozon.ru</a></p>" +
                "</td>" +
                "</tr>" +
                "</table>" +
                "</body>" +
                "</html>";
        new SendEmailTask(requireContext(), email, subject, body, true).execute();
    }

    /**
     * РћС‚РѕР±СЂР°Р¶Р°РµС‚ РґРёР°Р»РѕРіРѕРІРѕРµ РѕРєРЅРѕ РґР»СЏ СЃРјРµРЅС‹ РїР°СЂРѕР»СЏ. РџРѕР·РІРѕР»СЏРµС‚ РїСЂРѕРґР°РІС†Сѓ РІРІРµСЃС‚Рё РЅРѕРІС‹Р№ РїР°СЂРѕР»СЊ
     * Рё РїРѕРґС‚РІРµСЂРґРёС‚СЊ РµРіРѕ.
     */
    private void showChangePasswordDialog() {
        View dialogView = LayoutInflater.from(requireContext()).inflate(R.layout.change_password_layout, null);
        EditText newPasswordField = dialogView.findViewById(R.id.newPasswordField);
        EditText confirmPasswordField = dialogView.findViewById(R.id.confirmPasswordField);
        Button btnSave = dialogView.findViewById(R.id.savePasswordButton);
        AlertDialog.Builder builder = new AlertDialog.Builder(requireContext());
        builder.setView(dialogView);
        AlertDialog dialog = builder.create();
        btnSave.setOnClickListener(v -> {
            String newPassword = newPasswordField.getText().toString().trim();
            String confirmPassword = confirmPasswordField.getText().toString().trim();
            if (validateNewPassword(newPassword, confirmPassword)) {
                updatePassword(newPassword);
                dialog.dismiss();
            }
        });
        dialog.show();
    }

    /**
     * РџСЂРѕРІРµСЂСЏРµС‚ РєРѕСЂСЂРµРєС‚РЅРѕСЃС‚СЊ РЅРѕРІРѕРіРѕ РїР°СЂРѕР»СЏ. РЈР±РµР¶РґР°РµС‚СЃСЏ, С‡С‚Рѕ РїР°СЂРѕР»СЊ СЃРѕРѕС‚РІРµС‚СЃС‚РІСѓРµС‚ С‚СЂРµР±РѕРІР°РЅРёСЏРј
     * РїРѕ РґР»РёРЅРµ, РЅР°Р»РёС‡РёСЋ Р·Р°РіР»Р°РІРЅС‹С… Рё СЃС‚СЂРѕС‡РЅС‹С… Р±СѓРєРІ, С†РёС„СЂ Рё СЃРїРµС†РёР°Р»СЊРЅС‹С… СЃРёРјРІРѕР»РѕРІ.
     */
    private boolean validateNewPassword(String newPassword, String confirmPassword) {
        if (newPassword.isEmpty() || confirmPassword.isEmpty()) {
            Toast.makeText(requireContext(), "Р—Р°РїРѕР»РЅРёС‚Рµ РІСЃРµ РїРѕР»СЏ", Toast.LENGTH_SHORT).show();
            return false;
        }
        if (!newPassword.equals(confirmPassword)) {
            Toast.makeText(requireContext(), "РџР°СЂРѕР»Рё РЅРµ СЃРѕРІРїР°РґР°СЋС‚", Toast.LENGTH_SHORT).show();
            return false;
        }
        if (newPassword.length() < 7) {
            Toast.makeText(requireContext(), "РџР°СЂРѕР»СЊ РґРѕР»Р¶РµРЅ СЃРѕРґРµСЂР¶Р°С‚СЊ РјРёРЅРёРјСѓРј 7 СЃРёРјРІРѕР»РѕРІ", Toast.LENGTH_SHORT).show();
            return false;
        }
        if (!Pattern.compile("[A-Z]").matcher(newPassword).find()) {
            Toast.makeText(requireContext(), "РџР°СЂРѕР»СЊ РґРѕР»Р¶РµРЅ СЃРѕРґРµСЂР¶Р°С‚СЊ С…РѕС‚СЏ Р±С‹ РѕРґРЅСѓ Р·Р°РіР»Р°РІРЅСѓСЋ Р±СѓРєРІСѓ", Toast.LENGTH_SHORT).show();
            return false;
        }
        if (!Pattern.compile("[a-z]").matcher(newPassword).find()) {
            Toast.makeText(requireContext(), "РџР°СЂРѕР»СЊ РґРѕР»Р¶РµРЅ СЃРѕРґРµСЂР¶Р°С‚СЊ С…РѕС‚СЏ Р±С‹ РѕРґРЅСѓ СЃС‚СЂРѕС‡РЅСѓСЋ Р±СѓРєРІСѓ", Toast.LENGTH_SHORT).show();
            return false;
        }
        if (!Pattern.compile("[0-9]").matcher(newPassword).find()) {
            Toast.makeText(requireContext(), "РџР°СЂРѕР»СЊ РґРѕР»Р¶РµРЅ СЃРѕРґРµСЂР¶Р°С‚СЊ С…РѕС‚СЏ Р±С‹ РѕРґРЅСѓ С†РёС„СЂСѓ", Toast.LENGTH_SHORT).show();
            return false;
        }
        if (!SPECIAL_CHAR_PATTERN.matcher(newPassword).find()) {
            Toast.makeText(requireContext(), "РџР°СЂРѕР»СЊ РґРѕР»Р¶РµРЅ СЃРѕРґРµСЂР¶Р°С‚СЊ С…РѕС‚СЏ Р±С‹ РѕРґРёРЅ СЃРїРµС†РёР°Р»СЊРЅС‹Р№ СЃРёРјРІРѕР» (!@#$%^&*(),.?\":{}|<>)", Toast.LENGTH_SHORT).show();
            return false;
        }
        return true;
    }

    /**
     * РћР±РЅРѕРІР»СЏРµС‚ РїР°СЂРѕР»СЊ РїСЂРѕРґР°РІС†Р° РІ Firebase Firestore. РЎРѕС…СЂР°РЅСЏРµС‚ РЅРѕРІС‹Р№ РїР°СЂРѕР»СЊ.
     */
    private void updatePassword(String newPassword) {
        if (!isAdded() || userDocumentId == null) {
            Toast.makeText(requireContext(), "РћС€РёР±РєР°: ID РїРѕР»СЊР·РѕРІР°С‚РµР»СЏ РЅРµ РЅР°Р№РґРµРЅ", Toast.LENGTH_SHORT).show();
            return;
        }
        db.collection("users").document(userDocumentId)
                .update("password", newPassword)
                .addOnSuccessListener(aVoid -> {
                    Toast.makeText(requireContext(), "РџР°СЂРѕР»СЊ СѓСЃРїРµС€РЅРѕ РёР·РјРµРЅРµРЅ", Toast.LENGTH_SHORT).show();
                })
                .addOnFailureListener(e -> {
                    Toast.makeText(requireContext(), "РћС€РёР±РєР° РїСЂРё РёР·РјРµРЅРµРЅРёРё РїР°СЂРѕР»СЏ: " + e.getMessage(), Toast.LENGTH_SHORT).show();
                });
    }

    /**
     * РћС‚РѕР±СЂР°Р¶Р°РµС‚ РґРёР°Р»РѕРіРѕРІРѕРµ РѕРєРЅРѕ РґР»СЏ СЂРµРґР°РєС‚РёСЂРѕРІР°РЅРёСЏ РґР°РЅРЅС‹С… РїСЂРѕРґР°РІС†Р°. РџРѕР·РІРѕР»СЏРµС‚ РёР·РјРµРЅРёС‚СЊ
     * Р¤РРћ, РЅР°Р·РІР°РЅРёРµ РјР°РіР°Р·РёРЅР°, РћР“Р РќРРџ Рё РРќРќ.
     */
    private void showEditSellerDialog() {
        View dialogView = LayoutInflater.from(requireContext()).inflate(R.layout.edit_sellet_profile_layout, null);
        EditText etEditLastName = dialogView.findViewById(R.id.etEditLastName);
        EditText etEditFirstName = dialogView.findViewById(R.id.etEditFirstName);
        EditText etEditMiddleName = dialogView.findViewById(R.id.etEditMiddleName);
        EditText etEditStoreName = dialogView.findViewById(R.id.etEditStoreName);
        EditText etEditOGRNIP = dialogView.findViewById(R.id.etEditOGRNIP);
        EditText etEditINN = dialogView.findViewById(R.id.etEditINN);
        Button btnSave = dialogView.findViewById(R.id.btnSave);
        Button btnCancel = dialogView.findViewById(R.id.btnCancel);
        AlertDialog.Builder builder = new AlertDialog.Builder(requireContext());
        builder.setView(dialogView);
        AlertDialog dialog = builder.create();
        String[] fullNameParts = tvSellerName.getText().toString().split(" ");
        if (fullNameParts.length >= 1) {
            etEditLastName.setText(fullNameParts[0]);
        }
        if (fullNameParts.length >= 2) {
            etEditFirstName.setText(fullNameParts[1]);
        }
        if (fullNameParts.length >= 3) {
            etEditMiddleName.setText(fullNameParts[2]);
        } else {
            etEditMiddleName.setText("");
        }
        etEditStoreName.setText(tvSellerShop.getText().toString().replace("РњР°РіР°Р·РёРЅ: ", ""));
        etEditOGRNIP.setText(tvSellerOGRNIP.getText().toString().replace("РћР“Р РќРРџ: ", ""));
        etEditINN.setText(tvSellerINN.getText().toString().replace("РРќРќ: ", ""));
        btnSave.setOnClickListener(v -> {
            String newLastName = etEditLastName.getText().toString().trim();
            String newFirstName = etEditFirstName.getText().toString().trim();
            String newMiddleName = etEditMiddleName.getText().toString().trim();
            String newStoreName = etEditStoreName.getText().toString().trim();
            String newOGRNIP = etEditOGRNIP.getText().toString().trim();
            String newINN = etEditINN.getText().toString().trim();
            if (validateSellerInput(newLastName, newFirstName, newMiddleName, newStoreName, newOGRNIP, newINN)) {
                updateSellerData(newLastName, newFirstName, newMiddleName, newStoreName, newOGRNIP, newINN);
                dialog.dismiss();
            }
        });
        btnCancel.setOnClickListener(v -> dialog.dismiss());
        dialog.show();
    }

    /**
     * РџСЂРѕРІРµСЂСЏРµС‚ РєРѕСЂСЂРµРєС‚РЅРѕСЃС‚СЊ РІРІРµРґРµРЅРЅС‹С… РґР°РЅРЅС‹С… РґР»СЏ СЂРµРґР°РєС‚РёСЂРѕРІР°РЅРёСЏ РїСЂРѕС„РёР»СЏ РїСЂРѕРґР°РІС†Р°.
     * РЈР±РµР¶РґР°РµС‚СЃСЏ, С‡С‚Рѕ РІСЃРµ РїРѕР»СЏ Р·Р°РїРѕР»РЅРµРЅС‹ РїСЂР°РІРёР»СЊРЅРѕ, РІРєР»СЋС‡Р°СЏ С„РѕСЂРјР°С‚ РћР“Р РќРРџ Рё РРќРќ.
     */
    private boolean validateSellerInput(String lastName, String firstName, String middleName, String storeName, String ogrnip, String inn) {
        if (storeName.isEmpty()) {
            Toast.makeText(requireContext(), "РќР°РёРјРµРЅРѕРІР°РЅРёРµ РјР°РіР°Р·РёРЅР° РґРѕР»Р¶РЅРѕ СЃРѕРґРµСЂР¶Р°С‚СЊ С…РѕС‚СЏ Р±С‹ 1 СЃРёРјРІРѕР»", Toast.LENGTH_SHORT).show();
            return false;
        }
        if (lastName.length() < 2 || !lastName.matches("[a-zA-ZР°-СЏРђ-РЇ]+")) {
            Toast.makeText(requireContext(), "Р¤Р°РјРёР»РёСЏ РґРѕР»Р¶РЅР° СЃРѕРґРµСЂР¶Р°С‚СЊ РЅРµ РјРµРЅРµРµ 2 Р±СѓРєРІ Рё С‚РѕР»СЊРєРѕ Р±СѓРєРІС‹", Toast.LENGTH_SHORT).show();
            return false;
        }
        if (firstName.length() < 2 || !firstName.matches("[a-zA-ZР°-СЏРђ-РЇ]+")) {
            Toast.makeText(requireContext(), "РРјСЏ РґРѕР»Р¶РЅРѕ СЃРѕРґРµСЂР¶Р°С‚СЊ РЅРµ РјРµРЅРµРµ 2 Р±СѓРєРІ Рё С‚РѕР»СЊРєРѕ Р±СѓРєРІС‹", Toast.LENGTH_SHORT).show();
            return false;
        }
        if (!middleName.isEmpty() && (middleName.length() < 5 || !middleName.matches("[a-zA-ZР°-СЏРђ-РЇ]+"))) {
            Toast.makeText(requireContext(), "РћС‚С‡РµСЃС‚РІРѕ РґРѕР»Р¶РЅРѕ СЃРѕРґРµСЂР¶Р°С‚СЊ РЅРµ РјРµРЅРµРµ 5 Р±СѓРєРІ Рё С‚РѕР»СЊРєРѕ Р±СѓРєРІС‹", Toast.LENGTH_SHORT).show();
            return false;
        }
        if (!ogrnip.matches("\\d{15}")) {
            Toast.makeText(requireContext(), "РћР“Р РќРРџ РґРѕР»Р¶РµРЅ СЃРѕРґРµСЂР¶Р°С‚СЊ СЂРѕРІРЅРѕ 15 С†РёС„СЂ", Toast.LENGTH_SHORT).show();
            return false;
        }
        if (!inn.matches("\\d{10}")) {
            Toast.makeText(requireContext(), "РРќРќ РґРѕР»Р¶РµРЅ СЃРѕРґРµСЂР¶Р°С‚СЊ СЂРѕРІРЅРѕ 10 С†РёС„СЂ", Toast.LENGTH_SHORT).show();
            return false;
        }
        return true;
    }

    /**
     * РћР±РЅРѕРІР»СЏРµС‚ РґР°РЅРЅС‹Рµ РїСЂРѕРґР°РІС†Р° РІ Firebase Firestore. РЎРѕС…СЂР°РЅСЏРµС‚ РЅРѕРІС‹Рµ Р·РЅР°С‡РµРЅРёСЏ Р¤РРћ,
     * РЅР°Р·РІР°РЅРёСЏ РјР°РіР°Р·РёРЅР°, РћР“Р РќРРџ Рё РРќРќ, Р° Р·Р°С‚РµРј РѕР±РЅРѕРІР»СЏРµС‚ UI.
     */
    private void updateSellerData(String lastName, String firstName, String middleName, String storeName, String ogrnip, String inn) {
        if (!isAdded() || userDocumentId == null) {
            Toast.makeText(requireContext(), "РћС€РёР±РєР°: ID РїРѕР»СЊР·РѕРІР°С‚РµР»СЏ РЅРµ РЅР°Р№РґРµРЅ", Toast.LENGTH_SHORT).show();
            return;
        }
        Map<String, Object> updates = new HashMap<>();
        updates.put("lastName", lastName);
        updates.put("firstName", firstName);
        updates.put("middleName", middleName.isEmpty() ? null : middleName);
        updates.put("storeName", storeName);
        updates.put("ogrnip", ogrnip);
        updates.put("inn", inn);
        db.collection("users").document(userDocumentId)
                .update(updates)
                .addOnSuccessListener(aVoid -> {
                    Toast.makeText(requireContext(), "Р”Р°РЅРЅС‹Рµ СѓСЃРїРµС€РЅРѕ РѕР±РЅРѕРІР»РµРЅС‹", Toast.LENGTH_SHORT).show();
                    loadSellerData();
                })
                .addOnFailureListener(e -> {
                    Toast.makeText(requireContext(), "РћС€РёР±РєР° РїСЂРё РѕР±РЅРѕРІР»РµРЅРёРё РґР°РЅРЅС‹С…: " + e.getMessage(), Toast.LENGTH_SHORT).show();
                });
    }

    /**
     * РЈРґР°Р»СЏРµС‚ Р°РєРєР°СѓРЅС‚ РїСЂРѕРґР°РІС†Р°. РЎРЅР°С‡Р°Р»Р° СѓРґР°Р»СЏРµС‚ РІСЃРµ С‚РѕРІР°СЂС‹ РїСЂРѕРґР°РІС†Р°, Р·Р°С‚РµРј СѓРґР°Р»СЏРµС‚
     * СЃР°Рј Р°РєРєР°СѓРЅС‚ Рё РїРµСЂРµРЅР°РїСЂР°РІР»СЏРµС‚ РЅР° СЌРєСЂР°РЅ РІС…РѕРґР°.
     */
    private void deleteSellerAccount() {
        if (!isAdded() || userDocumentId == null) {
            Toast.makeText(requireContext(), "РћС€РёР±РєР°: ID РїРѕР»СЊР·РѕРІР°С‚РµР»СЏ РЅРµ РЅР°Р№РґРµРЅ", Toast.LENGTH_SHORT).show();
            return;
        }
        db.collection("products")
                .whereEqualTo("sellerId", userDocumentId)
                .get()
                .addOnSuccessListener(queryDocumentSnapshots -> {
                    if (!isAdded()) {
                        return;
                    }
                    if (queryDocumentSnapshots.isEmpty()) {
                        deleteUserAccount();
                        return;
                    }
                    for (QueryDocumentSnapshot document : queryDocumentSnapshots) {
                        String productId = document.getId();
                        db.collection("products").document(productId).delete();
                    }
                    deleteUserAccount();
                })
                .addOnFailureListener(e -> {
                    if (isAdded()) {
                        Toast.makeText(requireContext(), "РћС€РёР±РєР° РїСЂРё СѓРґР°Р»РµРЅРёРё С‚РѕРІР°СЂРѕРІ: " + e.getMessage(), Toast.LENGTH_SHORT).show();
                    }
                });
    }

    /**
     * РЈРґР°Р»СЏРµС‚ РґР°РЅРЅС‹Рµ РїРѕР»СЊР·РѕРІР°С‚РµР»СЏ РёР· Firebase Firestore. РћС‡РёС‰Р°РµС‚ SharedPreferences
     * Рё РїРµСЂРµРЅР°РїСЂР°РІР»СЏРµС‚ РЅР° СЌРєСЂР°РЅ РІС…РѕРґР°.
     */
    private void deleteUserAccount() {
        if (!isAdded()) {
            return;
        }
        db.collection("users").document(userDocumentId)
                .delete()
                .addOnSuccessListener(aVoid -> {
                    Toast.makeText(requireContext(), "РђРєРєР°СѓРЅС‚ СѓСЃРїРµС€РЅРѕ СѓРґР°Р»РµРЅ", Toast.LENGTH_SHORT).show();
                    SharedPreferences sharedPrefs = requireContext().getSharedPreferences("AppPrefs", requireContext().MODE_PRIVATE);
                    sharedPrefs.edit()
                            .putBoolean("isLoggedIn", false)
                            .remove("userId")
                            .remove("userRole")
                            .apply();
                    Intent intent = new Intent(requireContext(), MainActivity.class);
                    intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);
                    startActivity(intent);
                    if (getActivity() != null) {
                        getActivity().finish();
                    }
                })
                .addOnFailureListener(e -> {
                    Toast.makeText(requireContext(), "РћС€РёР±РєР° РїСЂРё СѓРґР°Р»РµРЅРёРё Р°РєРєР°СѓРЅС‚Р°: " + e.getMessage(), Toast.LENGTH_SHORT).show();
                });
    }

    /**
     * Р’С‹РїРѕР»РЅСЏРµС‚ РІС‹С…РѕРґ РїСЂРѕРґР°РІС†Р° РёР· СЃРёСЃС‚РµРјС‹. РћС‡РёС‰Р°РµС‚ SharedPreferences Рё РїРµСЂРµРЅР°РїСЂР°РІР»СЏРµС‚
     * РЅР° СЌРєСЂР°РЅ Р°РІС‚РѕСЂРёР·Р°С†РёРё РїСЂРѕРґР°РІС†Р°.
     */
    private void logout() {
        if (!isAdded()) {
            return;
        }
        SharedPreferences sharedPrefs = requireContext().getSharedPreferences("AppPrefs", requireContext().MODE_PRIVATE);
        sharedPrefs.edit()
                .putBoolean("isLoggedIn", false)
                .remove("userId")
                .remove("userRole")
                .apply();
        Toast.makeText(requireContext(), "Р’С‹С…РѕРґ РёР· Р°РєРєР°СѓРЅС‚Р° РІС‹РїРѕР»РЅРµРЅ", Toast.LENGTH_SHORT).show();
        Intent intent = new Intent(requireContext(), AutorizationForSellerActivity.class);
        intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);
        startActivity(intent);
        if (getActivity() != null) {
            getActivity().finish();
        }
    }

    /**
     * Р’РЅСѓС‚СЂРµРЅРЅРёР№ РєР»Р°СЃСЃ ProductRevenue РїСЂРµРґСЃС‚Р°РІР»СЏРµС‚ РґР°РЅРЅС‹Рµ Рѕ РІС‹СЂСѓС‡РєРµ РїРѕ С‚РѕРІР°СЂСѓ Р·Р° РѕРїСЂРµРґРµР»РµРЅРЅСѓСЋ РґР°С‚Сѓ.
     */
    private static class ProductRevenue {
        Date date;
        long revenue;

        ProductRevenue(Date date, long revenue) {
            this.date = date;
            this.revenue = revenue;
        }
    }

    /**
     * Р’РЅСѓС‚СЂРµРЅРЅРёР№ РєР»Р°СЃСЃ Order РїСЂРµРґСЃС‚Р°РІР»СЏРµС‚ Р·Р°РєР°Р· СЃ РµРіРѕ РёРґРµРЅС‚РёС„РёРєР°С‚РѕСЂРѕРј, РґР°С‚РѕР№ Рё СЃРїРёСЃРєРѕРј С‚РѕРІР°СЂРѕРІ.
     */
    private static class Order {
        private String id;
        private Date orderDate;
        private List<Map<String, Object>> products;

        public String getId() {
            return id;
        }

        public void setId(String id) {
            this.id = id;
        }

        public Date getOrderDate() {
            return orderDate;
        }

        public void setOrderDate(Date orderDate) {
            this.orderDate = orderDate;
        }

        public List<Map<String, Object>> getProducts() {
            return products;
        }

        public void setProducts(List<Map<String, Object>> products) {
            this.products = products;
        }
    }
}

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\java\com\example\ozon\SendEmailTask.java
package com.example.ozon;

import android.content.Context;
import android.os.AsyncTask;
import android.widget.Toast;

/**
 * РљР»Р°СЃСЃ SendEmailTask РїСЂРµРґСЃС‚Р°РІР»СЏРµС‚ СЃРѕР±РѕР№ Р°СЃРёРЅС…СЂРѕРЅРЅСѓСЋ Р·Р°РґР°С‡Сѓ РґР»СЏ РѕС‚РїСЂР°РІРєРё email-СЃРѕРѕР±С‰РµРЅРёР№
 * РІ РїСЂРёР»РѕР¶РµРЅРёРё "OZON". РСЃРїРѕР»СЊР·СѓРµС‚ MailSender РґР»СЏ РѕС‚РїСЂР°РІРєРё РїРёСЃРµРј
 * Рё СѓРІРµРґРѕРјР»СЏРµС‚ РїРѕР»СЊР·РѕРІР°С‚РµР»СЏ РѕР± СѓСЃРїРµС…Рµ РёР»Рё РЅРµСѓРґР°С‡Рµ.
 */
public class SendEmailTask extends AsyncTask<Void, Void, Boolean> {
    private String recipient;
    private String subject;
    private String body;
    private Context context;
    private boolean isHtml;

    /**
     * РљРѕРЅСЃС‚СЂСѓРєС‚РѕСЂ РєР»Р°СЃСЃР° SendEmailTask. РРЅРёС†РёР°Р»РёР·РёСЂСѓРµС‚ Р·Р°РґР°С‡Сѓ СЃ РїР°СЂР°РјРµС‚СЂР°РјРё РґР»СЏ РѕС‚РїСЂР°РІРєРё email.
     */
    public SendEmailTask(Context context, String recipient, String subject, String body, boolean isHtml) {
        this.context = context;
        this.recipient = recipient;
        this.subject = subject;
        this.body = body;
        this.isHtml = isHtml;
    }

    /**
     * Р’С‹РїРѕР»РЅСЏРµС‚ РѕС‚РїСЂР°РІРєСѓ email РІ С„РѕРЅРѕРІРѕРј РїРѕС‚РѕРєРµ. РСЃРїРѕР»СЊР·СѓРµС‚ MailSender РґР»СЏ РѕС‚РїСЂР°РІРєРё РїРёСЃСЊРјР°
     * Рё РІРѕР·РІСЂР°С‰Р°РµС‚ СЂРµР·СѓР»СЊС‚Р°С‚ РѕРїРµСЂР°С†РёРё.
     */
    @Override
    protected Boolean doInBackground(Void... voids) {
        try {
            MailSender.sendEmail(recipient, subject, body, isHtml);
            return true;
        } catch (Exception e) {
            return false;
        }
    }

    /**
     * РћР±СЂР°Р±Р°С‚С‹РІР°РµС‚ СЂРµР·СѓР»СЊС‚Р°С‚ РѕС‚РїСЂР°РІРєРё email. РџРѕРєР°Р·С‹РІР°РµС‚ СѓРІРµРґРѕРјР»РµРЅРёРµ РѕР± РѕС€РёР±РєРµ,
     * РµСЃР»Рё РѕС‚РїСЂР°РІРєР° РЅРµ СѓРґР°Р»Р°СЃСЊ.
     */
    @Override
    protected void onPostExecute(Boolean success) {
        super.onPostExecute(success);
        if (success) {
        } else {
            Toast.makeText(context, "РћС€РёР±РєР° РїСЂРё РѕС‚РїСЂР°РІРєРµ РїРёСЃСЊРјР°", Toast.LENGTH_SHORT).show();
        }
    }
}

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\res\color\switch_track_selector.xml
<?xml version="1.0" encoding="utf-8"?>
<selector xmlns:android="http://schemas.android.com/apk/res/android">
    <item android:state_checked="true" android:color="#005BFF"/>
    <item android:state_checked="false" android:color="#E6F0FF"/>
</selector>

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\res\drawable\bg_recycler_view.xml
<shape xmlns:android="http://schemas.android.com/apk/res/android"
    android:shape="rectangle">
    <corners android:radius="12dp" />
    <solid android:color="#FFFFFF" />
    <stroke android:width="1dp" android:color="#F5F5F5" />
</shape>

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\res\drawable\bg_rounded_dialog.xml
<shape xmlns:android="http://schemas.android.com/apk/res/android"
    android:shape="rectangle">
    <corners android:radius="16dp"/>
    <solid android:color="@android:color/white"/>
    <stroke
        android:width="1dp"
        android:color="#E6E6FA"/>
</shape>

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\res\drawable\button_background.xml
<?xml version="1.0" encoding="utf-8"?>
<selector xmlns:android="http://schemas.android.com/apk/res/android">

</selector>

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\res\drawable\card_background.xml
<?xml version="1.0" encoding="utf-8"?>
<shape xmlns:android="http://schemas.android.com/apk/res/android">
    <solid android:color="#FFFFFF" />
    <corners android:radius="8dp" />
    <stroke
        android:width="1dp"
        android:color="#E0E0E0" />
</shape>

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\res\drawable\card_background_shadow.xml
<shape xmlns:android="http://schemas.android.com/apk/res/android">
    <solid android:color="#FFFFFF"/>
    <corners android:radius="12dp"/>
</shape>

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\res\drawable\divider_item_decoration.xml
<shape xmlns:android="http://schemas.android.com/apk/res/android"
    android:shape="rectangle">
    <size android:height="1dp" />
    <solid android:color="#E0E0E0" />
    <padding android:left="16dp" android:right="16dp"/>
</shape>

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\res\drawable\gradient_text.xml
<?xml version="1.0" encoding="utf-8"?>
<selector xmlns:android="http://schemas.android.com/apk/res/android">
    <item>
        <shape android:shape="rectangle">
            <gradient
                android:startColor="#2B67FF"
                android:endColor="#EC407A"
                android:angle="45" />
        </shape>
    </item>
</selector>

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\res\drawable\gray_border.xml
<?xml version="1.0" encoding="utf-8"?>
<shape xmlns:android="http://schemas.android.com/apk/res/android"
    android:shape="rectangle">
    <stroke
        android:width="1dp"
        android:color="#BACBD3FF" />
    <corners
        android:radius="4dp" />
</shape>

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\res\drawable\ic_address.xml
<!-- res/drawable/ic_address.xml -->
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="24dp"
    android:height="24dp"
    android:viewportWidth="24"
    android:viewportHeight="24">
    <path
        android:fillColor="#000000"
        android:pathData="M12,2C8.13,2 5,5.13 5,9c0,5.25 7,13 7,13s7,-7.75 7,-13c0,-3.87 -3.13,-7 -7,-7zM12,11.5c-1.38,0 -2.5,-1.12 -2.5,-2.5s1.12,-2.5 2.5,-2.5 2.5,1.12 2.5,2.5 -1.12,2.5 -2.5,2.5z"/>
</vector>

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\res\drawable\ic_add_product.xml
<!-- res/drawable/ic_add_product.xml -->
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="24dp"
    android:height="24dp"
    android:viewportWidth="24"
    android:viewportHeight="24">
    <path
        android:fillColor="#000000"
        android:pathData="M19,13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z"/>
</vector>

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\res\drawable\ic_bag.xml
<?xml version="1.0" encoding="utf-8"?>
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="24dp"
    android:height="24dp"
    android:viewportWidth="24"
    android:viewportHeight="24">
    <path
        android:fillColor="#EC407A"
        android:pathData="M20,6h-1.5c0,-2.21 -1.79,-4 -4,-4h-5c-2.21,0 -4,1.79 -4,4H4v14c0,1.1 0.9,2 2,2h12c1.1,0 2,-0.9 2,-2V6zM7.5,6c0,-1.1 0.9,-2 2,-2h5c1.1,0 2,0.9 2,2H7.5zM18,20H6V8h12v12z" />
    <path
        android:fillColor="#EC407A"
        android:pathData="M9,10h6v2H9z" />
</vector>

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\res\drawable\ic_box.xml
<?xml version="1.0" encoding="utf-8"?>
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="24dp"
    android:height="24dp"
    android:viewportWidth="24"
    android:viewportHeight="24">
    <path
        android:fillColor="#EC407A"
        android:pathData="M20,6H4L2,10v10c0,1.1 0.9,2 2,2h16c1.1,0 2,-0.9 2,-2V10l-2,-4zM4.8,8h14.4l1.2,2H3.6L4.8,8zM20,20H4V12h16v8z" />
    <path
        android:fillColor="#EC407A"
        android:pathData="M10,14h4v4h-4z" />
</vector>

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\res\drawable\ic_calendar.xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="24dp"
    android:height="24dp"
    android:viewportWidth="24"
    android:viewportHeight="24"
    android:tint="#005BFF">
    <path
        android:fillColor="@android:color/white"
        android:pathData="M19,3h-1V1h-2v2H8V1H6v2H5c-1.11,0 -2,0.9 -2,2v14c0,1.1 0.89,2 2,2h14c1.1,0 2,-0.9 2,-2V5c0,-1.1 -0.9,-2 -2,-2zm0,16H5V8h14v11zM9,10H7v2h2v-2zm4,0h-2v2h2v-2zm4,0h-2v2h2v-2z"/>
</vector>

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\res\drawable\ic_cart.xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="24dp"
    android:height="24dp"
    android:viewportWidth="24"
    android:viewportHeight="24"
    android:tint="#EC407A">
    <path
        android:fillColor="@android:color/white"
        android:pathData="M7 18c-1.1 0-1.99.9-1.99 2S5.9 22 7 22s2-.9 2-2-.9-2-2-2zM1 2v2h2l3.6 7.59-1.35 2.45c-.16.28-.25.61-.25.96 0 1.1.9 2 2 2h12v-2H7.42c-.14 0-.25-.11-.25-.25l.03-.12.9-1.63h7.45c.75 0 1.41-.41 1.75-1.03l3.58-6.49c.08-.14.12-.31.12-.48 0-.55-.45-1-1-1H5.21l-.94-2H1zm16 16c-1.1 0-1.99.9-1.99 2s.89 2 1.99 2 2-.9 2-2-.9-2-2-2z"/>
</vector>

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\res\drawable\ic_category.xml
<!-- res/drawable/ic_category.xml -->
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="24dp"
    android:height="24dp"
    android:viewportWidth="24"
    android:viewportHeight="24">
    <path
        android:fillColor="#000000"
        android:pathData="M3,3h8v8H3V3zm10,0h8v8h-8V3zM3,13h8v8H3v-8zm10,0h8v8h-8v-8z"/>
</vector>

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\res\drawable\ic_check.xml
<?xml version="1.0" encoding="utf-8"?>
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="24dp"
    android:height="24dp"
    android:viewportWidth="24"
    android:viewportHeight="24">
    <!-- Р“Р°Р»РѕС‡РєР° -->
    <path
        android:strokeColor="#FFFFFF"
        android:strokeWidth="2"
        android:fillColor="#00000000"
        android:pathData="M6,12l4,4l8,-8" />
</vector>

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\res\drawable\ic_code.xml
<!-- res/drawable/ic_code_stars.xml -->
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="25dp"
    android:height="25dp"
    android:viewportWidth="24"
    android:viewportHeight="24">
    <path
        android:fillColor="#000000"
        android:pathData="M6,12l1.5,1.5L9,12l-1.5,-1.5L6,12zM12,12l1.5,1.5L15,12l-1.5,-1.5L12,12zM18,12l1.5,1.5L21,12l-1.5,-1.5L18,12z"/>
</vector>

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\res\drawable\ic_credit_card.xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="24dp"
    android:height="24dp"
    android:viewportWidth="24"
    android:viewportHeight="24"
    android:tint="#005BFF">
    <path
        android:fillColor="@android:color/white"
        android:pathData="M20,4H4C2.89,4 2.01,4.89 2.01,6L2,18c0,1.11 0.89,2 2,2h16c1.11,0 2,-0.89 2,-2V6C22,4.89 21.11,4 20,4zM20,18H4v-6h16V18zM20,8H4V6h16V8z"/>
</vector>

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\res\drawable\ic_delete.xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="24dp"
    android:height="24dp"
    android:viewportWidth="24"
    android:viewportHeight="24"
    android:tint="#FFFFFF">
    <path
        android:fillColor="@android:color/white"
        android:pathData="M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z"/>
</vector>

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\res\drawable\ic_delivery.xml
<!-- res/drawable/ic_delivery.xml -->
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="24dp"
    android:height="24dp"
    android:viewportWidth="24"
    android:viewportHeight="24">
    <path
        android:fillColor="#000000"
        android:pathData="M20,8h-3V4H3c-1.1,0 -2,0.9 -2,2v11h2c0,1.66 1.34,3 3,3s3,-1.34 3,-3h6c0,1.66 1.34,3 3,3s3,-1.34 3,-3h2v-5l-3,-4zM6,18.5c-0.83,0 -1.5,-0.67 -1.5,-1.5s0.67,-1.5 1.5,-1.5 1.5,0.67 1.5,1.5 -0.67,1.5 -1.5,1.5zM18,18.5c-0.83,0 -1.5,-0.67 -1.5,-1.5s0.67,-1.5 1.5,-1.5 1.5,0.67 1.5,1.5 -0.67,1.5 -1.5,1.5zM17,12l1.5,2H14V9h3v3z"/>
</vector>

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\res\drawable\ic_description.xml
<!-- res/drawable/ic_description.xml -->
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="24dp"
    android:height="24dp"
    android:viewportWidth="24"
    android:viewportHeight="24">
    <path
        android:fillColor="#000000"
        android:pathData="M14,2H6c-1.1,0 -2,0.9 -2,2v16c0,1.1 0.9,2 2,2h12c1.1,0 2,-0.9 2,-2V8l-6,-6zM13,9V3.5L18.5,9H13zM6,20V4h6v6h6v10H6z"/>
</vector>

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\res\drawable\ic_document.xml
<!-- res/drawable/ic_document.xml -->
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="24dp"
    android:height="24dp"
    android:viewportWidth="24"
    android:viewportHeight="24">
    <path
        android:fillColor="#000000"
        android:pathData="M14,2H6c-1.1,0 -2,0.9 -2,2v16c0,1.1 0.9,2 2,2h12c1.1,0 2,-0.9 2,-2V8l-6,-6zM13,9V3.5L18.5,9H13zM6,20V4h6v6h6v10H6z"/>
</vector>

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\res\drawable\ic_dropdown.xml
<!-- res/drawable/ic_dropdown.xml -->
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="24dp"
    android:height="24dp"
    android:viewportWidth="24"
    android:viewportHeight="24">
    <path
        android:fillColor="#000000"
        android:pathData="M7,10l5,5 5,-5z"/>
</vector>

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\res\drawable\ic_email.xml
<!-- res/drawable/ic_email.xml -->
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="20dp"
    android:height="20dp"
    android:viewportWidth="24"
    android:viewportHeight="24">
    <path
        android:fillColor="#000000"
        android:pathData="M20,4H4c-1.1,0 -1.99,0.9 -1.99,2L2,18c0,1.1 0.9,2 2,2h16c1.1,0 2,-0.9 2,-2V6c0,-1.1 -0.9,-2 -2,-2zM20,8l-8,5 -8,-5V6l8,5 8,-5v2z"/>
</vector>

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\res\drawable\ic_filter_alt.xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="40dp"
    android:height="40dp"
    android:viewportWidth="24"
    android:viewportHeight="24"
    android:tint="#005BFF">
    <path
        android:fillColor="@android:color/white"
        android:pathData="M10,18h4v-2h-4v2zM3,6v2h18V6H3z M6,13h12v-2H6v2z"/>
</vector>

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\res\drawable\ic_image.xml
<!-- res/drawable/ic_image.xml -->
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="24dp"
    android:height="24dp"
    android:viewportWidth="24"
    android:viewportHeight="24">
    <path
        android:fillColor="#000000"
        android:pathData="M21,19V5c0,-1.1 -0.9,-2 -2,-2H5c-1.1,0 -2,0.9 -2,2v14c0,1.1 0.9,2 2,2h14c1.1,0 2,-0.9 2,-2zM8.5,13.5l2.5,3.01L14.5,12l4.5,6H5l3.5,-4.5z"/>
</vector>

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\res\drawable\ic_info.xml
<!-- res/drawable/ic_info.xml -->
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="24dp"
    android:height="24dp"
    android:viewportWidth="24"
    android:viewportHeight="24">
    <path
        android:fillColor="#000000"
        android:pathData="M12,2C6.48,2 2,6.48 2,12s4.48,10 10,10 10,-4.48 10,-10S17.52,2 12,2zM13,17h-2v-6h2v6zM13,9h-2V7h2v2z"/>
</vector>

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\res\drawable\ic_launcher_background.xml
<?xml version="1.0" encoding="utf-8"?>
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="108dp"
    android:height="108dp"
    android:viewportWidth="108"
    android:viewportHeight="108">
    <path
        android:fillColor="#3DDC84"
        android:pathData="M0,0h108v108h-108z" />
    <path
        android:fillColor="#00000000"
        android:pathData="M9,0L9,108"
        android:strokeWidth="0.8"
        android:strokeColor="#33FFFFFF" />
    <path
        android:fillColor="#00000000"
        android:pathData="M19,0L19,108"
        android:strokeWidth="0.8"
        android:strokeColor="#33FFFFFF" />
    <path
        android:fillColor="#00000000"
        android:pathData="M29,0L29,108"
        android:strokeWidth="0.8"
        android:strokeColor="#33FFFFFF" />
    <path
        android:fillColor="#00000000"
        android:pathData="M39,0L39,108"
        android:strokeWidth="0.8"
        android:strokeColor="#33FFFFFF" />
    <path
        android:fillColor="#00000000"
        android:pathData="M49,0L49,108"
        android:strokeWidth="0.8"
        android:strokeColor="#33FFFFFF" />
    <path
        android:fillColor="#00000000"
        android:pathData="M59,0L59,108"
        android:strokeWidth="0.8"
        android:strokeColor="#33FFFFFF" />
    <path
        android:fillColor="#00000000"
        android:pathData="M69,0L69,108"
        android:strokeWidth="0.8"
        android:strokeColor="#33FFFFFF" />
    <path
        android:fillColor="#00000000"
        android:pathData="M79,0L79,108"
        android:strokeWidth="0.8"
        android:strokeColor="#33FFFFFF" />
    <path
        android:fillColor="#00000000"
        android:pathData="M89,0L89,108"
        android:strokeWidth="0.8"
        android:strokeColor="#33FFFFFF" />
    <path
        android:fillColor="#00000000"
        android:pathData="M99,0L99,108"
        android:strokeWidth="0.8"
        android:strokeColor="#33FFFFFF" />
    <path
        android:fillColor="#00000000"
        android:pathData="M0,9L108,9"
        android:strokeWidth="0.8"
        android:strokeColor="#33FFFFFF" />
    <path
        android:fillColor="#00000000"
        android:pathData="M0,19L108,19"
        android:strokeWidth="0.8"
        android:strokeColor="#33FFFFFF" />
    <path
        android:fillColor="#00000000"
        android:pathData="M0,29L108,29"
        android:strokeWidth="0.8"
        android:strokeColor="#33FFFFFF" />
    <path
        android:fillColor="#00000000"
        android:pathData="M0,39L108,39"
        android:strokeWidth="0.8"
        android:strokeColor="#33FFFFFF" />
    <path
        android:fillColor="#00000000"
        android:pathData="M0,49L108,49"
        android:strokeWidth="0.8"
        android:strokeColor="#33FFFFFF" />
    <path
        android:fillColor="#00000000"
        android:pathData="M0,59L108,59"
        android:strokeWidth="0.8"
        android:strokeColor="#33FFFFFF" />
    <path
        android:fillColor="#00000000"
        android:pathData="M0,69L108,69"
        android:strokeWidth="0.8"
        android:strokeColor="#33FFFFFF" />
    <path
        android:fillColor="#00000000"
        android:pathData="M0,79L108,79"
        android:strokeWidth="0.8"
        android:strokeColor="#33FFFFFF" />
    <path
        android:fillColor="#00000000"
        android:pathData="M0,89L108,89"
        android:strokeWidth="0.8"
        android:strokeColor="#33FFFFFF" />
    <path
        android:fillColor="#00000000"
        android:pathData="M0,99L108,99"
        android:strokeWidth="0.8"
        android:strokeColor="#33FFFFFF" />
    <path
        android:fillColor="#00000000"
        android:pathData="M19,29L89,29"
        android:strokeWidth="0.8"
        android:strokeColor="#33FFFFFF" />
    <path
        android:fillColor="#00000000"
        android:pathData="M19,39L89,39"
        android:strokeWidth="0.8"
        android:strokeColor="#33FFFFFF" />
    <path
        android:fillColor="#00000000"
        android:pathData="M19,49L89,49"
        android:strokeWidth="0.8"
        android:strokeColor="#33FFFFFF" />
    <path
        android:fillColor="#00000000"
        android:pathData="M19,59L89,59"
        android:strokeWidth="0.8"
        android:strokeColor="#33FFFFFF" />
    <path
        android:fillColor="#00000000"
        android:pathData="M19,69L89,69"
        android:strokeWidth="0.8"
        android:strokeColor="#33FFFFFF" />
    <path
        android:fillColor="#00000000"
        android:pathData="M19,79L89,79"
        android:strokeWidth="0.8"
        android:strokeColor="#33FFFFFF" />
    <path
        android:fillColor="#00000000"
        android:pathData="M29,19L29,89"
        android:strokeWidth="0.8"
        android:strokeColor="#33FFFFFF" />
    <path
        android:fillColor="#00000000"
        android:pathData="M39,19L39,89"
        android:strokeWidth="0.8"
        android:strokeColor="#33FFFFFF" />
    <path
        android:fillColor="#00000000"
        android:pathData="M49,19L49,89"
        android:strokeWidth="0.8"
        android:strokeColor="#33FFFFFF" />
    <path
        android:fillColor="#00000000"
        android:pathData="M59,19L59,89"
        android:strokeWidth="0.8"
        android:strokeColor="#33FFFFFF" />
    <path
        android:fillColor="#00000000"
        android:pathData="M69,19L69,89"
        android:strokeWidth="0.8"
        android:strokeColor="#33FFFFFF" />
    <path
        android:fillColor="#00000000"
        android:pathData="M79,19L79,89"
        android:strokeWidth="0.8"
        android:strokeColor="#33FFFFFF" />
</vector>

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\res\drawable\ic_launcher_foreground.xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:aapt="http://schemas.android.com/aapt"
    android:width="108dp"
    android:height="108dp"
    android:viewportWidth="108"
    android:viewportHeight="108">
    <path android:pathData="M31,63.928c0,0 6.4,-11 12.1,-13.1c7.2,-2.6 26,-1.4 26,-1.4l38.1,38.1L107,108.928l-32,-1L31,63.928z">
        <aapt:attr name="android:fillColor">
            <gradient
                android:endX="85.84757"
                android:endY="92.4963"
                android:startX="42.9492"
                android:startY="49.59793"
                android:type="linear">
                <item
                    android:color="#44000000"
                    android:offset="0.0" />
                <item
                    android:color="#00000000"
                    android:offset="1.0" />
            </gradient>
        </aapt:attr>
    </path>
    <path
        android:fillColor="#FFFFFF"
        android:fillType="nonZero"
        android:pathData="M65.3,45.828l3.8,-6.6c0.2,-0.4 0.1,-0.9 -0.3,-1.1c-0.4,-0.2 -0.9,-0.1 -1.1,0.3l-3.9,6.7c-6.3,-2.8 -13.4,-2.8 -19.7,0l-3.9,-6.7c-0.2,-0.4 -0.7,-0.5 -1.1,-0.3C38.8,38.328 38.7,38.828 38.9,39.228l3.8,6.6C36.2,49.428 31.7,56.028 31,63.928h46C76.3,56.028 71.8,49.428 65.3,45.828zM43.4,57.328c-0.8,0 -1.5,-0.5 -1.8,-1.2c-0.3,-0.7 -0.1,-1.5 0.4,-2.1c0.5,-0.5 1.4,-0.7 2.1,-0.4c0.7,0.3 1.2,1 1.2,1.8C45.3,56.528 44.5,57.328 43.4,57.328L43.4,57.328zM64.6,57.328c-0.8,0 -1.5,-0.5 -1.8,-1.2s-0.1,-1.5 0.4,-2.1c0.5,-0.5 1.4,-0.7 2.1,-0.4c0.7,0.3 1.2,1 1.2,1.8C66.5,56.528 65.6,57.328 64.6,57.328L64.6,57.328z"
        android:strokeWidth="1"
        android:strokeColor="#00000000" />
</vector>

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\res\drawable\ic_lock.xml
<?xml version="1.0" encoding="utf-8"?>
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="24dp"
    android:height="24dp"
    android:viewportWidth="24"
    android:viewportHeight="24">
    <path
        android:fillColor="#42A5F5"
        android:pathData="M18,8h-1V6c0,-2.76 -2.24,-5 -5,-5S7,3.24 7,6v2H6c-1.1,0 -2,0.9 -2,2v10c0,1.1 0.9,2 2,2h12c1.1,0 2,-0.9 2,-2V10c0,-1.1 -0.9,-2 -2,-2zM12,17c-1.1,0 -2,-0.9 -2,-2s0.9,-2 2,-2 2,0.9 2,2 -0.9,2 -2,2zM9,8V6c0,-1.65 1.35,-3 3,-3s3,1.35 3,3v2H9z" />
</vector>

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\res\drawable\ic_login.xml
<?xml version="1.0" encoding="utf-8"?>
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="24dp"
    android:height="24dp"
    android:viewportWidth="24"
    android:viewportHeight="24">
    <path
        android:fillColor="#FFFFFF"
        android:pathData="M10,17l5,-5 -5,-5v10zM20,21H4V3h16v2h2V3c0,-1.1 -0.9,-2 -2,-2H4C2.9,1 2,1.9 2,3v18c0,1.1 0.9,2 2,2h16c1.1,0 2,-0.9 2,-2v-2h-2v2z" />
</vector>

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\res\drawable\ic_menu.xml
<!-- res/drawable/ic_menu.xml -->
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="24dp"
    android:height="24dp"
    android:viewportWidth="24"
    android:viewportHeight="24">
    <path
        android:fillColor="#000000"
        android:pathData="M3,18h18v-2H3v2zM3,13h18v-2H3v2zM3,6v2h18V6H3z"/>
</vector>

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\res\drawable\ic_minus.xml
<!-- res/drawable/ic_minus.xml -->
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="24dp"
    android:height="24dp"
    android:viewportWidth="24"
    android:viewportHeight="24">
    <path
        android:fillColor="#000000"
        android:pathData="M19,13H5v-2h14v2z"/>
</vector>

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\res\drawable\ic_my_location.xml
<?xml version="1.0" encoding="utf-8"?>
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="24dp"
    android:height="24dp"
    android:viewportWidth="24"
    android:viewportHeight="24">
    <!-- РЎРёР»СѓСЌС‚ РјР°СЂРєРµСЂР° -->
    <path
        android:fillColor="#FFFFFF"
        android:pathData="M12,2a6,6 0 0 1 6,6c0,4 -6,10 -6,10s-6,-6 -6,-10a6,6 0 0 1 6,-6z" />
    <!-- РўРѕС‡РєР° РІ С†РµРЅС‚СЂРµ -->
    <path
        android:fillColor="#42A5F5"
        android:pathData="M12,6a2,2 0 0 1 0,4a2,2 0 0 1 0,-4z" />
</vector>

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\res\drawable\ic_notification.xml
<!-- res/drawable/ic_notification.xml -->
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="24dp"
    android:height="24dp"
    android:viewportWidth="24"
    android:viewportHeight="24">
    <path
        android:fillColor="#000000"
        android:pathData="M12,22c1.1,0 2,-0.9 2,-2h-4c0,1.1 0.9,2 2,2zM18,16v-5c0,-3.07 -1.63,-5.64 -4.5,-6.32V4c0,-0.83 -0.67,-1.5 -1.5,-1.5s-1.5,0.67 -1.5,1.5v0.68C7.63,5.36 6,7.92 6,11v5l-2,2v1h16v-1l-2,-2z"/>
</vector>

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\res\drawable\ic_payment.xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="24dp"
    android:height="24dp"
    android:viewportWidth="24"
    android:viewportHeight="24"
    android:tint="#FFFFFF">
    <path
        android:fillColor="@android:color/white"
        android:pathData="M20 4H4c-1.11 0-1.99.89-1.99 2L2 18c0 1.11.89 2 2 2h16c1.11 0 2-.89 2-2V6c0-1.11-.89-2-2-2zm0 14H4v-6h16v6zm0-10H4V6h16v2z"/>
</vector>

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\res\drawable\ic_plus.xml
<!-- res/drawable/ic_plus.xml -->
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="24dp"
    android:height="24dp"
    android:viewportWidth="24"
    android:viewportHeight="24">
    <path
        android:fillColor="#000000"
        android:pathData="M19,13H13v6h-2v-6H5v-2h6V5h2v6h6v2z"/>
</vector>

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\res\drawable\ic_product_name.xml
<!-- res/drawable/ic_product_name.xml -->
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="24dp"
    android:height="24dp"
    android:viewportWidth="24"
    android:viewportHeight="24">
    <path
        android:fillColor="#000000"
        android:pathData="M3,3h18v2H3V3zm0,4h12v2H3V7zm0,4h18v2H3v-2zm0,4h12v2H3v-2zm0,4h18v2H3v-2z"/>
</vector>

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\res\drawable\ic_quantity.xml
<!-- res/drawable/ic_quantity.xml -->
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="24dp"
    android:height="24dp"
    android:viewportWidth="24"
    android:viewportHeight="24">
    <path
        android:fillColor="#000000"
        android:pathData="M19,3H5c-1.1,0 -2,0.9 -2,2v14c0,1.1 0.9,2 2,2h14c1.1,0 2,-0.9 2,-2V5c0,-1.1 -0.9,-2 -2,-2zM11,17H7v-4h4v4zM17,17h-4v-4h4v4zM11,11H7V7h4v4zM17,11h-4V7h4v4z"/>
</vector>

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\res\drawable\ic_revenue.xml
<!-- res/drawable/ic_revenue.xml -->
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="24dp"
    android:height="24dp"
    android:viewportWidth="24"
    android:viewportHeight="24">
    <path
        android:fillColor="#000000"
        android:pathData="M12,2C6.48,2 2,6.48 2,12s4.48,10 10,10 10,-4.48 10,-10S17.52,2 12,2zM12,18c-3.31,0 -6,-2.69 -6,-6s2.69,-6 6,-6 6,2.69 6,6 -2.69,6 -6,6zM12,10c-1.1,0 -2,0.9 -2,2s0.9,2 2,2 2,-0.9 2,-2 -0.9,-2 -2,-2z"/>
</vector>

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\res\drawable\ic_save.xml
<!-- res/drawable/ic_save.xml -->
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="24dp"
    android:height="24dp"
    android:viewportWidth="24"
    android:viewportHeight="24">
    <path
        android:fillColor="#000000"
        android:pathData="M17,3H5c-1.1,0 -2,0.9 -2,2v14c0,1.1 0.9,2 2,2h14c1.1,0 2,-0.9 2,-2V7l-4,-4zM15,9h-4V5H5v14h14V9z"/>
</vector>

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\res\drawable\ic_shield.xml
<!-- res/drawable/ic_shield.xml -->
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="20dp"
    android:height="20dp"
    android:viewportWidth="24"
    android:viewportHeight="24">
    <path
        android:fillColor="#000000"
        android:pathData="M12,1L3,5v6c0,5.55 3.84,10.74 9,12 5.16,-1.26 9,-6.45 9,-12V5l-9,-4zM12,16c-2.21,0 -4,-1.79 -4,-4s1.79,-4 4,-4 4,1.79 4,4 -1.79,4 -4,4z"/>
</vector>

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\res\drawable\ic_star.xml
<!-- res/drawable/ic_star.xml -->
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="24dp"
    android:height="24dp"
    android:viewportWidth="24"
    android:viewportHeight="24">
    <path
        android:fillColor="#000000"
        android:pathData="M12,17.27L18.18,21l-1.64,-7.03L22,9.24l-7.19,-0.61L12,2 9.19,8.63 2,9.24l5.46,4.73L5.82,21z"/>
</vector>

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\res\drawable\ic_store.xml
<!-- res/drawable/ic_store.xml -->
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="24dp"
    android:height="24dp"
    android:viewportWidth="24"
    android:viewportHeight="24">
    <path
        android:fillColor="#000000"
        android:pathData="M20,4H4v2h16V4zm1,10v-2l-1,-5H4l-1,5v2h1v6h10v-6h4v6h2v-6h1zm-9,4H6v-4h6v4z"/>
</vector>

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\res\drawable\ic_total.xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="24dp"
    android:height="24dp"
    android:viewportWidth="24"
    android:viewportHeight="24"
    android:tint="#001A34">
    <path
        android:fillColor="@android:color/white"
        android:pathData="M11 8v5l4.25 2.52.77-1.28-3.52-2.09V8H11zm10 2V3l-2.64 2.64C16.74 4.01 14.49 3 12 3c-4.97 0-9 4.03-9 9s4.03 9 9 9 9-4.03 9-9h-2c0 3.86-3.14 7-7 7s-7-3.14-7-7 3.14-7 7-7c1.93 0 3.68.79 4.95 2.05L14 10h7z"/>
</vector>

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\res\drawable\ic_user.xml
<?xml version="1.0" encoding="utf-8"?>
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="24dp"
    android:height="24dp"
    android:viewportWidth="24"
    android:viewportHeight="24">
    <path
        android:fillColor="#42A5F5"
        android:pathData="M12,12c2.21,0 4,-1.79 4,-4s-1.79,-4 -4,-4 -4,1.79 -4,4 1.79,4 4,4zM12,14c-2.67,0 -8,1.34 -8,4v2h16v-2c0,-2.66 -5.33,-4 -8,-4z" />
</vector>

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\res\drawable\ic_visibility.xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="24dp"
    android:height="24dp"
    android:viewportWidth="24"
    android:viewportHeight="24"
    android:tint="#005BFF">
    <path
        android:fillColor="@android:color/white"
        android:pathData="M12,4.5C7,4.5 2.73,7.61 1,12c1.73,4.39 6,7.5 11,7.5s9.27,-3.11 11,-7.5c-1.73,-4.39 -6,-7.5 -11,-7.5zM12,17c-2.76,0 -5,-2.24 -5,-5s2.24,-5 5,-5 5,2.24 5,5 -2.24,5 -5,5zM12,9c-1.66,0 -3,1.34 -3,3s1.34,3 3,3 3,-1.34 3,-3 -1.34,-3 -3,-3z"/>
</vector>

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\res\drawable\ic_visibility_off.xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="24dp"
    android:height="24dp"
    android:viewportWidth="24"
    android:viewportHeight="24"
    android:tint="#005BFF">
    <path
        android:fillColor="@android:color/white"
        android:pathData="M12,7c2.76,0 5,2.24 5,5 0,0.65 -0.13,1.26 -0.36,1.83l2.92,2.92c1.51,-1.26 2.7,-2.89 3.43,-4.75 -1.73,-4.39 -6,-7.5 -11,-7.5 -1.4,0 -2.74,0.25 -3.98,0.7l2.16,2.16C10.74,7.13 11.35,7 12,7zM2,4.27l2.28,2.28 0.46,0.46C3.08,8.3 1.78,10.02 1,12c1.73,4.39 6,7.5 11,7.5 1.55,0 3.03,-0.3 4.38,-0.84l0.42,0.42L19.73,22 21,20.73 3.27,3 2,4.27zM7.53,9.8l1.55,1.55c-0.05,0.21 -0.08,0.43 -0.08,0.65 0,1.66 1.34,3 3,3 0.22,0 0.44,-0.03 0.65,-0.08l1.55,1.55c-0.67,0.33 -1.41,0.53 -2.2,0.53 -2.76,0 -5,-2.24 -5,-5 0,-0.79 0.2,-1.53 0.53,-2.2zm4.31,-0.78l3.15,3.15 0.02,-0.16c0,-1.66 -1.34,-3 -3,-3l-0.17,0.01z"/>
</vector>

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\res\drawable\neon_gradient_background.xml
<?xml version="1.0" encoding="utf-8"?>
<shape xmlns:android="http://schemas.android.com/apk/res/android">
    <gradient
        android:startColor="#1A237E"
        android:centerColor="#D81B60"
        android:endColor="#FF5722"
        android:angle="45" />
</shape>

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\res\drawable\neon_line_gradient.xml
<?xml version="1.0" encoding="utf-8"?>
<shape xmlns:android="http://schemas.android.com/apk/res/android">
    <gradient
        android:startColor="#FF4081"
        android:endColor="#00E676"
        android:angle="0" />
    <corners android:radius="4dp" />
</shape>

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\res\drawable\ozon_line.xml
<?xml version="1.0" encoding="utf-8"?>
<shape xmlns:android="http://schemas.android.com/apk/res/android"
    android:shape="rectangle">
    <size android:height="4dp" />
    <gradient
        android:startColor="#2B67FF"
        android:endColor="#EC407A"
        android:angle="0" />
    <corners android:radius="2dp" />
</shape>

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\res\drawable\ozon_rip_effect.xml
<?xml version="1.0" encoding="utf-8"?>
<layer-list xmlns:android="http://schemas.android.com/apk/res/android">
    <!-- Р¤РѕРЅ СЃ РіСЂР°РґРёРµРЅС‚РѕРј -->
    <item>
        <shape>
            <gradient
                android:startColor="#2B67FF"
                android:endColor="#EC407A"
                android:angle="45" />
        </shape>
    </item>

    <!-- РўРµРєСЃС‚ "OZON" (РёРјРёС‚Р°С†РёСЏ С‡РµСЂРµР· РїСЂСЏРјРѕСѓРіРѕР»СЊРЅРёРєРё, С‚Р°Рє РєР°Рє С‚РµРєСЃС‚ РІ layer-list РЅРµ РїРѕРґРґРµСЂР¶РёРІР°РµС‚СЃСЏ РЅР°РїСЂСЏРјСѓСЋ) -->
    <item
        android:width="160dp"
        android:height="80dp"
        android:gravity="center">
        <shape>
            <solid android:color="#FFFFFF" />
        </shape>
    </item>

    <!-- Р›РёРЅРёРё СЂР°Р·СЂС‹РІР° (РјРѕР»РЅРёРё) -->
    <item>
        <vector
            android:width="180dp"
            android:height="150dp"
            android:viewportWidth="24"
            android:viewportHeight="24">
            <path
                android:strokeColor="#2B67FF"
                android:strokeWidth="2"
                android:pathData="M6,10 L8,14 L6,18" />
            <path
                android:strokeColor="#EC407A"
                android:strokeWidth="2"
                android:pathData="M18,10 L16,14 L18,18" />
            <path
                android:strokeColor="#2B67FF"
                android:strokeWidth="2"
                android:pathData="M10,6 L12,8 L14,6" />
            <path
                android:strokeColor="#EC407A"
                android:strokeWidth="2"
                android:pathData="M10,18 L12,20 L14,18" />
        </vector>
    </item>
</layer-list>

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\res\drawable\pastel_circle_bottom.xml
<?xml version="1.0" encoding="utf-8"?>
<shape xmlns:android="http://schemas.android.com/apk/res/android">
    <solid android:color="#F8BBD0" />
    <corners android:radius="75dp" />
</shape>

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\res\drawable\price_background.xml
<!-- res/drawable/price_background.xml -->
<shape xmlns:android="http://schemas.android.com/apk/res/android">
    <solid android:color="#E6F0FF"/>
    <corners android:radius="8dp"/>
</shape>

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\res\drawable\ripple_effect_pastel.xml
<?xml version="1.0" encoding="utf-8"?>
<ripple xmlns:android="http://schemas.android.com/apk/res/android"
    android:color="#80FFFFFF">
    <item>
        <shape>
            <corners android:radius="8dp" />
        </shape>
    </item>
</ripple>

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\res\drawable\rounded_edittext_background.xml
<shape xmlns:android="http://schemas.android.com/apk/res/android">
    <solid android:color="#F5F5F5"/> <!-- Р¦РІРµС‚ С„РѕРЅР° -->
    <corners android:radius="24dp"/> <!-- Р—Р°РєСЂСѓРіР»РµРЅРёРµ СѓРіР»РѕРІ -->
    <stroke android:width="1dp" android:color="#005BFF"/> <!-- РћР±РІРѕРґРєР° -->
</shape>

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\res\drawable\rounded_spinner_background.xml
<shape xmlns:android="http://schemas.android.com/apk/res/android">
    <solid android:color="#005BFF"/> <!-- Р¦РІРµС‚ С„РѕРЅР° -->
    <corners android:radius="24dp"/> <!-- Р—Р°РєСЂСѓРіР»РµРЅРёРµ СѓРіР»РѕРІ -->
</shape>

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\res\drawable\search_button_bg.xml
<shape xmlns:android="http://schemas.android.com/apk/res/android">
    <solid android:color="#005BFF"/>
    <corners
        android:topRightRadius="28dp"
        android:bottomRightRadius="28dp"/>
</shape>

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\res\drawable\search_field_background.xml
<shape xmlns:android="http://schemas.android.com/apk/res/android">
    <solid android:color="#FFFFFF"/>
    <stroke android:width="1dp" android:color="#005BFF"/>
    <corners
        android:topLeftRadius="12dp"
        android:bottomLeftRadius="12dp"
        android:topRightRadius="0dp"
        android:bottomRightRadius="0dp"/>
</shape>

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\res\drawable\semi_circle_button_background.xml
<shape xmlns:android="http://schemas.android.com/apk/res/android">
    <solid android:color="#005BFF"/> <!-- Р¦РІРµС‚ С„РѕРЅР° РєРЅРѕРїРєРё -->
    <corners
        android:topRightRadius="28dp"
    android:bottomRightRadius="28dp"
    android:topLeftRadius="0dp"
    android:bottomLeftRadius="0dp"/>
</shape>

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\res\drawable\spinner_background.xml
<shape xmlns:android="http://schemas.android.com/apk/res/android">
    <solid android:color="#FFFFFF"/> <!-- Р¦РІРµС‚ С„РѕРЅР° -->
    <corners android:radius="12dp"/> <!-- Р—Р°РєСЂСѓРіР»РµРЅРёРµ СѓРіР»РѕРІ -->
    <stroke
        android:color="#939393"
        android:width="1dp"/> <!-- Р¦РІРµС‚ Рё С€РёСЂРёРЅР° РѕР±РІРѕРґРєРё -->
</shape>

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\res\drawable\widget_background.xml
<?xml version="1.0" encoding="utf-8"?>
<shape xmlns:android="http://schemas.android.com/apk/res/android">
    <gradient
        android:startColor="#E6E6FA"
        android:endColor="#FFFFFF"
        android:angle="270"/>
    <corners android:radius="16dp"/>
    <!-- Р”РѕР±Р°РІРёРј С‚РµРЅСЊ С‡РµСЂРµР· inset -->
    <padding
        android:left="4dp"
        android:top="4dp"
        android:right="4dp"
        android:bottom="4dp"/>
</shape>

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\res\font\montserrat.xml
<?xml version="1.0" encoding="utf-8"?>
<font-family xmlns:android="http://schemas.android.com/apk/res/android">
    <font
        android:font="@font/montserratregular"
        android:fontStyle="normal"
        android:fontWeight="400" />
    <font
        android:font="@font/montserratsemibold"
        android:fontStyle="normal"
        android:fontWeight="600" />
    <font
        android:font="@font/montserratbold"
        android:fontStyle="normal"
        android:fontWeight="700" />
</font-family>

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\res\layout\activity_main.xml
<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:background="#E6E6FA">

    <!-- РРєРѕРЅРєР° СЃСѓРјРєРё СЃРІРµСЂС…Сѓ СЃРїСЂР°РІР° (РїРѕРІРµСЂРЅСѓС‚Р°СЏ) -->
    <ImageView
        android:id="@+id/topBagIcon"
        android:alpha="0.35"
        android:layout_width="110dp"
        android:layout_height="110dp"
        android:src="@drawable/ic_bag"
        android:contentDescription="Р”РµРєРѕСЂР°С‚РёРІРЅР°СЏ РёРєРѕРЅРєР° СЃСѓРјРєРё"
        android:rotation="20"
        android:layout_marginTop="-30dp"
        android:layout_marginEnd="-10dp"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintEnd_toEndOf="parent" />

    <!-- РРєРѕРЅРєР° СЃСѓРјРєРё СЃРІРµСЂС…Сѓ СЃР»РµРІР° (РґРѕРїРѕР»РЅРёС‚РµР»СЊРЅР°СЏ) -->

    <!-- РРєРѕРЅРєР° РёРіСЂСѓС€РєРё СЃРІРµСЂС…Сѓ СЃР»РµРІР° (РјРµРЅСЊС€Р°СЏ, РїРѕРІРµСЂРЅСѓС‚Р°СЏ) -->
    <ImageView
        android:id="@+id/bottomBoxIcon2"
        android:layout_width="220dp"
        android:layout_height="220dp"
        android:layout_marginEnd="-60dp"
        android:alpha="0.35"
        android:contentDescription="Р”РµРєРѕСЂР°С‚РёРІРЅР°СЏ РёРєРѕРЅРєР° РєРѕСЂРѕР±РєРё"
        android:rotation="25"
        android:src="@drawable/ic_box"
        android:tint="#4F8DFF"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintHorizontal_bias="1.0"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintVertical_bias="0.187" />

    <ImageView
        android:id="@+id/s"
        android:layout_width="150dp"
        android:layout_height="150dp"
        android:layout_marginTop="132dp"
        android:alpha="0.35"
        android:contentDescription="Р”РµРєРѕСЂР°С‚РёРІРЅР°СЏ РёРєРѕРЅРєР° СЃСѓРјРєРё"
        android:rotation="-200"
        android:src="@drawable/ic_bag"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintHorizontal_bias="0.061"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent" />

    <!-- РќРѕРІС‹Р№ Р»РѕРіРѕС‚РёРї "OZON" СЃ РіСЂР°РґРёРµРЅС‚РѕРј Рё Р»РёРЅРёРµР№ -->
    <!-- Р“СЂР°РґРёРµРЅС‚РЅС‹Р№ Р»РѕРіРѕС‚РёРї OZON -->
    <ImageView
        android:id="@+id/topToyIcon"
        android:layout_width="100dp"
        android:layout_height="100dp"
        android:layout_marginStart="4dp"
        android:layout_marginTop="-20dp"
        android:alpha="0.35"
        android:contentDescription="Р”РµРєРѕСЂР°С‚РёРІРЅР°СЏ РёРєРѕРЅРєР° РёРіСЂСѓС€РєРё"
        android:rotation="-30"
        android:src="@drawable/ic_toy"
        android:tint="#6097FF"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent" />

    <androidx.constraintlayout.widget.ConstraintLayout
        android:id="@+id/logoContainer"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginTop="80dp"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintEnd_toEndOf="parent">

        <!-- РўРµРєСЃС‚ OZON СЃ РіСЂР°РґРёРµРЅС‚РѕРј -->
        <TextView
            android:id="@+id/logoText"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="OZON"
            android:textSize="80sp"
            android:fontFamily="@font/montserratsemibold"
            android:textStyle="bold"
            android:includeFontPadding="false"
            android:paddingHorizontal="16dp"
            app:layout_constraintTop_toTopOf="parent"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintEnd_toEndOf="parent"/>
        <!-- Р“СЂР°РґРёРµРЅС‚РЅР°СЏ Р»РёРЅРёСЏ РїРѕРґ С‚РµРєСЃС‚РѕРј -->
        <View
            android:id="@+id/logoLine"
            android:layout_width="170dp"
            android:layout_height="4dp"
            android:background="@drawable/ozon_line"
            app:layout_constraintTop_toBottomOf="@id/logoText"
            app:layout_constraintStart_toStartOf="@id/logoText"
            app:layout_constraintEnd_toEndOf="@id/logoText"
            android:layout_marginTop="4dp" />

    </androidx.constraintlayout.widget.ConstraintLayout>

    <!-- РљР°СЂС‚РѕС‡РєР° С„РѕСЂРјС‹ -->



    <androidx.cardview.widget.CardView
        android:id="@+id/authCard"
        android:layout_width="0dp"
        android:layout_height="wrap_content"
        android:layout_marginHorizontal="16dp"
        android:layout_marginTop="24dp"
        app:cardCornerRadius="20dp"
        app:cardElevation="6dp"
        app:cardBackgroundColor="#FFFFFF"
        app:layout_constraintTop_toBottomOf="@id/logoContainer"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintEnd_toEndOf="parent">

        <LinearLayout
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:gravity="center"
            android:orientation="vertical"
            android:padding="40dp">

            <!-- Р—Р°РіРѕР»РѕРІРѕРє -->
            <TextView
                android:id="@+id/title"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_marginBottom="24dp"
                android:fontFamily="@font/montserratsemibold"
                android:text="Р’С…РѕРґ"
                android:textColor="#EC407A"
                android:textSize="30sp" />

            <!-- РџРѕР»Рµ РґР»СЏ РІРІРѕРґР° Р»РѕРіРёРЅР° -->
            <com.google.android.material.textfield.TextInputLayout
                android:id="@+id/loginInputLayout"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginBottom="24dp"
                app:boxBackgroundMode="outline"
                app:boxCornerRadiusBottomEnd="10dp"
                style="@style/CustomTextInputLayout"
                app:boxCornerRadiusBottomStart="10dp"
                app:boxCornerRadiusTopEnd="10dp"
                app:boxCornerRadiusTopStart="10dp"
                app:boxStrokeColor="#42A5F5"
                app:hintTextColor="#90A4AE"
                app:startIconDrawable="@drawable/ic_email"
                app:startIconTint="#42A5F5">

                <com.google.android.material.textfield.TextInputEditText
                    android:id="@+id/loginField"
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    style="@style/CustomTextInputEditText"
                    android:contentDescription="РџРѕР»Рµ РґР»СЏ РІРІРѕРґР° Р»РѕРіРёРЅР°"
                    android:importantForAccessibility="yes"
                    android:inputType="text"
                    android:hint="Р›РѕРіРёРЅ" />
            </com.google.android.material.textfield.TextInputLayout>


            <!-- РџРѕР»Рµ РґР»СЏ РІРІРѕРґР° РїР°СЂРѕР»СЏ -->
            <com.google.android.material.textfield.TextInputLayout
                android:id="@+id/passwordInputLayout"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginBottom="24dp"
                app:boxBackgroundMode="outline"
                app:boxCornerRadiusBottomEnd="10dp"
                style="@style/CustomTextInputLayout"
            app:boxCornerRadiusBottomStart="10dp"
                app:boxCornerRadiusTopEnd="10dp"
                app:boxCornerRadiusTopStart="10dp"
                app:boxStrokeColor="#42A5F5"
                app:hintTextColor="#90A4AE"
                app:startIconDrawable="@drawable/ic_lock"
                app:startIconTint="#42A5F5">

                <com.google.android.material.textfield.TextInputEditText
                    android:id="@+id/passwordField"
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    style="@style/CustomTextInputEditText"
                    android:background="@null"
                    android:contentDescription="РџРѕР»Рµ РґР»СЏ РІРІРѕРґР° РїР°СЂРѕР»СЏ"
                    android:fontFamily="@font/montserratregular"
                    android:hint="РџР°СЂРѕР»СЊ"
                    android:importantForAccessibility="yes"
                    android:inputType="textPassword"
                    android:padding="12dp"
                    android:textColor="#37474F"
                    android:textSize="16sp" />
            </com.google.android.material.textfield.TextInputLayout>

            <!-- РљРЅРѕРїРєР° РІС…РѕРґР° -->
            <com.google.android.material.button.MaterialButton
                android:id="@+id/loginButton"
                android:layout_width="match_parent"
                android:layout_height="54dp"
                android:layout_marginBottom="24dp"
                android:backgroundTint="#EC407A"
                android:contentDescription="РљРЅРѕРїРєР° РІС…РѕРґР°"
                android:elevation="4dp"
                android:fontFamily="@font/montserratsemibold"
                android:importantForAccessibility="yes"
                android:text="Р’РѕР№С‚Рё"
                android:textColor="#FFFFFF"
                android:textSize="16sp"
                app:cornerRadius="12dp"
                app:icon="@drawable/ic_login"
                app:iconGravity="end"
                app:iconTint="#FFFFFF"
                app:rippleColor="#80FFFFFF" />
            <ProgressBar
                android:id="@+id/progressBar"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:visibility="gone"
                android:layout_gravity="center"
                android:layout_marginTop="16dp"
                app:layout_constraintTop_toBottomOf="@id/passwordField"
                app:layout_constraintStart_toStartOf="parent"
                app:layout_constraintEnd_toEndOf="parent" />

            <!-- РЎСЃС‹Р»РєРё -->
            <TextView
                android:id="@+id/registerLink"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:background="@drawable/ripple_effect_pastel"
                android:contentDescription="РЎСЃС‹Р»РєР° РЅР° СЂРµРіРёСЃС‚СЂР°С†РёСЋ"
                android:fontFamily="@font/montserratregular"
                android:importantForAccessibility="yes"
                android:padding="8dp"
                android:text="Р—Р°СЂРµРіРёСЃС‚СЂРёСЂРѕРІР°С‚СЊСЃСЏ"
                android:textColor="#42A5F5"
                android:textSize="14sp" />

            <TextView
                android:id="@+id/sellerAuthLink"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:background="@drawable/ripple_effect_pastel"
                android:contentDescription="РЎСЃС‹Р»РєР° РґР»СЏ Р°РІС‚РѕСЂРёР·Р°С†РёРё РєР°Рє РїСЂРѕРґР°РІС†Р°"
                android:fontFamily="@font/montserratregular"
                android:importantForAccessibility="yes"
                android:padding="8dp"
                android:text="Р’РѕР№С‚Рё РєР°Рє РїСЂРѕРґР°РІРµС†"
                android:textColor="#42A5F5"
                android:textSize="14sp" />

            <TextView
                android:id="@+id/forgotPasswordLink"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:background="@drawable/ripple_effect_pastel"
                android:contentDescription="РЎСЃС‹Р»РєР° РЅР° РІРѕСЃСЃС‚Р°РЅРѕРІР»РµРЅРёРµ РїР°СЂРѕР»СЏ"
                android:fontFamily="@font/montserratregular"
                android:importantForAccessibility="yes"
                android:padding="8dp"
                android:text="Р—Р°Р±С‹Р»Рё РїР°СЂРѕР»СЊ?"
                android:textColor="#EC407A"
                android:textSize="14sp" />
        </LinearLayout>
    </androidx.cardview.widget.CardView>

    <!-- РРєРѕРЅРєР° РєРѕСЂРѕР±РєРё СЃРЅРёР·Сѓ СЃР»РµРІР° (РїРѕРІРµСЂРЅСѓС‚Р°СЏ) -->

    <!-- РРєРѕРЅРєР° РёРіСЂСѓС€РєРё СЃРЅРёР·Сѓ СЃРїСЂР°РІР° (РјРµРЅСЊС€Р°СЏ, РїРѕРІРµСЂРЅСѓС‚Р°СЏ) -->

    <ImageView
        android:id="@+id/bottomBoxIcon"
        android:layout_width="120dp"
        android:layout_height="120dp"
        android:layout_marginTop="664dp"
        android:alpha="0.35"
        android:contentDescription="Р”РµРєРѕСЂР°С‚РёРІРЅР°СЏ РёРєРѕРЅРєР° РєРѕСЂРѕР±РєРё"
        android:rotation="120"
        android:src="@drawable/ic_box"
        android:tint="#4F8DFF"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintHorizontal_bias="0.12"
        app:layout_constraintStart_toEndOf="@+id/s"
        app:layout_constraintTop_toTopOf="parent" />

    <ImageView
        android:id="@+id/bottomBoxIcon3"
        android:layout_width="120dp"
        android:layout_height="120dp"
        android:layout_marginStart="-30dp"
        android:layout_marginBottom="-40dp"
        android:alpha="0.35"
        android:contentDescription="Р”РµРєРѕСЂР°С‚РёРІРЅР°СЏ РёРєРѕРЅРєР° РєРѕСЂРѕР±РєРё"
        android:rotation="25"
        android:src="@drawable/ic_box"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintStart_toStartOf="parent" />

    <ImageView
        android:id="@+id/bottomToyIcon"
        android:layout_width="90dp"
        android:layout_height="90dp"
        android:layout_marginEnd="-40dp"
        android:layout_marginBottom="8dp"
        android:alpha="0.35"
        android:contentDescription="Р”РµРєРѕСЂР°С‚РёРІРЅР°СЏ РёРєРѕРЅРєР° РёРіСЂСѓС€РєРё"
        android:rotation="-20"
        android:src="@drawable/ic_toy"
        android:tint="#6097FF"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent" />
</androidx.constraintlayout.widget.ConstraintLayout>

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\res\layout\activity_map.xml
<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:background="#FFFFFF">

    <!-- РљР°СЂС‚Р° (Р·Р°РЅРёРјР°РµС‚ РІСЃРµ РїСЂРѕСЃС‚СЂР°РЅСЃС‚РІРѕ) -->
    <com.yandex.mapkit.mapview.MapView
        android:id="@+id/mapview"
        android:layout_width="0dp"
        android:layout_height="0dp"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintBottom_toTopOf="@+id/bottomCard"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintEnd_toEndOf="parent"/>

    <!-- РљР°СЂС‚РѕС‡РєР° СЃ РєРЅРѕРїРєР°РјРё РІРЅРёР·Сѓ (СЃС‚РёР»РёР·РѕРІР°РЅРЅР°СЏ РєР°Рє РІ РїРµСЂРІРѕРј РїСЂРёРјРµСЂРµ) -->
    <androidx.cardview.widget.CardView
        android:id="@+id/bottomCard"
        android:layout_width="0dp"
        android:layout_height="wrap_content"
        android:layout_marginHorizontal="16dp"
        android:layout_marginBottom="16dp"
        app:cardCornerRadius="20dp"
        app:cardElevation="8dp"
        app:cardBackgroundColor="#FFFFFF"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintEnd_toEndOf="parent">

        <LinearLayout
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:orientation="vertical"
            android:padding="20dp">

            <ProgressBar
                android:id="@+id/progressBar"
                style="?android:attr/progressBarStyleHorizontal"
                android:layout_width="match_parent"
                android:layout_height="4dp"
                android:indeterminate="true"
                android:visibility="gone"
                android:layout_marginBottom="16dp"/>

            <com.google.android.material.button.MaterialButton
                android:id="@+id/btnResetLocation"
                android:layout_width="match_parent"
                android:layout_height="60dp"
                android:layout_marginBottom="16dp"
                android:backgroundTint="#42A5F5"
                android:text="Р’РµСЂРЅСѓС‚СЊСЃСЏ Рє РјРѕРµРјСѓ РјРµСЃС‚РѕРїРѕР»РѕР¶РµРЅРёСЋ"
                android:textSize="16sp"
                app:cornerRadius="12dp"
                app:icon="@drawable/ic_my_location" />

            <com.google.android.material.button.MaterialButton
                android:id="@+id/btnConfirmSelection"
                android:layout_width="match_parent"
                android:layout_height="54dp"
                android:text="РџРѕРґС‚РІРµСЂРґРёС‚СЊ РІС‹Р±РѕСЂ"
                android:textColor="#FFFFFF"
                android:textSize="16sp"
                android:enabled="false"
                app:cornerRadius="12dp"
                app:icon="@drawable/ic_check"
                app:iconTint="#FFFFFF"
                android:backgroundTint="#EC407A"/>
            <com.google.android.material.button.MaterialButton
                android:id="@+id/btnCancelSelection"
                android:layout_width="match_parent"
                android:layout_height="54dp"
                android:text="РћС‚РјРµРЅР°"
                android:textColor="#FFFFFF"
                android:textSize="16sp"
                android:backgroundTint="#A2A1A1"
                app:cornerRadius="12dp"
                app:iconTint="#FFFFFF"/>
        </LinearLayout>
    </androidx.cardview.widget.CardView>
</androidx.constraintlayout.widget.ConstraintLayout>

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\res\layout\add_card_dialog.xml
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:layout_width="match_parent"
    android:layout_height="wrap_content"
    android:orientation="vertical"
    android:padding="24dp"
    android:background="@drawable/bg_rounded_dialog">

    <!-- Р—Р°РіРѕР»РѕРІРѕРє -->
    <TextView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="Р”РѕР±Р°РІР»РµРЅРёРµ РєР°СЂС‚С‹"
        android:textColor="#001A34"
        android:textSize="20sp"
        android:fontFamily="@font/montserratbold"
        android:layout_marginBottom="16dp"/>

    <!-- РџРѕР»Рµ РґР»СЏ РЅРѕРјРµСЂР° РєР°СЂС‚С‹ -->
    <com.google.android.material.textfield.TextInputLayout
        android:id="@+id/cardNumberLayout"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_marginBottom="12dp"
        app:boxBackgroundMode="outline"
        app:boxStrokeColor="#005BFF"
        app:hintTextColor="#005BFF"
        app:startIconDrawable="@drawable/ic_credit_card"
        app:startIconTint="#005BFF"
        style="@style/CustomTextInputLayout">

        <com.google.android.material.textfield.TextInputEditText
            android:id="@+id/etCardNumber"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:hint="РќРѕРјРµСЂ РєР°СЂС‚С‹"
            android:inputType="number"
            android:imeOptions="actionNext"
            android:maxLength="19"
        android:textColor="#001A34"
        android:textSize="16sp"
        android:fontFamily="@font/montserratregular"/>

    </com.google.android.material.textfield.TextInputLayout>

    <!-- Р“СЂСѓРїРїР° РїРѕР»РµР№ СЃСЂРѕРєР° Рё CVV -->
    <LinearLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:orientation="horizontal"
        android:layout_marginBottom="16dp">

        <!-- РџРѕР»Рµ СЃСЂРѕРєР° РґРµР№СЃС‚РІРёСЏ -->
        <com.google.android.material.textfield.TextInputLayout
            android:id="@+id/expiryLayout"
            android:layout_width="0dp"
            android:layout_height="wrap_content"
            android:layout_weight="1"
            android:layout_marginEnd="8dp"
            app:boxBackgroundMode="outline"
            app:boxStrokeColor="#005BFF"
            app:hintTextColor="#005BFF"
            app:startIconDrawable="@drawable/ic_calendar"
            app:startIconTint="#005BFF"
            style="@style/CustomTextInputLayout">

            <com.google.android.material.textfield.TextInputEditText
                android:id="@+id/etCardExpiry"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:hint="РњРњ/Р“Р“"
                android:inputType="number"
                android:imeOptions="actionNext"
                android:maxLength="5"
                android:textColor="#001A34"
                android:textSize="16sp"
                android:fontFamily="@font/montserratregular"/>

        </com.google.android.material.textfield.TextInputLayout>

        <!-- РџРѕР»Рµ CVV -->
        <com.google.android.material.textfield.TextInputLayout
            android:id="@+id/cvvLayout"
            android:layout_width="0dp"
            android:layout_height="wrap_content"
            android:layout_weight="1"
            app:boxBackgroundMode="outline"
            app:boxStrokeColor="#005BFF"
            app:hintTextColor="#005BFF"
            app:startIconDrawable="@drawable/ic_lock"
            app:startIconTint="#005BFF"
            app:passwordToggleEnabled="true"
            app:passwordToggleDrawable="@drawable/ic_visibility"
            app:passwordToggleTint="#005BFF"
            style="@style/CustomTextInputLayout">

            <com.google.android.material.textfield.TextInputEditText
                android:id="@+id/etCardCVV"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:hint="CVV"
                android:inputType="numberPassword"
                android:maxLength="3"
                android:textColor="#001A34"
                android:textSize="16sp"
                android:fontFamily="@font/montserratregular"/>

        </com.google.android.material.textfield.TextInputLayout>

    </LinearLayout>

    <!-- РљРЅРѕРїРєРё -->
    <LinearLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:orientation="horizontal"
        android:layout_marginTop="8dp">

        <!-- РљРЅРѕРїРєР° РћС‚РјРµРЅР° -->
        <com.google.android.material.button.MaterialButton
            android:id="@+id/btnCancel"
            android:layout_width="0dp"
            android:layout_height="48dp"
            android:layout_weight="1"
            android:layout_marginEnd="4dp"
            android:text="РћС‚РјРµРЅР°"
            android:textColor="#005BFF"
            android:backgroundTint="#E6F0FF"
            android:textSize="16sp"
            android:fontFamily="@font/montserratsemibold"
            app:cornerRadius="8dp"/>

        <!-- РљРЅРѕРїРєР° Р”РѕР±Р°РІРёС‚СЊ -->
        <com.google.android.material.button.MaterialButton
            android:id="@+id/btnAdd"
            android:layout_width="0dp"
            android:layout_height="48dp"
            android:layout_weight="1"
            android:layout_marginStart="4dp"
            android:text="Р”РѕР±Р°РІРёС‚СЊ"
            android:textColor="#FFFFFF"
            android:backgroundTint="#005BFF"
            android:textSize="16sp"
            android:fontFamily="@font/montserratsemibold"
            app:cornerRadius="8dp"/>

    </LinearLayout>
</LinearLayout>

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\res\layout\autorization_for_seller.xml
<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:background="#E6E6FA">

    <!-- Р”РµРєРѕСЂР°С‚РёРІРЅС‹Рµ СЌР»РµРјРµРЅС‚С‹ -->

    <ImageView
        android:id="@+id/topBagIcon"
        android:layout_width="110dp"
        android:layout_height="110dp"
        android:layout_marginTop="4dp"
        android:layout_marginEnd="4dp"
        android:alpha="0.35"
        android:contentDescription="Р”РµРєРѕСЂР°С‚РёРІРЅР°СЏ РёРєРѕРЅРєР° СЃСѓРјРєРё"
        android:rotation="20"
        android:src="@drawable/ic_bag"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintTop_toTopOf="parent" />

    <ImageView
        android:id="@+id/topBagIcon2"
        android:layout_width="110dp"
        android:layout_height="110dp"
        android:layout_marginEnd="180dp"
        android:layout_marginTop="650dp"
        android:alpha="0.35"
        android:contentDescription="Р”РµРєРѕСЂР°С‚РёРІРЅР°СЏ РёРєРѕРЅРєР° СЃСѓРјРєРё"
        android:rotation="-120"
        android:src="@drawable/ic_bag"
        android:tint="#6097FF"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintTop_toTopOf="parent" />

    <!-- РћСЃРЅРѕРІРЅРѕР№ РєРѕРЅС‚РµРЅС‚ -->

    <ImageView
        android:id="@+id/bottomBoxIcon"
        android:layout_width="170dp"
        android:layout_height="170dp"
        android:layout_marginStart="4dp"
        android:layout_marginBottom="660dp"
        android:alpha="0.35"
        android:contentDescription="Р”РµРєРѕСЂР°С‚РёРІРЅР°СЏ РёРєРѕРЅРєР° РєРѕСЂРѕР±РєРё"
        android:rotation="-25"
        android:src="@drawable/ic_box"
        android:tint="#6097FF"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintStart_toStartOf="parent" />

    <ImageView
        android:id="@+id/bottomBoxIcon4"
        android:layout_width="170dp"
        android:layout_height="170dp"
        android:layout_marginStart="-30dp"
        android:layout_marginBottom="-40dp"
        android:alpha="0.35"
        android:contentDescription="Р”РµРєРѕСЂР°С‚РёРІРЅР°СЏ РёРєРѕРЅРєР° РєРѕСЂРѕР±РєРё"
        android:rotation="25"
        android:src="@drawable/ic_box"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintStart_toStartOf="parent" />

    <androidx.cardview.widget.CardView
        android:layout_width="0dp"
        android:layout_height="wrap_content"
        android:layout_marginHorizontal="16dp"
        app:cardBackgroundColor="#FFFFFF"
        app:cardCornerRadius="20dp"
        app:cardElevation="6dp"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent">

        <LinearLayout
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:orientation="vertical"
            android:padding="40dp">

            <!-- Р—Р°РіРѕР»РѕРІРѕРє -->
            <TextView
                android:id="@+id/title"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_gravity="center"
                android:layout_marginBottom="24dp"
                android:fontFamily="@font/montserratbold"
                android:text="РђРІС‚РѕСЂРёР·Р°С†РёСЏ РґР»СЏ РїСЂРѕРґР°РІС†Р°"
                android:textColor="#EC407A"
                android:textSize="24sp" />

            <!-- РџРѕР»Рµ РґР»СЏ РІРІРѕРґР° Р»РѕРіРёРЅР° -->
            <com.google.android.material.textfield.TextInputLayout
                android:id="@+id/loginInputLayout"
                style="@style/CustomTextInputLayout"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginBottom="16dp"
                app:boxBackgroundMode="outline"
                app:boxStrokeColor="#42A5F5"
                app:hintTextColor="#90A4AE"
                app:startIconDrawable="@drawable/ic_user"
                app:startIconTint="#42A5F5">

                <com.google.android.material.textfield.TextInputEditText
                    android:id="@+id/loginField"
                    style="@style/CustomTextInputEditText"
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:background="@null"
                    android:fontFamily="@font/montserratregular"
                    android:hint="Р›РѕРіРёРЅ"
                    android:inputType="text"
                    android:padding="12dp"
                    android:textColor="#37474F"
                    android:textSize="16sp" />
            </com.google.android.material.textfield.TextInputLayout>

            <!-- РџРѕР»Рµ РґР»СЏ РІРІРѕРґР° РїР°СЂРѕР»СЏ -->
            <com.google.android.material.textfield.TextInputLayout
                android:id="@+id/passwordInputLayout"
                style="@style/CustomTextInputLayout"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginBottom="24dp"
                app:boxBackgroundMode="outline"
                app:boxStrokeColor="#42A5F5"
                app:hintTextColor="#90A4AE"
                app:passwordToggleEnabled="true"
                app:passwordToggleTint="#42A5F5"
                app:startIconDrawable="@drawable/ic_lock"
                app:startIconTint="#42A5F5">

                <com.google.android.material.textfield.TextInputEditText
                    android:id="@+id/passwordField"
                    style="@style/CustomTextInputEditText"
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:background="@null"
                    android:fontFamily="@font/montserratregular"
                    android:hint="РџР°СЂРѕР»СЊ"
                    android:inputType="textPassword"
                    android:padding="12dp"
                    android:textColor="#37474F"
                    android:textSize="16sp" />
            </com.google.android.material.textfield.TextInputLayout>

            <!-- РљРЅРѕРїРєР° РІС…РѕРґР° -->
            <com.google.android.material.button.MaterialButton
                android:id="@+id/loginButton"
                android:layout_width="match_parent"
                android:layout_height="54dp"
                android:layout_marginBottom="24dp"
                android:backgroundTint="#EC407A"
                android:text="Р’РѕР№С‚Рё"
                android:textColor="#FFFFFF"
                android:textSize="16sp"
                app:cornerRadius="12dp"
                app:icon="@drawable/ic_login"
                app:iconGravity="end"
                app:iconTint="#FFFFFF" />
            <ProgressBar
                android:id="@+id/progressBar"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:visibility="gone"
                android:layout_gravity="center"
                android:layout_marginTop="16dp"
                app:layout_constraintTop_toBottomOf="@id/passwordField"
                app:layout_constraintStart_toStartOf="parent"
                app:layout_constraintEnd_toEndOf="parent" />

            <!-- РЎСЃС‹Р»РєРё -->
            <TextView
                android:id="@+id/buyerAuthLink"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_gravity="center"
                android:layout_marginBottom="12dp"
                android:fontFamily="@font/montserratregular"
                android:text="Р’РѕР№С‚Рё РєР°Рє РїРѕРєСѓРїР°С‚РµР»СЊ"
                android:textColor="#42A5F5"
                android:textSize="14sp" />

            <TextView
                android:id="@+id/forgotPasswordLink"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_gravity="center"
                android:fontFamily="@font/montserratregular"
                android:text="Р—Р°Р±С‹Р»Рё РїР°СЂРѕР»СЊ?"
                android:textColor="#EC407A"
                android:textSize="14sp" />
        </LinearLayout>
    </androidx.cardview.widget.CardView>

    <!-- Р”РѕРїРѕР»РЅРёС‚РµР»СЊРЅС‹Рµ РґРµРєРѕСЂР°С‚РёРІРЅС‹Рµ СЌР»РµРјРµРЅС‚С‹ -->
    <ImageView
        android:id="@+id/bottomToyIcon"
        android:layout_width="90dp"
        android:layout_height="90dp"
        android:layout_marginEnd="4dp"
        android:layout_marginBottom="4dp"
        android:alpha="0.35"
        android:contentDescription="Р”РµРєРѕСЂР°С‚РёРІРЅР°СЏ РёРєРѕРЅРєР° РёРіСЂСѓС€РєРё"
        android:rotation="-60"
        android:src="@drawable/ic_toy"
        android:tint="#6097FF"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent" />

</androidx.constraintlayout.widget.ConstraintLayout>

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\res\layout\cart_layout.xml
<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:background="#E6E6FA">

    <!-- Р”РµРєРѕСЂР°С‚РёРІРЅС‹Рµ СЌР»РµРјРµРЅС‚С‹ -->
    <ImageView
        android:id="@+id/topBagIcon"
        android:layout_width="110dp"
        android:layout_height="110dp"
        android:alpha="0.35"
        android:contentDescription="Р”РµРєРѕСЂР°С‚РёРІРЅР°СЏ РёРєРѕРЅРєР° СЃСѓРјРєРё"
        android:rotation="20"
        android:src="@drawable/ic_bag"
        android:layout_marginTop="-30dp"
        android:layout_marginEnd="-10dp"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintEnd_toEndOf="parent" />

    <!-- РћСЃРЅРѕРІРЅР°СЏ РєР°СЂС‚РѕС‡РєР° СЃ СЃРѕРґРµСЂР¶РёРјС‹Рј -->
    <androidx.cardview.widget.CardView
        android:layout_width="0dp"
        android:layout_height="0dp"
        android:layout_margin="16dp"
        app:cardCornerRadius="20dp"
        app:cardElevation="6dp"
        app:cardBackgroundColor="#FFFFFF"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintEnd_toEndOf="parent">

        <LinearLayout
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:orientation="vertical"
            android:padding="20dp">

            <!-- Р—Р°РіРѕР»РѕРІРѕРє СЃ РёРєРѕРЅРєРѕР№ -->
            <LinearLayout
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginBottom="16dp"
                android:gravity="center_vertical"
                android:orientation="horizontal">

                <ImageView
                    android:layout_width="32dp"
                    android:layout_height="32dp"
                    android:layout_marginEnd="12dp"
                    android:src="@drawable/ic_cart"
                    android:tint="#EC407A" />

                <TextView
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"
                    android:fontFamily="@font/montserratbold"
                    android:text="Р’Р°С€Р° РєРѕСЂР·РёРЅР°"
                    android:textColor="#EC407A"
                    android:textSize="24sp"
                    android:textStyle="bold" />
            </LinearLayout>

            <!-- РЎРїРёСЃРѕРє С‚РѕРІР°СЂРѕРІ СЃ РІС‹РґРµР»РёС‚РµР»СЏРјРё -->
            <androidx.recyclerview.widget.RecyclerView
                android:id="@+id/cartRecyclerView"
                android:layout_width="match_parent"
                android:layout_height="0dp"
                android:layout_marginBottom="16dp"
                android:layout_weight="1"
                android:background="@drawable/bg_recycler_view"
                android:clipToPadding="false"
                android:divider="@drawable/divider_item_decoration"
                android:dividerPadding="8dp"
                android:paddingTop="8dp"
                android:paddingBottom="8dp"
                android:scrollbars="vertical" />

            <!-- РћР±С‰Р°СЏ СЃСѓРјРјР° СЃ РёРєРѕРЅРєРѕР№ -->
            <LinearLayout
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginBottom="16dp"
                android:gravity="center_vertical"
                android:orientation="horizontal">

                <ImageView
                    android:layout_width="24dp"
                    android:layout_height="24dp"
                    android:layout_marginEnd="12dp"
                    android:src="@drawable/ic_total"
                    android:tint="#001A34" />

                <TextView
                    android:id="@+id/totalAmount"
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"
                    android:fontFamily="@font/montserratbold"
                    android:text="РћР±С‰Р°СЏ СЃСѓРјРјР°: 0 в‚Ѕ"
                    android:textColor="#001A34"
                    android:textSize="20sp"
                    android:textStyle="bold" />
            </LinearLayout>

            <!-- РљРЅРѕРїРєРё -->
            <com.google.android.material.button.MaterialButton
                android:id="@+id/clearCartButton"
                android:layout_width="match_parent"
                android:layout_height="50dp"
                android:layout_marginBottom="12dp"
                android:backgroundTint="#005BFF"
                android:fontFamily="@font/montserratsemibold"
                android:text="РћС‡РёСЃС‚РёС‚СЊ РєРѕСЂР·РёРЅСѓ"
                android:textColor="#FFFFFF"
                android:textSize="18sp"
                app:cornerRadius="12dp"
                app:icon="@drawable/ic_delete"
                app:iconGravity="start"
                app:iconPadding="8dp"
                app:iconTint="#FFFFFF" />

            <com.google.android.material.button.MaterialButton
                android:id="@+id/checkoutButton"
                android:layout_width="match_parent"
                android:layout_height="50dp"
                android:backgroundTint="#EC407A"
                android:fontFamily="@font/montserratsemibold"
                android:text="РџРµСЂРµР№С‚Рё Рє РѕРїР»Р°С‚Рµ"
                android:textColor="#FFFFFF"
                android:textSize="18sp"
                app:cornerRadius="12dp"
                app:icon="@drawable/ic_payment"
                app:iconGravity="start"
                app:iconPadding="8dp"
                app:iconTint="#FFFFFF" />
        </LinearLayout>
    </androidx.cardview.widget.CardView>

    <!-- Р”РµРєРѕСЂР°С‚РёРІРЅС‹Рµ СЌР»РµРјРµРЅС‚С‹ -->
    <ImageView
        android:id="@+id/bottomBoxIcon"
        android:layout_width="120dp"
        android:layout_height="120dp"
        android:layout_marginStart="-30dp"
        android:layout_marginBottom="-40dp"
        android:alpha="0.35"
        android:contentDescription="Р”РµРєРѕСЂР°С‚РёРІРЅР°СЏ РёРєРѕРЅРєР° РєРѕСЂРѕР±РєРё"
        android:rotation="25"
        android:src="@drawable/ic_box"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintStart_toStartOf="parent" />

    <ImageView
        android:id="@+id/bottomToyIcon"
        android:layout_width="90dp"
        android:layout_height="90dp"
        android:layout_marginEnd="-40dp"
        android:layout_marginBottom="8dp"
        android:alpha="0.35"
        android:contentDescription="Р”РµРєРѕСЂР°С‚РёРІРЅР°СЏ РёРєРѕРЅРєР° РёРіСЂСѓС€РєРё"
        android:rotation="-20"
        android:src="@drawable/ic_toy"
        android:tint="#6097FF"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent" />
</androidx.constraintlayout.widget.ConstraintLayout>

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\res\layout\catalog_layout.xml
<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:background="#E6E6FA"
    tools:context=".CatalogActivity">

    <!-- Р”РµРєРѕСЂР°С‚РёРІРЅС‹Рµ СЌР»РµРјРµРЅС‚С‹ -->
    <ImageView
        android:id="@+id/topBagIcon"
        android:layout_width="110dp"
        android:layout_height="110dp"
        android:alpha="0.35"
        android:contentDescription="Р”РµРєРѕСЂР°С‚РёРІРЅР°СЏ РёРєРѕРЅРєР° СЃСѓРјРєРё"
        android:rotation="20"
        android:src="@drawable/ic_bag"
        android:layout_marginTop="-30dp"
        android:layout_marginEnd="-10dp"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintEnd_toEndOf="parent" />

    <!-- РћСЃРЅРѕРІРЅР°СЏ РєР°СЂС‚РѕС‡РєР° -->
    <androidx.cardview.widget.CardView
        android:layout_width="0dp"
        android:layout_height="0dp"
        android:layout_margin="16dp"
        app:cardCornerRadius="20dp"
        app:cardElevation="6dp"
        app:cardBackgroundColor="#FFFFFF"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintEnd_toEndOf="parent">

        <LinearLayout
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:orientation="vertical"
            android:padding="20dp">

            <!-- Р—Р°РіРѕР»РѕРІРѕРє -->
            <LinearLayout
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:orientation="horizontal"
                android:gravity="center_vertical"
                android:layout_marginBottom="16dp">

                <ImageView
                    android:layout_width="32dp"
                    android:layout_height="32dp"
                    android:src="@drawable/catalog"
                    android:tint="#EC407A"
                    android:layout_marginEnd="12dp"/>

                <TextView
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"
                    android:text="РљР°С‚Р°Р»РѕРі С‚РѕРІР°СЂРѕРІ"
                    android:textSize="24sp"
                    android:textStyle="bold"
                    android:textColor="#EC407A"
                    android:fontFamily="@font/montserratbold"/>
            </LinearLayout>

            <!-- РћР±СЉРµРґРёРЅС‘РЅРЅС‹Р№ Р±Р»РѕРє РїРѕРёСЃРєР° Рё С„РёР»СЊС‚СЂРѕРІ -->
            <RelativeLayout
                android:layout_width="match_parent"
                android:layout_height="56dp"
                android:layout_marginBottom="16dp">

                <!-- РћР±С‰РёР№ С„РѕРЅ РґР»СЏ РїРѕР»СЏ РїРѕРёСЃРєР° -->
                <View
                    android:id="@+id/search_background"
                    android:layout_width="0dp"
                    android:layout_height="match_parent"
                    android:layout_toStartOf="@+id/searchButton"
                android:layout_alignParentStart="true"
                android:layout_marginEnd="1dp"
                android:background="@drawable/search_field_background" />

                <!-- РџРѕР»Рµ РІРІРѕРґР° -->
                <EditText
                    android:id="@+id/searchBar"
                    android:layout_width="0dp"
                    android:layout_height="match_parent"
                    android:layout_toStartOf="@+id/searchButton"
                android:layout_alignParentStart="true"
                android:background="@null"
                android:hint="РџРѕРёСЃРє С‚РѕРІР°СЂРѕРІ"
                android:paddingStart="20dp"
                android:paddingEnd="16dp"
                android:textColor="#001A34"
                android:textSize="16sp"
                android:fontFamily="@font/montserratregular"/>

                <!-- РљРЅРѕРїРєР° РїРѕРёСЃРєР° -->
                <com.google.android.material.button.MaterialButton
                    android:id="@+id/searchButton"
                    style="@style/Widget.MaterialComponents.Button.Icon"
                    android:layout_width="56dp"
                    android:layout_height="56dp"
                    android:layout_toStartOf="@+id/filterButton"
                android:layout_marginEnd="8dp"
                android:background="@drawable/search_button_bg"
                android:contentDescription="РџРѕРёСЃРє"
                app:backgroundTint="@null"
                app:icon="@drawable/serch"
                app:iconGravity="start"
                app:iconPadding="0dp"
                app:iconSize="28dp"
                app:iconTint="#FFFFFF" />

                <!-- РљРЅРѕРїРєР° С„РёР»СЊС‚СЂРѕРІ -->
                <com.google.android.material.button.MaterialButton
                    android:id="@+id/filterButton"
                    style="@style/Widget.MaterialComponents.Button.Icon"
                    android:layout_width="56dp"
                    android:layout_height="match_parent"
                    android:layout_alignParentEnd="true"
                    android:layout_marginStart="8dp"
                    app:backgroundTint="#E6F0FF"
                    app:cornerRadius="12dp"
                    app:icon="@drawable/ic_filter_alt"
                    app:iconGravity="start"
                    app:iconPadding="0dp"
                    app:iconSize="28dp"
                    app:iconTint="#005BFF"
                    app:rippleColor="#80D1E8FF" />
            </RelativeLayout>

            <!-- RecyclerView -->
            <androidx.recyclerview.widget.RecyclerView
                android:id="@+id/recyclerView"
                android:layout_width="wrap_content"
                android:layout_height="0dp"
                android:layout_weight="1" />

            <!-- EmptyView -->
            <TextView
                android:id="@+id/emptyView"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:text="РќРёС‡РµРіРѕ РЅРµ РЅР°Р№РґРµРЅРѕ"
                android:visibility="gone"
                android:layout_gravity="center"
                android:textSize="16sp"
                android:textColor="#001A34"
                android:fontFamily="@font/montserratregular"
                android:layout_marginTop="32dp"/>
        </LinearLayout>
    </androidx.cardview.widget.CardView>

    <!-- Р”РµРєРѕСЂР°С‚РёРІРЅС‹Рµ СЌР»РµРјРµРЅС‚С‹ -->
    <ImageView
        android:id="@+id/bottomBoxIcon"
        android:layout_width="120dp"
        android:layout_height="120dp"
        android:src="@drawable/ic_box"
        android:alpha="0.35"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintStart_toStartOf="parent"/>

    <ImageView
        android:id="@+id/bottomToyIcon"
        android:layout_width="90dp"
        android:layout_height="90dp"
        android:alpha="0.35"
        android:tint="#6097FF"
        android:src="@drawable/ic_toy"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"/>
</androidx.constraintlayout.widget.ConstraintLayout>

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\res\layout\catalog_seller_layout.xml
<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:background="#E6E6FA"
    tools:context=".CustomerMainActivity">

    <!-- Р”РµРєРѕСЂР°С‚РёРІРЅС‹Рµ СЌР»РµРјРµРЅС‚С‹ -->
<ImageView
    android:id="@+id/topBagIcon"
    android:layout_width="110dp"
    android:layout_height="110dp"
    android:alpha="0.35"
    android:contentDescription="Р”РµРєРѕСЂР°С‚РёРІРЅР°СЏ РёРєРѕРЅРєР° СЃСѓРјРєРё"
    android:rotation="20"
    android:src="@drawable/ic_bag"
    android:layout_marginTop="-30dp"
    android:layout_marginEnd="-10dp"
    app:layout_constraintTop_toTopOf="parent"
    app:layout_constraintEnd_toEndOf="parent" />

    <!-- РћСЃРЅРѕРІРЅР°СЏ РєР°СЂС‚РѕС‡РєР° -->
<androidx.cardview.widget.CardView
android:layout_width="0dp"
android:layout_height="0dp"
android:layout_margin="16dp"
app:cardCornerRadius="20dp"
app:cardElevation="6dp"
app:cardBackgroundColor="#FFFFFF"
app:layout_constraintTop_toTopOf="parent"
app:layout_constraintBottom_toBottomOf="parent"
app:layout_constraintStart_toStartOf="parent"
app:layout_constraintEnd_toEndOf="parent">

<LinearLayout
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"
    android:padding="20dp">

    <!-- Р—Р°РіРѕР»РѕРІРѕРє -->
    <LinearLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:orientation="horizontal"
        android:gravity="center_vertical"
        android:layout_marginBottom="16dp">

        <ImageView
            android:layout_width="32dp"
            android:layout_height="32dp"
            android:src="@drawable/catalog"
            android:tint="#EC407A"
            android:layout_marginEnd="12dp"/>

        <TextView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="РЎРїРёСЃРѕРє С‚РѕРІР°СЂРѕРІ"
            android:textSize="24sp"
            android:textStyle="bold"
            android:textColor="#EC407A"
            android:fontFamily="@font/montserratbold"/>
    </LinearLayout>

    <!-- RecyclerView -->
    <androidx.recyclerview.widget.RecyclerView
        android:id="@+id/recyclerView"
        android:layout_width="match_parent"
        android:layout_height="0dp"
        android:layout_weight="1"
        android:scrollbars="vertical"
        android:padding="4dp"
        android:background="@android:color/transparent" />

    <!-- РўРµРєСЃС‚ "РќРёС‡РµРіРѕ РЅРµ РЅР°Р№РґРµРЅРѕ" -->
    <TextView
        android:id="@+id/emptyView"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="РќРёС‡РµРіРѕ РЅРµ РЅР°Р№РґРµРЅРѕ"
        android:textSize="16sp"
        android:textColor="#001A34"
        android:fontFamily="@font/montserratregular"
        android:visibility="gone"
        android:layout_gravity="center"
        android:layout_marginTop="32dp"/>
</LinearLayout>
</androidx.cardview.widget.CardView>

    <!-- Р”РµРєРѕСЂР°С‚РёРІРЅС‹Рµ СЌР»РµРјРµРЅС‚С‹ -->
<ImageView
android:id="@+id/bottomBoxIcon"
android:layout_width="120dp"
android:layout_height="120dp"
android:src="@drawable/ic_box"
android:alpha="0.35"
app:layout_constraintBottom_toBottomOf="parent"
app:layout_constraintStart_toStartOf="parent"/>

<ImageView
android:id="@+id/bottomToyIcon"
android:layout_width="90dp"
android:layout_height="90dp"
android:alpha="0.35"
android:tint="#6097FF"
android:src="@drawable/ic_toy"
app:layout_constraintBottom_toBottomOf="parent"
app:layout_constraintEnd_toEndOf="parent"/>
    </androidx.constraintlayout.widget.ConstraintLayout>

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\res\layout\change_password_layout.xml
<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:layout_width="match_parent"
    android:layout_height="wrap_content"
    android:orientation="vertical"
    android:padding="24dp"
    android:background="@drawable/bg_rounded_dialog">

    <!-- Р—Р°РіРѕР»РѕРІРѕРє -->
    <TextView
        android:id="@+id/title"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="РЎРјРµРЅР° РїР°СЂРѕР»СЏ"
        android:textColor="#001A34"
        android:textSize="20sp"
        android:fontFamily="@font/montserratbold"
    android:layout_marginBottom="16dp"/>

    <!-- РџРѕР»Рµ РґР»СЏ РІРІРѕРґР° РЅРѕРІРѕРіРѕ РїР°СЂРѕР»СЏ -->
    <com.google.android.material.textfield.TextInputLayout
        android:id="@+id/newPasswordLayout"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_marginBottom="12dp"
    app:boxBackgroundMode="outline"
    app:boxStrokeColor="#005BFF"
    app:hintTextColor="#005BFF"
    app:startIconDrawable="@drawable/ic_lock"
    app:startIconTint="#005BFF"
        style="@style/CustomTextInputLayout"
    app:passwordToggleEnabled="true"
    app:passwordToggleDrawable="@drawable/ic_visibility"
    app:passwordToggleTint="#005BFF">

    <com.google.android.material.textfield.TextInputEditText
        android:id="@+id/newPasswordField"
        android:layout_width="match_parent"
        style="@style/CustomTextInputEditText"
        android:layout_height="wrap_content"
        android:hint="РќРѕРІС‹Р№ РїР°СЂРѕР»СЊ"
        android:inputType="textPassword"
        android:imeOptions="actionNext"
    android:textColor="#001A34"
    android:textSize="16sp"
    android:fontFamily="@font/montserratregular"/>
</com.google.android.material.textfield.TextInputLayout>

    <!-- РџРѕР»Рµ РґР»СЏ РїРѕРґС‚РІРµСЂР¶РґРµРЅРёСЏ РЅРѕРІРѕРіРѕ РїР°СЂРѕР»СЏ -->
<com.google.android.material.textfield.TextInputLayout
android:id="@+id/confirmPasswordLayout"
android:layout_width="match_parent"
android:layout_height="wrap_content"
android:layout_marginBottom="16dp"
    style="@style/CustomTextInputLayout"
app:boxBackgroundMode="outline"
    app:boxStrokeColor="#005BFF"
    app:hintTextColor="#005BFF"
    app:startIconDrawable="@drawable/ic_lock"
    app:startIconTint="#005BFF"
    app:passwordToggleEnabled="true"
    app:passwordToggleDrawable="@drawable/ic_visibility"
    app:passwordToggleTint="#005BFF">

<com.google.android.material.textfield.TextInputEditText
android:id="@+id/confirmPasswordField"
android:layout_width="match_parent"
android:layout_height="wrap_content"
    style="@style/CustomTextInputEditText"
    android:hint="РџРѕРІС‚РѕСЂРёС‚Рµ РЅРѕРІС‹Р№ РїР°СЂРѕР»СЊ"
android:inputType="textPassword"
android:imeOptions="actionDone"
    android:textColor="#001A34"
    android:textSize="16sp"
    android:fontFamily="@font/montserratregular"/>
    </com.google.android.material.textfield.TextInputLayout>

    <!-- РљРЅРѕРїРєРё -->
<LinearLayout
android:layout_width="match_parent"
android:layout_height="wrap_content"
android:orientation="horizontal"
android:layout_marginTop="8dp">

<!-- РљРЅРѕРїРєР° РЎРѕС…СЂР°РЅРёС‚СЊ -->
<com.google.android.material.button.MaterialButton
    android:id="@+id/savePasswordButton"
    android:layout_width="0dp"
    android:layout_height="48dp"
    android:layout_weight="1"
    android:layout_marginStart="4dp"
    android:text="РЎРѕС…СЂР°РЅРёС‚СЊ"
    android:textColor="#FFFFFF"
    android:backgroundTint="#005BFF"
    android:textSize="16sp"
    android:fontFamily="@font/montserratsemibold"
    app:cornerRadius="8dp"/>
</LinearLayout>
    </LinearLayout>

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\res\layout\confirm_password_dialog.xml
<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:layout_width="match_parent"
    android:layout_height="wrap_content"
    android:orientation="vertical"
    android:padding="24dp"
    android:background="@drawable/bg_rounded_dialog">

    <!-- Р—Р°РіРѕР»РѕРІРѕРє -->
    <TextView
        android:id="@+id/title"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="РџРѕРґС‚РІРµСЂР¶РґРµРЅРёРµ РїР°СЂРѕР»СЏ"
        android:textColor="#001A34"
        android:textSize="20sp"
        android:fontFamily="@font/montserratbold"
    android:layout_marginBottom="16dp"/>

    <!-- РџРѕР»Рµ РґР»СЏ РІРІРѕРґР° СЃС‚Р°СЂРѕРіРѕ РїР°СЂРѕР»СЏ -->
    <com.google.android.material.textfield.TextInputLayout
        android:id="@+id/oldPasswordLayout"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_marginBottom="16dp"
    app:boxBackgroundMode="outline"
    app:boxStrokeColor="#005BFF"
    app:hintTextColor="#005BFF"
    app:startIconDrawable="@drawable/ic_lock"
    app:startIconTint="#005BFF"
        style="@style/CustomTextInputLayout"
    app:passwordToggleEnabled="true"
    app:passwordToggleDrawable="@drawable/ic_visibility"
    app:passwordToggleTint="#005BFF">

    <com.google.android.material.textfield.TextInputEditText
        android:id="@+id/etOldPassword"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:hint="РЎС‚Р°СЂС‹Р№ РїР°СЂРѕР»СЊ"
        android:inputType="textPassword"
        style="@style/CustomTextInputEditText"
        android:imeOptions="actionDone"
    android:textColor="#001A34"
    android:textSize="16sp"
    android:fontFamily="@font/montserratregular"/>
</com.google.android.material.textfield.TextInputLayout>

    <!-- РљРЅРѕРїРєРё -->
<LinearLayout
android:layout_width="match_parent"
android:layout_height="wrap_content"
android:orientation="horizontal"
android:layout_marginTop="8dp"> <!-- РћС‚СЃС‚СѓРї РїРµСЂРµРґ РєРЅРѕРїРєР°РјРё РєР°Рє РІ РїСЂРёРјРµСЂРµ -->

<!-- РљРЅРѕРїРєР° РћС‚РјРµРЅР° -->
<com.google.android.material.button.MaterialButton
    android:id="@+id/cancelButton"
    android:layout_width="0dp"
    android:layout_height="48dp"
    android:layout_weight="1"
    android:layout_marginEnd="4dp"
    android:text="РћС‚РјРµРЅР°"
    android:textColor="#005BFF"
    android:backgroundTint="#E6F0FF"
android:textSize="16sp"
android:fontFamily="@font/montserratsemibold"
app:cornerRadius="8dp"/>

<!-- РљРЅРѕРїРєР° РџРѕРґС‚РІРµСЂРґРёС‚СЊ -->
<com.google.android.material.button.MaterialButton
    android:id="@+id/btnConfirm"
    android:layout_width="0dp"
    android:layout_height="48dp"
    android:layout_weight="1"
    android:layout_marginStart="4dp"
    android:text="РџРѕРґС‚РІРµСЂРґРёС‚СЊ"
    android:textColor="#FFFFFF"
    android:backgroundTint="#005BFF"
    android:textSize="12sp"
    android:fontFamily="@font/montserratsemibold"
app:cornerRadius="8dp"/>
</LinearLayout>

    <!-- РљРЅРѕРїРєР° РґР»СЏ РІРѕСЃСЃС‚Р°РЅРѕРІР»РµРЅРёСЏ РїР°СЂРѕР»СЏ -->
<com.google.android.material.button.MaterialButton
android:id="@+id/btnForgotPassword"
android:layout_width="match_parent"
android:layout_height="48dp"
android:text="Р—Р°Р±С‹Р»Рё РїР°СЂРѕР»СЊ?"
android:textColor="#005BFF"
android:backgroundTint="@android:color/transparent"
    android:textSize="16sp"
    android:fontFamily="@font/montserratsemibold"
    android:layout_marginTop="8dp"
    android:visibility="gone"
    app:cornerRadius="8dp"
    style="@style/Widget.MaterialComponents.Button.TextButton"/> <!-- РЎС‚РёР»СЊ С‚РµРєСЃС‚РѕРІРѕР№ РєРЅРѕРїРєРё -->
    </LinearLayout>

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\res\layout\create_product_layout.xml
<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:background="#E6E6FA">

    <ImageView
        android:id="@+id/topBagIcon"
        android:layout_width="80dp"
        android:layout_height="80dp"
        android:alpha="0.35"
        android:contentDescription="Р”РµРєРѕСЂР°С‚РёРІРЅР°СЏ РёРєРѕРЅРєР° СЃСѓРјРєРё"
        android:rotation="20"
        android:src="@drawable/ic_bag"
        android:layout_marginTop="-20dp"
        android:layout_marginEnd="-8dp"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintEnd_toEndOf="parent" />

    <androidx.cardview.widget.CardView
        android:layout_width="0dp"
        android:layout_height="0dp"
        android:layout_margin="16dp"
        app:cardCornerRadius="20dp"
        app:cardElevation="6dp"
        app:cardBackgroundColor="#FFFFFF"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintEnd_toEndOf="parent">

        <LinearLayout
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:orientation="vertical"
            android:padding="20dp"
            android:gravity="center">

            <LinearLayout
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:orientation="horizontal"
                android:gravity="center_vertical"
                android:layout_marginBottom="16dp">

                <ImageView
                    android:layout_width="28dp"
                    android:layout_height="28dp"
                    android:src="@drawable/ic_add_product"
                    android:tint="#EC407A"
                    android:layout_marginEnd="10dp"/>

                <TextView
                    android:id="@+id/title"
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"
                    android:text="Р”РѕР±Р°РІР»РµРЅРёРµ С‚РѕРІР°СЂР°"
                    android:textColor="#EC407A"
                    android:textSize="24sp"
                    android:fontFamily="@font/montserratbold"
                    android:textStyle="bold"/>
            </LinearLayout>

            <com.google.android.material.textfield.TextInputLayout
                android:id="@+id/productNameLayout"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginBottom="12dp"
                app:boxBackgroundMode="outline"
                app:boxStrokeColor="#005BFF"
                style="@style/CustomTextInputLayout"
            app:hintTextColor="#005BFF"
                app:boxCornerRadiusTopStart="12dp"
                app:boxCornerRadiusTopEnd="12dp"
                app:boxCornerRadiusBottomStart="12dp"
                app:boxCornerRadiusBottomEnd="12dp">

                <com.google.android.material.textfield.TextInputEditText
                    android:id="@+id/productNameInput"
                    android:layout_width="match_parent"
                    style="@style/CustomTextInputEditText"
                    android:layout_height="wrap_content"
                    android:hint="РќР°Р·РІР°РЅРёРµ С‚РѕРІР°СЂР°"
                    android:textSize="14sp"
                    android:textColor="#001A34"
                    android:padding="10dp"
                    android:fontFamily="@font/montserratregular"
                    android:contentDescription="РџРѕР»Рµ РґР»СЏ РІРІРѕРґР° РЅР°Р·РІР°РЅРёСЏ С‚РѕРІР°СЂР°"/>
            </com.google.android.material.textfield.TextInputLayout>


            <com.google.android.material.textfield.TextInputLayout
                android:id="@+id/productTypeLayout"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginBottom="12dp"
                app:boxBackgroundMode="outline"
                app:boxStrokeColor="#005BFF"
                app:hintTextColor="#005BFF"
                app:boxCornerRadiusTopStart="12dp"
            app:boxCornerRadiusTopEnd="12dp"
                app:boxCornerRadiusBottomStart="12dp"
                app:boxCornerRadiusBottomEnd="12dp"
                android:background="@drawable/spinner_background">  <!-- РљР°СЃС‚РѕРјРЅС‹Р№ С„РѕРЅ СЃ РѕР±РІРѕРґРєРѕР№ -->

                <Spinner
                    android:id="@+id/productTypeSpinner"
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:hint="РљР°С‚РµРіРѕСЂРёСЏ С‚РѕРІР°СЂР°"
                    android:padding="10dp"
                    android:textSize="14sp"
                    android:textColor="#001A34"
                    android:fontFamily="@font/montserratregular"
                    android:contentDescription="Р’С‹РїР°РґР°СЋС‰РёР№ СЃРїРёСЃРѕРє РґР»СЏ РІС‹Р±РѕСЂР° РєР°С‚РµРіРѕСЂРёРё С‚РѕРІР°СЂР°"
                    android:popupBackground="#FFFFFF"
                    android:spinnerMode="dropdown"
                    android:drawableEnd="@drawable/ic_dropdown"
                android:drawableTint="#005BFF" />

            </com.google.android.material.textfield.TextInputLayout>




            <com.google.android.material.textfield.TextInputLayout
                android:id="@+id/productPriceLayout"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginBottom="12dp"
                app:boxBackgroundMode="outline"
                app:boxStrokeColor="#005BFF"
                app:hintTextColor="#005BFF"
                app:boxCornerRadiusTopStart="12dp"
                app:boxCornerRadiusTopEnd="12dp"
                style="@style/CustomTextInputLayout"
            app:boxCornerRadiusBottomStart="12dp"
                app:boxCornerRadiusBottomEnd="12dp">

                <com.google.android.material.textfield.TextInputEditText
                    android:id="@+id/productPriceInput"
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    style="@style/CustomTextInputEditText"

                    android:hint="Р¦РµРЅР° С‚РѕРІР°СЂР°"
                    android:textSize="14sp"
                    android:textColor="#001A34"
                    android:padding="10dp"
                    android:inputType="numberDecimal"
                    android:fontFamily="@font/montserratregular"
                    android:contentDescription="РџРѕР»Рµ РґР»СЏ РІРІРѕРґР° С†РµРЅС‹ С‚РѕРІР°СЂР°"/>
            </com.google.android.material.textfield.TextInputLayout>

            <com.google.android.material.textfield.TextInputLayout
                android:id="@+id/productQuantityLayout"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginBottom="12dp"
                app:boxBackgroundMode="outline"
                app:boxStrokeColor="#005BFF"
                app:hintTextColor="#005BFF"
                app:boxCornerRadiusTopStart="12dp"
                     style="@style/CustomTextInputLayout"
            app:boxCornerRadiusTopEnd="12dp"
                app:boxCornerRadiusBottomStart="12dp"
                app:boxCornerRadiusBottomEnd="12dp">

                <com.google.android.material.textfield.TextInputEditText
                    android:id="@+id/productQuantityInput"
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    style="@style/CustomTextInputEditText"

                    android:hint="РљРѕР»РёС‡РµСЃС‚РІРѕ С‚РѕРІР°СЂР°"
                    android:textSize="14sp"
                    android:textColor="#001A34"
                    android:padding="10dp"
                    android:inputType="number"
                    android:fontFamily="@font/montserratregular"
                    android:contentDescription="РџРѕР»Рµ РґР»СЏ РІРІРѕРґР° РєРѕР»РёС‡РµСЃС‚РІР° С‚РѕРІР°СЂР°"/>
            </com.google.android.material.textfield.TextInputLayout>

            <com.google.android.material.textfield.TextInputLayout
                android:id="@+id/productDescriptionLayout"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginBottom="12dp"
                app:boxBackgroundMode="outline"
                app:boxStrokeColor="#005BFF"
                app:hintTextColor="#005BFF"
                app:boxCornerRadiusTopStart="12dp"
                app:boxCornerRadiusTopEnd="12dp"
                style="@style/CustomTextInputLayout"
            app:boxCornerRadiusBottomStart="12dp"
                app:boxCornerRadiusBottomEnd="12dp">

                <com.google.android.material.textfield.TextInputEditText
                    android:id="@+id/productDescriptionInput"
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    style="@style/CustomTextInputEditText"

                    android:hint="РћРїРёСЃР°РЅРёРµ С‚РѕРІР°СЂР°"
                    android:textSize="14sp"
                    android:textColor="#001A34"
                    android:padding="10dp"
                    android:fontFamily="@font/montserratregular"
                    android:contentDescription="РџРѕР»Рµ РґР»СЏ РІРІРѕРґР° РѕРїРёСЃР°РЅРёСЏ С‚РѕРІР°СЂР°"/>
            </com.google.android.material.textfield.TextInputLayout>

            <com.google.android.material.button.MaterialButton
                android:id="@+id/selectImageButton"
                android:layout_width="match_parent"
                android:layout_height="48dp"
                android:text="Р’С‹Р±СЂР°С‚СЊ РёР·РѕР±СЂР°Р¶РµРЅРёРµ"
                android:textColor="#FFFFFF"
                android:backgroundTint="#005BFF"
                android:textSize="16sp"
                android:fontFamily="@font/montserratsemibold"
                android:layout_marginBottom="12dp"
                app:cornerRadius="12dp"
                app:icon="@drawable/ic_image"
                app:iconTint="#FFFFFF"
                app:iconGravity="start"
                app:iconPadding="8dp"
                android:contentDescription="РљРЅРѕРїРєР° РґР»СЏ РІС‹Р±РѕСЂР° РёР·РѕР±СЂР°Р¶РµРЅРёСЏ С‚РѕРІР°СЂР°"/>

            <ImageView
                android:id="@+id/productImagePreview"
                android:layout_width="match_parent"
                android:layout_height="120dp"
                android:layout_marginBottom="16dp"
                android:background="#F1F1F1"
                android:contentDescription="РџСЂРµРІСЊСЋ РёР·РѕР±СЂР°Р¶РµРЅРёСЏ С‚РѕРІР°СЂР°"
                android:scaleType="centerCrop" />

            <com.google.android.material.button.MaterialButton
                android:id="@+id/saveProductButton"
                android:layout_width="match_parent"
                android:layout_height="48dp"
                android:text="РЎРѕС…СЂР°РЅРёС‚СЊ С‚РѕРІР°СЂ"
                android:textColor="#FFFFFF"
                android:backgroundTint="#005BFF"
                android:textSize="16sp"
                android:fontFamily="@font/montserratsemibold"
                android:layout_marginBottom="12dp"
                app:cornerRadius="12dp"
                app:icon="@drawable/ic_save"
                app:iconTint="#FFFFFF"
                app:iconGravity="start"
                app:iconPadding="8dp"
                android:contentDescription="РљРЅРѕРїРєР° РґР»СЏ СЃРѕС…СЂР°РЅРµРЅРёСЏ С‚РѕРІР°СЂР°"/>
        </LinearLayout>
    </androidx.cardview.widget.CardView>

    <ImageView
        android:id="@+id/bottomBoxIcon"
        android:layout_width="90dp"
        android:layout_height="90dp"
        android:layout_marginStart="-20dp"
        android:layout_marginBottom="-30dp"
        android:alpha="0.35"
        android:contentDescription="Р”РµРєРѕСЂР°С‚РёРІРЅР°СЏ РёРєРѕРЅРєР° РєРѕСЂРѕР±РєРё"
        android:rotation="25"
        android:src="@drawable/ic_box"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintStart_toStartOf="parent" />

    <ImageView
        android:id="@+id/bottomToyIcon"
        android:layout_width="70dp"
        android:layout_height="70dp"
        android:layout_marginEnd="-30dp"
        android:layout_marginBottom="8dp"
        android:alpha="0.35"
        android:contentDescription="Р”РµРєРѕСЂР°С‚РёРІРЅР°СЏ РёРєРѕРЅРєР° РёРіСЂСѓС€РєРё"
        android:rotation="-20"
        android:src="@drawable/ic_toy"
        android:tint="#6097FF"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent" />
</androidx.constraintlayout.widget.ConstraintLayout>

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\res\layout\customer_layout.xml
<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:layout_width="match_parent"
    android:layout_height="match_parent">
    <FrameLayout
        android:id="@+id/frameLayout"
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:layout_above="@id/bottom_navigation" />

    <com.google.android.material.bottomnavigation.BottomNavigationView
        android:id="@+id/bottom_navigation"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_alignParentBottom="true"
        app:menu="@menu/bottom_navigation_menu"
        app:itemIconTint="#005BFF" /> <!-- Set icon color tint here -->

</RelativeLayout>

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\res\layout\delivery_widget.xml
<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="wrap_content"
    android:orientation="vertical"
    android:background="@drawable/widget_background"
    android:padding="16dp">

    <TextView
        android:id="@+id/delivery_date"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Р”Р°С‚Р° РґРѕСЃС‚Р°РІРєРё: "
        android:textColor="#001A34"
        android:textSize="16sp"
        android:fontFamily="@font/montserratsemibold"
        android:layout_marginBottom="8dp"/>

    <TextView
        android:id="@+id/time_remaining"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="РћСЃС‚Р°Р»РѕСЃСЊ: "
        android:textColor="#EC407A"
        android:textSize="14sp"
        android:fontFamily="@font/montserratregular"/>

</LinearLayout>

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\res\layout\dialog_add_quantity.xml
<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:layout_width="match_parent"
    android:layout_height="wrap_content"
    android:orientation="vertical"
    android:padding="24dp"
    android:background="@drawable/bg_rounded_dialog">

    <TextView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="Р’РІРµРґРёС‚Рµ РєРѕР»РёС‡РµСЃС‚РІРѕ"
        android:textColor="#001A34"
        android:textSize="20sp"
        android:fontFamily="@font/montserratbold"
        android:layout_marginBottom="16dp"/>

    <com.google.android.material.textfield.TextInputLayout
        android:id="@+id/quantityInputLayout"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        style="@style/CustomTextInputLayout"

        android:layout_marginBottom="16dp"
        app:boxBackgroundMode="outline"
        app:boxStrokeColor="#005BFF"
        app:hintTextColor="#005BFF"
        app:startIconDrawable="@drawable/ic_quantity"
        app:startIconTint="#005BFF">

        <com.google.android.material.textfield.TextInputEditText
            android:id="@+id/quantityInput"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:hint="РљРѕР»РёС‡РµСЃС‚РІРѕ"
            android:inputType="number"
            style="@style/CustomTextInputEditText"
            android:imeOptions="actionDone"
            android:textColor="#001A34"
            android:textSize="16sp"
            android:fontFamily="@font/montserratregular"/>
    </com.google.android.material.textfield.TextInputLayout>

    <LinearLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:orientation="horizontal"
        android:layout_marginTop="8dp">

        <com.google.android.material.button.MaterialButton
            android:id="@+id/cancelButton"
            android:layout_width="0dp"
            android:layout_height="48dp"
            android:layout_weight="1"
            android:layout_marginEnd="4dp"
            android:text="РћС‚РјРµРЅР°"
            android:textColor="#005BFF"
            android:backgroundTint="#E6F0FF"
            android:textSize="16sp"
            android:fontFamily="@font/montserratsemibold"
            app:cornerRadius="8dp"/>

        <com.google.android.material.button.MaterialButton
            android:id="@+id/saveButton"
            android:layout_width="0dp"
            android:layout_height="48dp"
            android:layout_weight="1"
            android:layout_marginStart="4dp"
            android:text="РЎРѕС…СЂР°РЅРёС‚СЊ"
            android:textColor="#FFFFFF"
            android:backgroundTint="#005BFF"
            android:textSize="13sp"
            android:fontFamily="@font/montserratsemibold"
            app:cornerRadius="8dp"/>
    </LinearLayout>
</LinearLayout>

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\res\layout\dialog_edit_product.xml
<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:layout_width="match_parent"
    android:layout_height="wrap_content"
    android:orientation="vertical"
    android:padding="24dp"
    android:background="@drawable/bg_rounded_dialog">

    <com.google.android.material.textfield.TextInputLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_marginBottom="12dp"
        app:boxBackgroundMode="outline"
        style="@style/CustomTextInputLayout"
        app:boxStrokeColor="#005BFF"
        app:hintTextColor="#005BFF"
        app:startIconDrawable="@drawable/ic_product_name"
        app:startIconTint="#005BFF">

        <com.google.android.material.textfield.TextInputEditText
            android:id="@+id/editName"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:hint="РќР°Р·РІР°РЅРёРµ С‚РѕРІР°СЂР°"
            style="@style/CustomTextInputEditText"
            android:inputType="text"
            android:imeOptions="actionNext"
            android:textColor="#001A34"
            android:textSize="16sp"
            android:fontFamily="@font/montserratregular"/>
    </com.google.android.material.textfield.TextInputLayout>

    <com.google.android.material.textfield.TextInputLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_marginBottom="12dp"
        app:boxBackgroundMode="outline"
        style="@style/CustomTextInputLayout"
        app:boxStrokeColor="#005BFF"
        app:hintTextColor="#005BFF"
        app:startIconDrawable="@drawable/ic_price"
        app:startIconTint="#005BFF">

        <com.google.android.material.textfield.TextInputEditText
            android:id="@+id/editPrice"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:hint="Р¦РµРЅР°"
            style="@style/CustomTextInputEditText"
            android:inputType="number"
            android:imeOptions="actionNext"
            android:textColor="#001A34"
            android:textSize="16sp"
            android:fontFamily="@font/montserratregular"/>
    </com.google.android.material.textfield.TextInputLayout>

    <com.google.android.material.textfield.TextInputLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_marginBottom="12dp"
        app:boxBackgroundMode="outline"
        app:boxStrokeColor="#005BFF"
        style="@style/CustomTextInputLayout"
        app:hintTextColor="#005BFF"
        app:startIconDrawable="@drawable/ic_description"
        app:startIconTint="#005BFF">

        <com.google.android.material.textfield.TextInputEditText
            android:id="@+id/editDescription"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:hint="РћРїРёСЃР°РЅРёРµ"
            android:inputType="textMultiLine"
            style="@style/CustomTextInputEditText"
            android:imeOptions="actionNext"
            android:textColor="#001A34"
            android:textSize="16sp"
            android:fontFamily="@font/montserratregular"/>
    </com.google.android.material.textfield.TextInputLayout>

    <com.google.android.material.textfield.TextInputLayout
        android:id="@+id/editTypeInputLayout"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_marginBottom="12dp"
        app:boxBackgroundMode="outline"
        app:boxStrokeColor="#005BFF"
        app:hintTextColor="#005BFF"
        app:boxCornerRadiusTopStart="12dp"
        style="@style/CustomTextInputLayout"
        app:boxCornerRadiusTopEnd="12dp"
        app:boxCornerRadiusBottomStart="12dp"
        app:boxCornerRadiusBottomEnd="12dp"
        android:background="@drawable/spinner_background">

        <Spinner
            android:id="@+id/editTypeSpinner"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:hint="РљР°С‚РµРіРѕСЂРёСЏ С‚РѕРІР°СЂР°"
            android:padding="10dp"
            android:textSize="14sp"
            android:textColor="#001A34"
            android:fontFamily="@font/montserratregular"
            android:contentDescription="Р’С‹РїР°РґР°СЋС‰РёР№ СЃРїРёСЃРѕРє РґР»СЏ РІС‹Р±РѕСЂР° РєР°С‚РµРіРѕСЂРёРё С‚РѕРІР°СЂР°"
            android:popupBackground="#FFFFFF"
            android:spinnerMode="dropdown"
            android:drawableEnd="@drawable/ic_dropdown"
            android:drawableTint="#005BFF" />
    </com.google.android.material.textfield.TextInputLayout>

    <com.google.android.material.button.MaterialButton
        android:id="@+id/uploadImageButton"
        android:layout_width="match_parent"
        android:layout_height="48dp"
        android:text="Р—Р°РіСЂСѓР·РёС‚СЊ РёР·РѕР±СЂР°Р¶РµРЅРёРµ"
        android:textColor="#FFFFFF"
        android:backgroundTint="#005BFF"
        android:textSize="12sp"
        android:fontFamily="@font/montserratsemibold"
        android:layout_marginBottom="8dp"
        app:cornerRadius="8dp"
        app:icon="@drawable/ic_image"
        app:iconTint="#FFFFFF"
        app:iconGravity="start"
        app:iconPadding="8dp"/>

    <com.google.android.material.button.MaterialButton
        android:id="@+id/removeImageButton"
        android:layout_width="match_parent"
        android:layout_height="48dp"
        android:text="РЈРґР°Р»РёС‚СЊ РёР·РѕР±СЂР°Р¶РµРЅРёРµ"
        android:textColor="#FFFFFF"
        android:backgroundTint="#EC407A"
        android:textSize="12sp"
        android:fontFamily="@font/montserratsemibold"
        android:layout_marginBottom="16dp"
        app:cornerRadius="8dp"
        app:icon="@drawable/ic_delete"
        app:iconTint="#FFFFFF"
        app:iconGravity="start"
        app:iconPadding="8dp"/>

    <LinearLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:orientation="horizontal"
        android:layout_marginTop="8dp">

        <com.google.android.material.button.MaterialButton
            android:id="@+id/cancelButton"
            android:layout_width="0dp"
            android:layout_height="48dp"
            android:layout_weight="1"
            android:layout_marginEnd="4dp"
            android:text="РћС‚РјРµРЅР°"
            android:textColor="#005BFF"
            android:backgroundTint="#E6F0FF"
            android:textSize="16sp"
            android:fontFamily="@font/montserratsemibold"
            app:cornerRadius="8dp"/>

        <com.google.android.material.button.MaterialButton
            android:id="@+id/saveButton"
            android:layout_width="0dp"
            android:layout_height="48dp"
            android:layout_weight="1"
            android:layout_marginStart="4dp"
            android:text="РЎРѕС…СЂР°РЅРёС‚СЊ"
            android:textColor="#FFFFFF"
            android:backgroundTint="#005BFF"
            android:textSize="13sp"
            android:fontFamily="@font/montserratsemibold"
            app:cornerRadius="8dp"/>
    </LinearLayout>
</LinearLayout>

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\res\layout\dialog_manual_addres.xml
<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:layout_width="match_parent"
    android:layout_height="wrap_content"
    android:orientation="vertical"
    android:padding="24dp"
    android:background="@drawable/bg_rounded_dialog">

    <com.google.android.material.textfield.TextInputLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_marginBottom="16dp"
        app:boxBackgroundMode="outline"
        app:boxStrokeColor="#005BFF"
        style="@style/CustomTextInputLayout"

        app:hintTextColor="#005BFF"
        app:startIconDrawable="@drawable/ic_address"
        app:startIconTint="#005BFF">

        <com.google.android.material.textfield.TextInputEditText
            android:id="@+id/etAddress"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:hint="Р’РІРµРґРёС‚Рµ Р°РґСЂРµСЃ РґРѕСЃС‚Р°РІРєРё"
            style="@style/CustomTextInputEditText"

            android:inputType="text"
            android:imeOptions="actionDone"
            android:textColor="#001A34"
            android:textSize="16sp"
            android:fontFamily="@font/montserratregular"/>
    </com.google.android.material.textfield.TextInputLayout>

    <LinearLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:orientation="horizontal"
        android:layout_marginTop="8dp">

        <com.google.android.material.button.MaterialButton
            android:id="@+id/btnCancel"
            android:layout_width="0dp"
            android:layout_height="48dp"
            android:layout_weight="1"
            android:layout_marginEnd="4dp"
            android:text="РћС‚РјРµРЅР°"
            android:textColor="#005BFF"
            android:backgroundTint="#E6F0FF"
            android:textSize="16sp"
            android:fontFamily="@font/montserratsemibold"
            app:cornerRadius="8dp"/>

        <com.google.android.material.button.MaterialButton
            android:id="@+id/btnConfirm"
            android:layout_width="0dp"
            android:layout_height="48dp"
            android:layout_weight="1"
            android:layout_marginStart="4dp"
            android:text="РџРѕРґС‚РІРµСЂРґРёС‚СЊ"
            android:textColor="#FFFFFF"
            android:backgroundTint="#005BFF"
            android:textSize="13sp"
            android:fontFamily="@font/montserratregular"
            app:cornerRadius="8dp"/>
    </LinearLayout>
</LinearLayout>

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\res\layout\dialog_map.xml
<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:layout_width="match_parent"
    android:layout_height="wrap_content"
    android:orientation="vertical"
    android:padding="24dp"
    android:background="@drawable/bg_rounded_dialog">

    <Button
        android:id="@+id/btnSelectOnMap"
        android:layout_width="match_parent"
        android:layout_height="48dp"
        android:layout_marginBottom="8dp"
        android:text="Р’С‹Р±СЂР°С‚СЊ РЅР° РєР°СЂС‚Рµ"
        android:textColor="#FFFFFF"
        android:backgroundTint="#005BFF"
        android:textSize="16sp"
        android:fontFamily="@font/montserratsemibold"
        android:drawableTint="#FFFFFF"
        android:drawablePadding="8dp"
        app:cornerRadius="8dp"/>

    <Button
        android:id="@+id/btnManualInput"
        android:layout_width="match_parent"
        android:layout_height="48dp"
        android:layout_marginBottom="8dp"
        android:text="Р’РІРµСЃС‚Рё РІСЂСѓС‡РЅСѓСЋ"
        android:textColor="#FFFFFF"
        android:backgroundTint="#005BFF"
        android:textSize="16sp"
        android:fontFamily="@font/montserratsemibold"
        android:drawableTint="#FFFFFF"
        android:drawablePadding="8dp"
        app:cornerRadius="8dp"/>

    <Button
        android:id="@+id/btnCancel"
        android:layout_width="match_parent"
        android:layout_height="48dp"
        android:layout_marginBottom="8dp"
        android:text="РћС‚РјРµРЅР°"
        android:textColor="#005BFF"
        android:backgroundTint="#E6F0FF"
        android:textSize="16sp"
        android:fontFamily="@font/montserratsemibold"
        android:drawableTint="#005BFF"
        android:drawablePadding="8dp"
        app:cornerRadius="8dp"/>
</LinearLayout>

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\res\layout\edit_customer_dialog.xml
<!-- res/layout/dialog_edit_account.xml -->
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:layout_width="match_parent"
    android:layout_height="wrap_content"
    android:orientation="vertical"
    android:background="@drawable/bg_rounded_dialog"
    android:padding="24dp"
    android:gravity="center"
    android:scrollbars="none">

    <!-- Р—Р°РіРѕР»РѕРІРѕРє -->
    <TextView
        android:id="@+id/title"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="РР·РјРµРЅРµРЅРёРµ Р°РєРєР°СѓРЅС‚Р°"
        android:textColor="#001A34"
        android:textSize="32sp"
        android:fontFamily="@font/montserratsemibold"
        android:layout_marginBottom="40dp"
        android:textStyle="bold"
        android:importantForAccessibility="yes"
        android:contentDescription="Р—Р°РіРѕР»РѕРІРѕРє: РР·РјРµРЅРµРЅРёРµ Р°РєРєР°СѓРЅС‚Р°"/>

    <!-- РџРѕР»Рµ РґР»СЏ РІРІРѕРґР° РёРјРµРЅРё -->
    <com.google.android.material.textfield.TextInputLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_marginBottom="32dp"
        app:boxBackgroundMode="outline"
        app:boxStrokeColor="#005BFF"
        app:hintTextColor="#005BFF"
        app:startIconDrawable="@drawable/ic_user"
        app:startIconTint="#005BFF"
        style="@style/CustomTextInputLayout">

        <com.google.android.material.textfield.TextInputEditText
            android:id="@+id/etEditName"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:hint="РРјСЏ"
            android:inputType="textPersonName"
            android:imeOptions="actionDone"
            android:textColor="#001A34"
            android:textSize="16sp"
            android:fontFamily="@font/montserratregular"
            android:importantForAccessibility="yes"
            android:contentDescription="РџРѕР»Рµ РґР»СЏ РІРІРѕРґР° РёРјРµРЅРё"
            style="@style/CustomTextInputEditText"/>
    </com.google.android.material.textfield.TextInputLayout>

    <!-- РљРЅРѕРїРєРё -->
    <LinearLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:orientation="horizontal"
        android:layout_marginTop="16dp"
        android:gravity="center">

        <Button
            android:id="@+id/btnCancel"
            android:layout_width="0dp"
            android:layout_height="48dp"
            android:layout_weight="1"
            android:layout_marginEnd="4dp"
            android:text="РћС‚РјРµРЅР°"
            android:textColor="#005BFF"
            android:backgroundTint="#E6F0FF"
            android:textSize="16sp"
            android:fontFamily="@font/montserratsemibold"
            app:cornerRadius="8dp"
            android:importantForAccessibility="yes"
            android:contentDescription="РљРЅРѕРїРєР° РѕС‚РјРµРЅС‹"
            android:drawableTint="#005BFF"
            android:drawablePadding="8dp"/>

        <Button
            android:id="@+id/btnSave"
            android:layout_width="0dp"
            android:layout_height="48dp"
            android:layout_weight="1"
            android:layout_marginStart="4dp"
            android:text="РЎРѕС…СЂР°РЅРёС‚СЊ"
            android:textColor="#FFFFFF"
            android:backgroundTint="#005BFF"
            android:textSize="13sp"
            android:fontFamily="@font/montserratsemibold"
            app:cornerRadius="8dp"
            android:importantForAccessibility="yes"
            android:contentDescription="РљРЅРѕРїРєР° СЃРѕС…СЂР°РЅРµРЅРёСЏ"
            android:drawableStart="@drawable/ic_save"
            android:drawableTint="#FFFFFF"
            android:drawablePadding="8dp"/>
    </LinearLayout>
</LinearLayout>

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\res\layout\edit_sellet_profile_layout.xml
<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:layout_width="match_parent"
    android:layout_height="wrap_content"
    android:orientation="vertical"
    android:padding="24dp"
    android:background="@drawable/bg_rounded_dialog">

    <!-- РџРѕР»Рµ РґР»СЏ РІРІРѕРґР° С„Р°РјРёР»РёРё -->
    <com.google.android.material.textfield.TextInputLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_marginBottom="16dp"
        app:boxBackgroundMode="outline"
        app:boxStrokeColor="#005BFF"
        app:hintTextColor="#005BFF"
        app:startIconDrawable="@drawable/ic_user"
        app:startIconTint="#005BFF"
        style="@style/CustomTextInputLayout">

        <com.google.android.material.textfield.TextInputEditText
            android:id="@+id/etEditLastName"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:hint="Р¤Р°РјРёР»РёСЏ"
            android:inputType="textPersonName"
            android:imeOptions="actionNext"
            android:textColor="#001A34"
            android:textSize="16sp"
            android:fontFamily="@font/montserratregular"
            android:importantForAccessibility="yes"
            android:contentDescription="РџРѕР»Рµ РґР»СЏ РІРІРѕРґР° С„Р°РјРёР»РёРё"
            style="@style/CustomTextInputEditText"/>
    </com.google.android.material.textfield.TextInputLayout>

    <!-- РџРѕР»Рµ РґР»СЏ РІРІРѕРґР° РёРјРµРЅРё -->
    <com.google.android.material.textfield.TextInputLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_marginBottom="16dp"
        app:boxBackgroundMode="outline"
        app:boxStrokeColor="#005BFF"
        app:hintTextColor="#005BFF"
        app:startIconDrawable="@drawable/ic_user"
        app:startIconTint="#005BFF"
        style="@style/CustomTextInputLayout">

        <com.google.android.material.textfield.TextInputEditText
            android:id="@+id/etEditFirstName"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:hint="РРјСЏ"
            android:inputType="textPersonName"
            android:imeOptions="actionNext"
            android:textColor="#001A34"
            android:textSize="16sp"
            android:fontFamily="@font/montserratregular"
            android:importantForAccessibility="yes"
            android:contentDescription="РџРѕР»Рµ РґР»СЏ РІРІРѕРґР° РёРјРµРЅРё"
            style="@style/CustomTextInputEditText"/>
    </com.google.android.material.textfield.TextInputLayout>

    <!-- РџРѕР»Рµ РґР»СЏ РІРІРѕРґР° РѕС‚С‡РµСЃС‚РІР° -->
    <com.google.android.material.textfield.TextInputLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_marginBottom="16dp"
        app:boxBackgroundMode="outline"
        app:boxStrokeColor="#005BFF"
        app:hintTextColor="#005BFF"
        app:startIconDrawable="@drawable/ic_user"
        app:startIconTint="#005BFF"
        style="@style/CustomTextInputLayout">

        <com.google.android.material.textfield.TextInputEditText
            android:id="@+id/etEditMiddleName"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:hint="РћС‚С‡РµСЃС‚РІРѕ"
            android:inputType="textPersonName"
            android:imeOptions="actionNext"
            android:textColor="#001A34"
            android:textSize="16sp"
            android:fontFamily="@font/montserratregular"
            android:importantForAccessibility="yes"
            android:contentDescription="РџРѕР»Рµ РґР»СЏ РІРІРѕРґР° РѕС‚С‡РµСЃС‚РІР°"
            style="@style/CustomTextInputEditText"/>
    </com.google.android.material.textfield.TextInputLayout>

    <!-- РџРѕР»Рµ РґР»СЏ РІРІРѕРґР° РЅР°Р·РІР°РЅРёСЏ РјР°РіР°Р·РёРЅР° -->
    <com.google.android.material.textfield.TextInputLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_marginBottom="16dp"
        app:boxBackgroundMode="outline"
        app:boxStrokeColor="#005BFF"
        app:hintTextColor="#005BFF"
        app:startIconDrawable="@drawable/ic_store"
        app:startIconTint="#005BFF"
        style="@style/CustomTextInputLayout">

        <com.google.android.material.textfield.TextInputEditText
            android:id="@+id/etEditStoreName"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:hint="РќР°Р·РІР°РЅРёРµ РјР°РіР°Р·РёРЅР°"
            android:inputType="text"
            android:imeOptions="actionNext"
            android:textColor="#001A34"
            android:textSize="16sp"
            android:fontFamily="@font/montserratregular"
            android:importantForAccessibility="yes"
            android:contentDescription="РџРѕР»Рµ РґР»СЏ РІРІРѕРґР° РЅР°Р·РІР°РЅРёСЏ РјР°РіР°Р·РёРЅР°"
            style="@style/CustomTextInputEditText"/>
    </com.google.android.material.textfield.TextInputLayout>

    <!-- РџРѕР»Рµ РґР»СЏ РІРІРѕРґР° РћР“Р РќРРџ -->
    <com.google.android.material.textfield.TextInputLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_marginBottom="16dp"
        app:boxBackgroundMode="outline"
        app:boxStrokeColor="#005BFF"
        app:hintTextColor="#005BFF"
        app:startIconDrawable="@drawable/ic_document"
        app:startIconTint="#005BFF"
        style="@style/CustomTextInputLayout">

        <com.google.android.material.textfield.TextInputEditText
            android:id="@+id/etEditOGRNIP"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:hint="РћР“Р РќРРџ"
            android:inputType="number"
            android:imeOptions="actionNext"
            android:textColor="#001A34"
            android:textSize="16sp"
            android:fontFamily="@font/montserratregular"
            android:importantForAccessibility="yes"
            android:contentDescription="РџРѕР»Рµ РґР»СЏ РІРІРѕРґР° РћР“Р РќРРџ"
            style="@style/CustomTextInputEditText"/>
    </com.google.android.material.textfield.TextInputLayout>

    <!-- РџРѕР»Рµ РґР»СЏ РІРІРѕРґР° РРќРќ -->
    <com.google.android.material.textfield.TextInputLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_marginBottom="32dp"
        app:boxBackgroundMode="outline"
        app:boxStrokeColor="#005BFF"
        app:hintTextColor="#005BFF"
        app:startIconDrawable="@drawable/ic_document"
        app:startIconTint="#005BFF"
        style="@style/CustomTextInputLayout">

        <com.google.android.material.textfield.TextInputEditText
            android:id="@+id/etEditINN"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:hint="РРќРќ"
            android:inputType="number"
            android:imeOptions="actionDone"
            android:textColor="#001A34"
            android:textSize="16sp"
            android:fontFamily="@font/montserratregular"
            android:importantForAccessibility="yes"
            android:contentDescription="РџРѕР»Рµ РґР»СЏ РІРІРѕРґР° РРќРќ"
            style="@style/CustomTextInputEditText"/>
    </com.google.android.material.textfield.TextInputLayout>

    <!-- РљРЅРѕРїРєРё -->
    <LinearLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:orientation="horizontal"
        android:layout_marginTop="16dp"
        android:gravity="center">

        <Button
            android:id="@+id/btnCancel"
            android:layout_width="0dp"
            android:layout_height="48dp"
            android:layout_weight="1"
            android:layout_marginEnd="4dp"
            android:text="РћС‚РјРµРЅР°"
            android:textColor="#005BFF"
            android:backgroundTint="#E6F0FF"
            android:textSize="16sp"
            android:fontFamily="@font/montserratsemibold"
            app:cornerRadius="8dp"
            android:importantForAccessibility="yes"
            android:contentDescription="РљРЅРѕРїРєР° РѕС‚РјРµРЅС‹"
            android:drawableTint="#005BFF"
            android:drawablePadding="8dp"/>

        <Button
            android:id="@+id/btnSave"
            android:layout_width="0dp"
            android:layout_height="48dp"
            android:layout_weight="1"
            android:layout_marginStart="4dp"
            android:text="РЎРѕС…СЂР°РЅРёС‚СЊ"
            android:textColor="#FFFFFF"
            android:backgroundTint="#005BFF"
            android:textSize="13sp"
            android:fontFamily="@font/montserratsemibold"
            app:cornerRadius="8dp"
            android:importantForAccessibility="yes"
            android:contentDescription="РљРЅРѕРїРєР° СЃРѕС…СЂР°РЅРµРЅРёСЏ"
            android:drawableStart="@drawable/ic_save"
            android:drawableTint="#FFFFFF"
            android:drawablePadding="8dp"/>
    </LinearLayout>
</LinearLayout>

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\res\layout\filters_dialog.xml
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:layout_width="match_parent"
    android:layout_height="wrap_content"
    android:orientation="vertical"
    android:padding="24dp"
    android:background="@drawable/bg_rounded_dialog">

    <!-- Р¤РёР»СЊС‚СЂ РїРѕ С†РµРЅРµ -->
    <TextView
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Р¦РµРЅР°"
        android:textSize="16sp"
        android:textColor="#001A34"
        android:fontFamily="@font/montserratsemibold"
        android:layout_marginBottom="8dp"
        android:drawableStart="@drawable/ic_price"
        android:drawableTint="#005BFF"
        android:drawablePadding="8dp"/>

    <SeekBar
        android:id="@+id/priceSeekBar"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:max="1000"
        android:progress="500"
        android:thumbTint="#005BFF"
        android:progressTint="#005BFF"
        android:backgroundTint="#E6F0FF"/>

    <TextView
        android:id="@+id/priceRangeText"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="500 в‚Ѕ"
        android:textSize="14sp"
        android:textColor="#005BFF"
        android:fontFamily="@font/montserratregular"
        android:layout_marginBottom="16dp"/>

    <!-- Р¤РёР»СЊС‚СЂ РїРѕ РєР°С‚РµРіРѕСЂРёСЏРј -->
    <TextView
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="РљР°С‚РµРіРѕСЂРёСЏ"
        android:textSize="16sp"
        android:textColor="#001A34"
        android:fontFamily="@font/montserratsemibold"
        android:layout_marginBottom="8dp"
        android:drawableStart="@drawable/ic_category"
        android:drawableTint="#005BFF"
        android:drawablePadding="8dp"/>

    <Spinner
        android:id="@+id/categorySpinner"
        android:layout_width="match_parent"
        android:layout_height="48dp"
        android:background="@drawable/rounded_spinner_background"
        android:popupBackground="#FFFFFF"
        android:paddingStart="16dp"
        android:paddingEnd="16dp"
        android:layout_marginBottom="16dp"
        android:spinnerMode="dropdown"
        android:drawableEnd="@drawable/ic_dropdown"
        android:drawableTint="#005BFF"/>

    <!-- Р¤РёР»СЊС‚СЂ РїРѕ РїРѕРїСѓР»СЏСЂРЅРѕСЃС‚Рё -->
    <CheckBox
        android:id="@+id/popularityCheckBox"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="РџРѕРїСѓР»СЏСЂРЅС‹Рµ"
        android:textSize="16sp"
        android:textColor="#001A34"
        android:fontFamily="@font/montserratregular"
        android:layout_marginBottom="16dp"
        android:buttonTint="#005BFF"
        android:drawableStart="@drawable/ic_star"
        android:drawableTint="#005BFF"
        android:drawablePadding="8dp"/>

    <!-- РљРЅРѕРїРєРё -->
    <LinearLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:orientation="horizontal"
        android:layout_marginTop="16dp"
        android:gravity="center">

        <Button
            android:id="@+id/resetFiltersButton"
            android:layout_width="0dp"
            android:layout_height="48dp"
            android:layout_weight="1"
            android:layout_marginEnd="4dp"
            android:text="РЎР±СЂРѕСЃРёС‚СЊ"
            android:textColor="#005BFF"
            android:backgroundTint="#E6F0FF"
            android:textSize="16sp"
            android:fontFamily="@font/montserratsemibold"
            app:cornerRadius="8dp"
            android:drawableTint="#005BFF"
            android:drawablePadding="8dp"/>

        <Button
            android:id="@+id/applyFiltersButton"
            android:layout_width="0dp"
            android:layout_height="48dp"
            android:layout_weight="1"
            android:layout_marginStart="4dp"
            android:text="РџСЂРёРјРµРЅРёС‚СЊ"
            android:textColor="#FFFFFF"
            android:backgroundTint="#005BFF"
            android:textSize="13sp"
            android:fontFamily="@font/montserratsemibold"
            app:cornerRadius="8dp"
            android:drawableStart="@drawable/ic_check"
            android:drawableTint="#FFFFFF"
            android:drawablePadding="8dp"/>
    </LinearLayout>
</LinearLayout>

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\res\layout\item_card.xml
<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="wrap_content"
    android:orientation="horizontal"
    android:background="@drawable/gray_border"
    android:padding="16dp"
    android:layout_margin="12dp"
    android:gravity="center_vertical"
    android:clipToPadding="false"
    android:foreground="?android:attr/selectableItemBackground">

    <!-- РќРѕРјРµСЂ РєР°СЂС‚С‹ -->
<TextView
android:id="@+id/tvCardNumber"
android:layout_width="0dp"
android:layout_height="wrap_content"
android:layout_weight="1"
android:text="РљР°СЂС‚Р° **** 1234"
android:textColor="#005BFF"
android:textSize="16sp"
android:fontFamily="@font/montserratsemibold"
android:textStyle="bold"
android:drawableTint="#EC407A"
android:drawablePadding="12dp"/>

    <!-- РРєРѕРЅРєР° РєР°СЂС‚С‹ -->
<ImageView
android:layout_width="28dp"
android:layout_height="28dp"
android:src="@drawable/card"
android:tint="#EC407A"
android:layout_marginStart="8dp"
android:scaleType="centerInside"/>
    </LinearLayout>

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\res\layout\item_cart.xml
<androidx.cardview.widget.CardView xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:layout_width="match_parent"
    android:layout_height="wrap_content"
    android:layout_margin="12dp"
    app:cardCornerRadius="12dp"
    app:cardElevation="4dp"
    app:cardUseCompatPadding="true">

    <LinearLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:orientation="horizontal"
        android:padding="16dp"
        android:background="@drawable/card_background_shadow"
        android:foreground="?android:attr/selectableItemBackground">

        <!-- РР·РѕР±СЂР°Р¶РµРЅРёРµ С‚РѕРІР°СЂР° -->
        <ImageView
            android:id="@+id/productImage"
            android:layout_width="80dp"
            android:layout_height="80dp"
            android:scaleType="centerCrop"
            android:background="#F5F5F5"
            android:layout_marginEnd="16dp"
            app:cardCornerRadius="8dp"/>

        <!-- РРЅС„РѕСЂРјР°С†РёСЏ Рѕ С‚РѕРІР°СЂРµ -->
        <LinearLayout
            android:layout_width="0dp"
            android:layout_height="wrap_content"
            android:layout_weight="1"
            android:orientation="vertical">

            <!-- РќР°Р·РІР°РЅРёРµ С‚РѕРІР°СЂР° -->
            <TextView
                android:id="@+id/productName"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:text="РќР°Р·РІР°РЅРёРµ С‚РѕРІР°СЂР°"
                android:textColor="#001A34"
                android:textSize="18sp"
                android:fontFamily="@font/montserratsemibold"
                android:textStyle="bold"
                android:layout_marginBottom="4dp"/>

            <!-- Р¦РµРЅР° С‚РѕРІР°СЂР° -->
            <TextView
                android:id="@+id/productPrice"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:text="1000 в‚Ѕ"
                android:textColor="#005BFF"
                android:textSize="14sp"
                android:fontFamily="@font/montserratregular"
                android:layout_marginBottom="8dp"/>

            <!-- РЈРїСЂР°РІР»РµРЅРёРµ РєРѕР»РёС‡РµСЃС‚РІРѕРј -->
            <LinearLayout
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:orientation="horizontal"
                android:gravity="center_vertical">

                <!-- РљРЅРѕРїРєР° СѓРјРµРЅСЊС€РµРЅРёСЏ РєРѕР»РёС‡РµСЃС‚РІР° -->
                <ImageView
                    android:id="@+id/decreaseQuantity"
                    android:layout_width="24dp"
                    android:layout_height="24dp"
                    android:src="@drawable/ic_minus"
                    android:tint="#EC407A"
                    android:contentDescription="РЈРјРµРЅСЊС€РёС‚СЊ"
                    android:background="?attr/selectableItemBackgroundBorderless"
                    android:layout_marginEnd="12dp"/>

                <!-- РљРѕР»РёС‡РµСЃС‚РІРѕ -->
                <TextView
                    android:id="@+id/productQuantity"
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"
                    android:text="1"
                    android:textSize="18sp"
                    android:textColor="#001A34"
                    android:fontFamily="@font/montserratsemibold"
                    android:layout_marginEnd="12dp"/>

                <!-- РљРЅРѕРїРєР° СѓРІРµР»РёС‡РµРЅРёСЏ РєРѕР»РёС‡РµСЃС‚РІР° -->
                <ImageView
                    android:id="@+id/increaseQuantity"
                    android:layout_width="24dp"
                    android:layout_height="24dp"
                    android:src="@drawable/ic_plus"
                    android:tint="#EC407A"
                    android:contentDescription="РЈРІРµР»РёС‡РёС‚СЊ"
                    android:background="?attr/selectableItemBackgroundBorderless"/>
            </LinearLayout>
        </LinearLayout>

        <!-- РљРЅРѕРїРєР° СѓРґР°Р»РµРЅРёСЏ С‚РѕРІР°СЂР° -->
        <ImageView
            android:id="@+id/deleteItemButton"
            android:layout_width="25dp"
            android:layout_height="25dp"
            android:src="@drawable/ic_delete"
            android:tint="#EC407A"
            android:contentDescription="РЈРґР°Р»РёС‚СЊ С‚РѕРІР°СЂ"
            android:background="?attr/selectableItemBackgroundBorderless"
            android:layout_marginStart="16dp"/>
    </LinearLayout>
</androidx.cardview.widget.CardView>

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\res\layout\item_order.xml
<androidx.cardview.widget.CardView xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:layout_width="match_parent"
    android:layout_height="wrap_content"
    android:layout_margin="12dp"
    app:cardCornerRadius="12dp"
    app:cardElevation="4dp"
    app:cardUseCompatPadding="true">

    <LinearLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:orientation="vertical"
        android:padding="16dp"
        android:background="@drawable/card_background_shadow"
        android:foreground="?android:attr/selectableItemBackground">

        <!-- РќР°Р·РІР°РЅРёРµ С‚РѕРІР°СЂР° -->
        <TextView
            android:id="@+id/productName"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="РќР°Р·РІР°РЅРёРµ С‚РѕРІР°СЂР°"
            android:textColor="#EC407A"
            android:textSize="18sp"
            android:fontFamily="@font/montserratsemibold"
            android:textStyle="bold"
            android:layout_marginBottom="8dp"
            android:drawableStart="@drawable/ic_cart"
            android:drawableTint="#EC407A"
            android:drawablePadding="8dp"/>

        <!-- РљРѕР»РёС‡РµСЃС‚РІРѕ Рё С†РµРЅР° -->
        <LinearLayout
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:orientation="horizontal"
            android:layout_marginBottom="8dp">

            <TextView
                android:id="@+id/productQuantity"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:text="РљРѕР»РёС‡РµСЃС‚РІРѕ: 1"
                android:textColor="#005BFF"

                android:textSize="16sp"
                android:fontFamily="@font/montserratregular"
                android:layout_marginEnd="16dp"
                android:drawableStart="@drawable/ic_quantity"
                android:drawableTint="#005BFF"
                android:drawablePadding="8dp"/>

            <TextView
                android:id="@+id/productPrice"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:text="Р¦РµРЅР°: 1000 в‚Ѕ"
                android:textColor="#005BFF"
                android:textSize="16sp"
                android:fontFamily="@font/montserratregular"
                android:drawableStart="@drawable/ic_price"
                android:drawableTint="#005BFF"
                android:drawablePadding="8dp"/>
        </LinearLayout>
    </LinearLayout>
</androidx.cardview.widget.CardView>

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\res\layout\item_order_profile.xml
<?xml version="1.0" encoding="utf-8"?>
<androidx.cardview.widget.CardView xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:layout_width="match_parent"
    android:layout_height="wrap_content"
    android:layout_margin="12dp"
    app:cardCornerRadius="12dp"
    app:cardElevation="4dp"
    app:cardUseCompatPadding="true">

    <LinearLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:orientation="vertical"
        android:padding="16dp"
        android:background="@drawable/card_background_shadow"
        android:foreground="?android:attr/selectableItemBackground">

        <!-- Horizontal RecyclerView for products -->
        <androidx.recyclerview.widget.RecyclerView
            android:id="@+id/productsRecyclerView"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:orientation="horizontal"
            app:layoutManager="androidx.recyclerview.widget.LinearLayoutManager"
            android:layout_marginBottom="12dp"/>

        <!-- Order status -->
        <TextView
            android:id="@+id/tvOrderStatus"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:text="Р’ РґРѕСЃС‚Р°РІРєРµ"
            android:textColor="#001A34"
            android:textSize="16sp"
            android:fontFamily="@font/montserratsemibold"
            android:textStyle="bold"
            android:layout_marginBottom="4dp"
            android:drawableStart="@drawable/ic_delivery"
            android:drawableTint="#EC407A"
            android:drawablePadding="8dp"/>

        <!-- Order details -->
        <TextView
            android:id="@+id/tvOrderDetails"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:text="РђРґСЂРµСЃ: СѓР». РџСЂРёРјРµСЂРЅР°СЏ, Рґ. 1\nРЎСѓРјРјР°: 1000 в‚Ѕ"
            android:textColor="#005BFF"
            android:textSize="16sp"
            android:fontFamily="@font/montserratregular"
            android:layout_marginBottom="4dp"
            android:drawableStart="@drawable/ic_info"
            android:drawableTint="#EC407A"
            android:drawablePadding="8dp"/>

        <!-- Divider -->
        <View
            android:layout_width="match_parent"
            android:layout_height="1dp"
            android:background="#E6F0FF"
            android:layout_marginVertical="4dp"/>

        <!-- Days until delivery -->
        <TextView
            android:id="@+id/tvDaysUntilDelivery"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:text="Р”РЅРµР№ РґРѕ РґРѕСЃС‚Р°РІРєРё: 3"
            android:textColor="#001A34"
            android:textSize="16sp"
            android:fontFamily="@font/montserratregular"
            android:layout_marginTop="4dp"
            android:drawableStart="@drawable/ic_calendar"
            android:drawableTint="#EC407A"
            android:drawablePadding="8dp"/>
    </LinearLayout>
</androidx.cardview.widget.CardView>

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\res\layout\item_product_seller.xml
<androidx.cardview.widget.CardView xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:layout_width="160dp"
    android:layout_height="wrap_content"
    app:cardCornerRadius="12dp"
    app:cardUseCompatPadding="true">

    <LinearLayout
        android:layout_width="150dp"
        android:layout_height="260dp"
        android:orientation="vertical"
        android:padding="8dp"
        android:background="@drawable/card_background_shadow"
        android:foreground="?android:attr/selectableItemBackground">

        <!-- РР·РѕР±СЂР°Р¶РµРЅРёРµ С‚РѕРІР°СЂР° -->
        <ImageView
            android:id="@+id/productImage"
            android:layout_width="130dp"
            android:layout_height="160dp"
            android:scaleType="centerCrop"
            android:background="#F5F5F5"
            android:layout_marginBottom="12dp"
            app:cardCornerRadius="8dp"/>

        <!-- РќР°Р·РІР°РЅРёРµ С‚РѕРІР°СЂР° -->
        <TextView
            android:id="@+id/productName"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:text="РќР°Р·РІР°РЅРёРµ С‚РѕРІР°СЂР°"
            android:textColor="#001A34"
            android:textSize="15sp"
            android:fontFamily="@font/montserratsemibold"
            android:textStyle="bold"
            android:layout_marginBottom="8dp"
            android:drawableStart="@drawable/ic_cart"
            android:drawableTint="#EC407A"
            android:drawablePadding="8dp"/>

        <!-- Р¦РµРЅР° С‚РѕРІР°СЂР° -->
        <TextView
            android:id="@+id/productPrice"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:text="1000 в‚Ѕ"
            android:textColor="#005BFF"
            android:textSize="13sp"
            android:fontFamily="@font/montserratregular"
            android:drawableStart="@drawable/ic_price"
            android:drawableTint="#EC407A"
            android:drawablePadding="8dp"/>
    </LinearLayout>
</androidx.cardview.widget.CardView>

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\res\layout\item_ptoduct.xml
<androidx.cardview.widget.CardView xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:layout_width="160dp"
    android:layout_height="wrap_content"
    app:cardCornerRadius="12dp"
    app:cardUseCompatPadding="true">

    <LinearLayout
        android:layout_width="150dp"
        android:layout_height="320dp"
        android:orientation="vertical"
        android:padding="8dp"
        android:background="@drawable/card_background_shadow"
        android:foreground="?android:attr/selectableItemBackground">

        <!-- РР·РѕР±СЂР°Р¶РµРЅРёРµ С‚РѕРІР°СЂР° -->
        <ImageView
            android:id="@+id/productImage"
            android:layout_width="130dp"
            android:layout_height="160dp"
        android:scaleType="centerCrop"
        android:background="#F5F5F5"
        android:layout_marginBottom="12dp"
        app:cardCornerRadius="8dp"/>

        <!-- РќР°Р·РІР°РЅРёРµ С‚РѕРІР°СЂР° -->
        <TextView
            android:id="@+id/productName"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:text="РќР°Р·РІР°РЅРёРµ С‚РѕРІР°СЂР°"
            android:textColor="#001A34"
            android:textSize="15sp"
            android:fontFamily="@font/montserratsemibold"
            android:textStyle="bold"
            android:layout_marginBottom="8dp"
        android:drawableStart="@drawable/ic_cart"
        android:drawableTint="#EC407A"
        android:drawablePadding="8dp"/>

        <!-- Р¦РµРЅР° С‚РѕРІР°СЂР° -->
        <TextView
            android:id="@+id/productPrice"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:text="1000 в‚Ѕ"
            android:textColor="#005BFF"
            android:textSize="13sp"
            android:fontFamily="@font/montserratregular"
            android:drawableStart="@drawable/ic_price"
            android:drawableTint="#EC407A"
            android:drawablePadding="8dp"/>

        <!-- РљРЅРѕРїРєР° РґРѕР±Р°РІР»РµРЅРёСЏ РІ РєРѕСЂР·РёРЅСѓ -->
        <com.google.android.material.button.MaterialButton
            android:id="@+id/addToCartButton"
            android:layout_width="130dp"
            android:layout_height="50dp"
        android:text="Р’ РєРѕСЂР·РёРЅСѓ"
        android:textColor="#FFFFFF"
        android:backgroundTint="#005BFF"
        android:textSize="9sp"
        android:fontFamily="@font/montserratsemibold"
        app:cornerRadius="8dp"
        android:stateListAnimator="@null"
        android:foreground="?attr/selectableItemBackground"
        app:icon="@drawable/ic_cart"
        app:iconTint="#FFFFFF"
        android:contentDescription="Р”РѕР±Р°РІРёС‚СЊ РІ РєРѕСЂР·РёРЅСѓ"/>
    </LinearLayout>
</androidx.cardview.widget.CardView>

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\res\layout\order_layout.xml
<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"
    android:padding="24dp"
    android:background="@drawable/bg_rounded_dialog">

    <!-- РЎРїРёСЃРѕРє С‚РѕРІР°СЂРѕРІ -->
    <androidx.recyclerview.widget.RecyclerView
        android:id="@+id/recyclerView"
        android:layout_width="match_parent"
        android:layout_height="0dp"
        android:layout_weight="1"
        android:layout_marginBottom="16dp"/>

    <!-- Р Р°Р·РґРµР»РёС‚РµР»СЊ -->
    <View
        android:layout_width="match_parent"
        android:layout_height="1dp"
        android:background="#E0E0E0"
        android:layout_marginBottom="16dp"/>

    <!-- РРЅС„РѕСЂРјР°С†РёСЏ РѕР± Р°РґСЂРµСЃРµ РґРѕСЃС‚Р°РІРєРё -->
    <LinearLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:orientation="vertical"
        android:layout_marginBottom="16dp">

        <LinearLayout
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:orientation="horizontal"
            android:gravity="center_vertical">

            <ImageView
                android:layout_width="24dp"
                android:layout_height="24dp"
                android:src="@drawable/ic_address"
                android:tint="#EC407A"
                android:layout_marginEnd="8dp"/>

            <TextView
                android:id="@+id/deliveryAddressText"
                android:layout_width="0dp"
                android:layout_height="wrap_content"
                android:layout_weight="1"
                android:text="РђРґСЂРµСЃ РґРѕСЃС‚Р°РІРєРё РЅРµ РІС‹Р±СЂР°РЅ"
                android:textColor="#001A34"
                android:textSize="16sp"
                android:fontFamily="@font/montserratregular"/>

            <com.google.android.material.button.MaterialButton
                android:id="@+id/updateAddressButton"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:text="РР·РјРµРЅРёС‚СЊ"
                android:textColor="#005BFF"
                android:backgroundTint="#E6F0FF"
                android:textSize="14sp"
                android:fontFamily="@font/montserratregular"
                app:cornerRadius="8dp"
                app:iconTint="#005BFF"
                app:iconGravity="start"
                app:iconPadding="4dp"/>
        </LinearLayout>
    </LinearLayout>

    <!-- Р Р°Р·РґРµР»РёС‚РµР»СЊ -->
    <View
        android:layout_width="match_parent"
        android:layout_height="1dp"
        android:background="#E0E0E0"
        android:layout_marginBottom="16dp"/>

    <!-- Р’С‹Р±РѕСЂ Р±Р°РЅРєРѕРІСЃРєРѕР№ РєР°СЂС‚С‹ -->
    <LinearLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:orientation="horizontal"
        android:gravity="center_vertical"
        android:layout_marginBottom="8dp">

        <ImageView
            android:layout_width="24dp"
            android:layout_height="24dp"
            android:src="@drawable/card"
            android:tint="#EC407A"
            android:layout_marginEnd="8dp"/>

        <TextView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="Р’С‹Р±РµСЂРёС‚Рµ РєР°СЂС‚Сѓ РґР»СЏ РѕРїР»Р°С‚С‹"
            android:textColor="#001A34"
            android:textSize="16sp"
            android:fontFamily="@font/montserratsemibold"/>
    </LinearLayout>

    <!-- РЎС‚РёР»РёР·РѕРІР°РЅРЅС‹Р№ Spinner -->
    <com.google.android.material.textfield.TextInputLayout
        android:id="@+id/bankCardLayout"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_marginBottom="16dp"
        app:boxBackgroundMode="outline"
        app:boxStrokeColor="#005BFF"
        app:hintTextColor="#005BFF"
        app:boxCornerRadiusTopStart="12dp"
        app:boxCornerRadiusTopEnd="12dp"
        app:boxCornerRadiusBottomStart="12dp"
        app:boxCornerRadiusBottomEnd="12dp"
        style="@style/CustomTextInputLayout">

        <Spinner
            android:id="@+id/bankCardSpinner"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:hint="Р’С‹Р±РµСЂРёС‚Рµ РєР°СЂС‚Сѓ"
            android:padding="10dp"
            android:textSize="14sp"
            android:textColor="#001A34"
            android:fontFamily="@font/montserratregular"
            android:contentDescription="Р’С‹РїР°РґР°СЋС‰РёР№ СЃРїРёСЃРѕРє РґР»СЏ РІС‹Р±РѕСЂР° РєР°СЂС‚С‹"
            android:popupBackground="#FFFFFF"
            android:spinnerMode="dropdown"
            android:background="@null"/>
    </com.google.android.material.textfield.TextInputLayout>

    <!-- РљРЅРѕРїРєР° "РџСЂРёРІСЏР·Р°С‚СЊ РєР°СЂС‚Сѓ" -->
    <com.google.android.material.button.MaterialButton
        android:id="@+id/addCardButton"
        android:layout_width="match_parent"
        android:layout_height="48dp"
        android:text="РџСЂРёРІСЏР·Р°С‚СЊ РєР°СЂС‚Сѓ"
        android:textColor="#005BFF"
        android:backgroundTint="#E6F0FF"
        android:textSize="16sp"
        android:fontFamily="@font/montserratregular"
        app:cornerRadius="8dp"
        android:visibility="gone"
        android:layout_marginTop="8dp"
        android:layout_marginBottom="16dp"
        app:icon="@drawable/ic_add_product"
        app:iconTint="#005BFF"
        app:iconGravity="start"
        app:iconPadding="8dp"
        android:contentDescription="РџСЂРёРІСЏР·Р°С‚СЊ РєР°СЂС‚Сѓ"/>

    <!-- Р Р°Р·РґРµР»РёС‚РµР»СЊ -->
    <View
        android:layout_width="match_parent"
        android:layout_height="1dp"
        android:background="#E0E0E0"
        android:layout_marginBottom="16dp"/>

    <!-- РћС‚РѕР±СЂР°Р¶РµРЅРёРµ РІС‹Р±СЂР°РЅРЅРѕР№ РєР°СЂС‚С‹ -->
    <LinearLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:orientation="horizontal"
        android:gravity="center_vertical"
        android:layout_marginBottom="16dp">

        <ImageView
            android:layout_width="24dp"
            android:layout_height="24dp"
            android:src="@drawable/card"
            android:tint="#EC407A"
            android:layout_marginEnd="8dp"/>

        <TextView
            android:id="@+id/selectedCardInfo"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="Р’С‹Р±СЂР°РЅРЅР°СЏ РєР°СЂС‚Р°: -"
            android:textColor="#001A34"
            android:textSize="16sp"
            android:fontFamily="@font/montserratregular"/>
    </LinearLayout>

    <!-- РўСѓРјР±Р»РµСЂ РґР»СЏ РїРѕРґРєР»СЋС‡РµРЅРёСЏ Р·Р°С‰РёС‚С‹ -->
    <LinearLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:orientation="horizontal"
        android:gravity="center_vertical"
        android:layout_marginBottom="16dp">

        <Switch
            android:id="@+id/protectionSwitch"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_marginEnd="8dp"
            app:thumbTint="#FFFFFF"
            app:trackTint="@color/switch_track_selector"/>

        <LinearLayout
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:orientation="horizontal"
            android:gravity="center_vertical">

            <ImageView
                android:layout_width="24dp"
                android:layout_height="24dp"
                android:src="@drawable/ic_shield"
                android:tint="#EC407A"
                android:layout_marginEnd="8dp"/>

            <TextView
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:text="РџРѕРґРєР»СЋС‡РёС‚СЊ Р·Р°С‰РёС‚Сѓ РёРјСѓС‰РµСЃС‚РІР°"
                android:textColor="#001A34"
                android:textSize="16sp"
                android:fontFamily="@font/montserratregular"/>
        </LinearLayout>
    </LinearLayout>

    <!-- Р Р°Р·РґРµР»РёС‚РµР»СЊ -->
    <View
        android:layout_width="match_parent"
        android:layout_height="1dp"
        android:background="#E0E0E0"
        android:layout_marginBottom="16dp"/>

    <!-- РћР±С‰Р°СЏ СЃС‚РѕРёРјРѕСЃС‚СЊ СЃ РІС‹РґРµР»РµРЅРёРµРј -->
    <LinearLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:orientation="horizontal"
        android:gravity="center_vertical"
        android:background="#E6F0FF"
        android:padding="8dp"
        android:layout_marginBottom="16dp"
        app:cornerRadius="8dp">

        <ImageView
            android:layout_width="24dp"
            android:layout_height="24dp"
            android:src="@drawable/ic_price"
            android:tint="#EC407A"
            android:layout_marginEnd="8dp"/>

        <TextView
            android:id="@+id/totalAmount"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="РС‚РѕРіРѕ: 0 в‚Ѕ"
            android:textColor="#001A34"
            android:textSize="20sp"
            android:fontFamily="@font/montserratsemibold"
            android:textStyle="bold"/>
    </LinearLayout>

    <!-- Р§РµРєР±РѕРєСЃ СЃРѕРіР»Р°СЃРёСЏ -->
    <LinearLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:orientation="horizontal"
        android:gravity="center_vertical"
        android:layout_marginBottom="16dp">

        <CheckBox
            android:id="@+id/agreementCheckBox"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_marginEnd="8dp"
            android:buttonTint="#005BFF"/>

        <LinearLayout
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:orientation="horizontal"
            android:gravity="center_vertical">

            <TextView
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:text="РЎРѕРіР»Р°СЃРµРЅ СЃ СѓСЃР»РѕРІРёСЏРјРё Рё РџСЂР°РІРёР»Р°РјРё РїРѕР»СЊР·РѕРІР°РЅРёСЏ С‚РѕСЂРіРѕРІРѕР№ РїР»РѕС‰Р°РґРєРё Рё РїСЂР°РІРёР»Р°РјРё Р’РѕР·РІСЂР°С‚Р°"
                android:textColor="#001A34"
                android:textSize="14sp"
                android:fontFamily="@font/montserratregular"/>
        </LinearLayout>
    </LinearLayout>

    <!-- Р Р°Р·РґРµР»РёС‚РµР»СЊ -->
    <View
        android:layout_width="match_parent"
        android:layout_height="1dp"
        android:background="#E0E0E0"
        android:layout_marginBottom="16dp"/>

    <!-- РљРЅРѕРїРєР° РѕРїР»Р°С‚С‹ -->
    <com.google.android.material.button.MaterialButton
        android:id="@+id/payButton"
        android:layout_width="match_parent"
        android:layout_height="48dp"
        android:text="РћРїР»Р°С‚РёС‚СЊ"
        android:textColor="#FFFFFF"
        android:backgroundTint="#005BFF"
        android:textSize="16sp"
        android:fontFamily="@font/montserratsemibold"
        app:cornerRadius="8dp"
        android:enabled="false"
        android:alpha="0.5"
        app:icon="@drawable/ic_payment"
        app:iconTint="#FFFFFF"
        app:iconGravity="start"
        app:iconPadding="8dp"
        android:contentDescription="РћРїР»Р°С‚РёС‚СЊ"/>
</LinearLayout>

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\res\layout\password_recovery.xml
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:layout_width="match_parent"
    android:layout_height="wrap_content"
    android:orientation="vertical"
    android:padding="24dp"
    android:background="@drawable/bg_rounded_dialog">

    <!-- Р—Р°РіРѕР»РѕРІРѕРє -->
    <TextView
        android:id="@+id/title"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Р’РѕСЃСЃС‚Р°РЅРѕРІР»РµРЅРёРµ РїР°СЂРѕР»СЏ"
        android:textColor="#001A34"
        android:textSize="24sp"
        android:fontFamily="@font/montserratsemibold"
        android:layout_marginBottom="20dp"
        android:textStyle="bold"
        android:drawableStart="@drawable/ic_lock"
        android:drawableTint="#EC407A"
        android:drawablePadding="8dp"/>

    <!-- РџРѕР»Рµ РґР»СЏ РІРІРѕРґР° Р»РѕРіРёРЅР° -->
    <com.google.android.material.textfield.TextInputLayout
        android:id="@+id/loginLayout"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_marginBottom="16dp"
        app:boxBackgroundMode="outline"
        app:boxStrokeColor="#005BFF"
        app:hintTextColor="#005BFF"
        app:boxCornerRadiusTopStart="12dp"
        app:boxCornerRadiusTopEnd="12dp"
        app:boxCornerRadiusBottomStart="12dp"
        app:boxCornerRadiusBottomEnd="12dp"
        app:startIconDrawable="@drawable/ic_email"
        app:startIconTint="#005BFF"
        style="@style/CustomTextInputLayout">

        <com.google.android.material.textfield.TextInputEditText
            android:id="@+id/loginField"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:hint="Р’Р°С€ Р»РѕРіРёРЅ"
            android:textSize="16sp"
            android:textColor="#001A34"
            android:fontFamily="@font/montserratregular"
            android:textColorHint="#005BFF"
            android:importantForAccessibility="yes"
            android:contentDescription="РџРѕР»Рµ РґР»СЏ РІРІРѕРґР° Р»РѕРіРёРЅР°"
            android:inputType="textEmailAddress"
            android:padding="12dp"
            app:startIconDrawable="@drawable/ic_email"
            app:startIconTint="#EC407A"
            android:drawablePadding="8dp"/>
    </com.google.android.material.textfield.TextInputLayout>

    <!-- РџРѕР»Рµ РґР»СЏ РІРІРѕРґР° РєРѕРґР° -->
    <com.google.android.material.textfield.TextInputLayout
        android:id="@+id/codeLayout"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_marginBottom="16dp"
        app:boxBackgroundMode="outline"
        app:boxStrokeColor="#005BFF"
        app:hintTextColor="#005BFF"
        app:boxCornerRadiusTopStart="12dp"
        app:boxCornerRadiusTopEnd="12dp"
        app:boxCornerRadiusBottomStart="12dp"
        app:boxCornerRadiusBottomEnd="12dp"
        app:startIconDrawable="@drawable/ic_code"
        app:startIconTint="#005BFF"
        style="@style/CustomTextInputLayout">

        <com.google.android.material.textfield.TextInputEditText
            android:id="@+id/codeField"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:hint="РљРѕРґ СЃ РїРѕС‡С‚С‹"
            android:textSize="16sp"
            android:textColor="#001A34"
            android:fontFamily="@font/montserratregular"
            android:textColorHint="#005BFF"
            android:importantForAccessibility="yes"
            android:contentDescription="РџРѕР»Рµ РґР»СЏ РІРІРѕРґР° РєРѕРґР°"
            android:inputType="number"
            android:padding="12dp"
            app:startIconDrawable="@drawable/ic_code"
            app:startIconTint="#EC407A"
            android:drawablePadding="8dp"/>
    </com.google.android.material.textfield.TextInputLayout>

    <!-- РљРЅРѕРїРєР° РґР»СЏ РѕС‚РїСЂР°РІРєРё РєРѕРґР° -->
    <com.google.android.material.button.MaterialButton
        android:id="@+id/sendCodeButton"
        android:layout_width="match_parent"
        android:layout_height="48dp"
        android:text="РћС‚РїСЂР°РІРёС‚СЊ РєРѕРґ"
        android:textColor="#FFFFFF"
        android:backgroundTint="#005BFF"
        android:textSize="16sp"
        android:fontFamily="@font/montserratsemibold"
        app:cornerRadius="8dp"
        android:layout_marginBottom="16dp"
        android:layout_gravity="center"
        android:importantForAccessibility="yes"
        android:contentDescription="РљРЅРѕРїРєР° РѕС‚РїСЂР°РІРєРё РєРѕРґР° РЅР° РїРѕС‡С‚Сѓ"/>

    <!-- РљРЅРѕРїРєР° РґР»СЏ РёР·РјРµРЅРµРЅРёСЏ РїР°СЂРѕР»СЏ -->
    <com.google.android.material.button.MaterialButton
        android:id="@+id/changePasswordButton"
        android:layout_width="match_parent"
        android:layout_height="48dp"
        android:text="РР·РјРµРЅРёС‚СЊ РїР°СЂРѕР»СЊ"
        android:textColor="#FFFFFF"
        android:backgroundTint="#005BFF"
        android:textSize="16sp"
        android:fontFamily="@font/montserratsemibold"
        app:cornerRadius="8dp"
        android:layout_gravity="center"
        android:importantForAccessibility="yes"
        android:contentDescription="РљРЅРѕРїРєР° РёР·РјРµРЅРµРЅРёСЏ РїР°СЂРѕР»СЏ"
        android:enabled="false"
        android:alpha="0.5"
        app:startIconDrawable="@drawable/ic_lock"
        app:startIconTint="#FFFFFF"
        android:drawablePadding="8dp"/>
</LinearLayout>

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\res\layout\product_detail_layout.xml
<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:background="#E6E6FA">

    <!-- Р”РµРєРѕСЂР°С‚РёРІРЅС‹Рµ СЌР»РµРјРµРЅС‚С‹ -->
    <ImageView
        android:id="@+id/topBagIcon"
        android:layout_width="110dp"
        android:layout_height="110dp"
        android:alpha="0.35"
        android:contentDescription="Р”РµРєРѕСЂР°С‚РёРІРЅР°СЏ РёРєРѕРЅРєР° СЃСѓРјРєРё"
        android:rotation="20"
        android:src="@drawable/ic_bag"
        android:layout_marginTop="-30dp"
        android:layout_marginEnd="-10dp"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintEnd_toEndOf="parent" />

    <!-- РћСЃРЅРѕРІРЅР°СЏ РєР°СЂС‚РѕС‡РєР° СЃ СЃРѕРґРµСЂР¶РёРјС‹Рј -->
    <androidx.cardview.widget.CardView
        android:layout_width="0dp"
        android:layout_height="0dp"
        android:layout_margin="16dp"
        app:cardCornerRadius="20dp"
        app:cardElevation="6dp"
        app:cardBackgroundColor="#FFFFFF"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintEnd_toEndOf="parent">

        <androidx.core.widget.NestedScrollView
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:fillViewport="true">

            <LinearLayout
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:orientation="vertical"
                android:padding="20dp">

                <!-- РР·РѕР±СЂР°Р¶РµРЅРёРµ С‚РѕРІР°СЂР° -->
                <ImageView
                    android:id="@+id/productImage"
                    android:layout_width="match_parent"
                    android:layout_height="250dp"
                    android:layout_marginBottom="20dp"
                    android:scaleType="centerCrop"
                    android:background="#F5F5F5"
                    app:cardCornerRadius="12dp"
                    android:elevation="4dp"
                    android:layout_gravity="center"
                    android:contentDescription="РР·РѕР±СЂР°Р¶РµРЅРёРµ С‚РѕРІР°СЂР°"/>

                <!-- РќР°Р·РІР°РЅРёРµ С‚РѕРІР°СЂР° -->
                <LinearLayout
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:orientation="horizontal"
                    android:gravity="center_vertical"
                    android:layout_marginBottom="12dp">

                    <ImageView
                        android:layout_width="28dp"
                        android:layout_height="28dp"
                        android:src="@drawable/ic_cart"
                        android:tint="#EC407A"
                        android:layout_marginEnd="12dp"/>

                    <TextView
                        android:id="@+id/productName"
                        android:layout_width="wrap_content"
                        android:layout_height="wrap_content"
                        android:text="РќР°Р·РІР°РЅРёРµ С‚РѕРІР°СЂР°"
                        android:textColor="#001A34"
                        android:textSize="28sp"
                        android:textStyle="bold"
                        android:fontFamily="@font/montserratsemibold"/>
                </LinearLayout>

                <!-- Р Р°Р·РґРµР»РёС‚РµР»СЊ -->
                <View
                    android:layout_width="match_parent"
                    android:layout_height="1dp"
                    android:background="#E6F0FF"
                    android:layout_marginBottom="16dp"/>

                <!-- Р¦РµРЅР° С‚РѕРІР°СЂР° СЃ РІС‹РґРµР»РµРЅРёРµРј -->
                <LinearLayout
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:orientation="horizontal"
                    android:gravity="center_vertical"
                    android:background="@drawable/price_background"
                    android:padding="8dp"
                    android:layout_marginBottom="16dp">

                    <ImageView
                        android:layout_width="24dp"
                        android:layout_height="24dp"
                        android:src="@drawable/ic_price"
                        android:tint="#EC407A"
                        android:layout_marginEnd="12dp"/>

                    <TextView
                        android:id="@+id/productPrice"
                        android:layout_width="wrap_content"
                        android:layout_height="wrap_content"
                        android:text="1000 в‚Ѕ"
                        android:textColor="#005BFF"
                        android:textSize="24sp"
                        android:fontFamily="@font/montserratsemibold"
                        android:textStyle="bold"/>
                </LinearLayout>

                <!-- Р Р°Р·РґРµР»РёС‚РµР»СЊ -->
                <View
                    android:layout_width="match_parent"
                    android:layout_height="1dp"
                    android:background="#E6F0FF"
                    android:layout_marginBottom="16dp"/>

                <!-- РќР°Р·РІР°РЅРёРµ РјР°РіР°Р·РёРЅР° -->
                <LinearLayout
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:orientation="horizontal"
                    android:gravity="center_vertical"
                    android:layout_marginBottom="16dp">

                    <ImageView
                        android:layout_width="24dp"
                        android:layout_height="24dp"
                        android:src="@drawable/ic_store"
                        android:tint="#EC407A"
                        android:layout_marginEnd="12dp"/>

                    <TextView
                        android:id="@+id/storeNameTextView"
                        android:layout_width="wrap_content"
                        android:layout_height="wrap_content"
                        android:text="РњР°РіР°Р·РёРЅ: РќРµРёР·РІРµСЃС‚РЅРѕ"
                        android:textColor="#555555"
                        android:textSize="18sp"
                        android:fontFamily="@font/montserratregular"/>
                </LinearLayout>

                <!-- РўРёРї С‚РѕРІР°СЂР° -->
                <LinearLayout
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:orientation="horizontal"
                    android:gravity="center_vertical"
                    android:layout_marginBottom="16dp">

                    <ImageView
                        android:layout_width="24dp"
                        android:layout_height="24dp"
                        android:src="@drawable/ic_category"
                        android:tint="#EC407A"
                        android:layout_marginEnd="12dp"/>

                    <TextView
                        android:id="@+id/productType"
                        android:layout_width="wrap_content"
                        android:layout_height="wrap_content"
                        android:text="РўРёРї С‚РѕРІР°СЂР°: Р­Р»РµРєС‚СЂРѕРЅРёРєР°"
                        android:textColor="#555555"
                        android:textSize="18sp"
                        android:fontFamily="@font/montserratregular"/>
                </LinearLayout>

                <!-- Р Р°Р·РґРµР»РёС‚РµР»СЊ -->
                <View
                    android:layout_width="match_parent"
                    android:layout_height="1dp"
                    android:background="#E6F0FF"
                    android:layout_marginBottom="16dp"/>

                <!-- РћРїРёСЃР°РЅРёРµ С‚РѕРІР°СЂР° -->
                <LinearLayout
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:orientation="horizontal"
                    android:gravity="center_vertical"
                    android:layout_marginBottom="24dp">

                    <ImageView
                        android:layout_width="24dp"
                        android:layout_height="24dp"
                        android:src="@drawable/ic_info"
                        android:tint="#EC407A"
                        android:layout_marginEnd="12dp"/>

                    <TextView
                        android:id="@+id/productDescription"
                        android:layout_width="match_parent"
                        android:layout_height="wrap_content"
                        android:text="РћРїРёСЃР°РЅРёРµ С‚РѕРІР°СЂР°"
                        android:textColor="#333333"
                        android:textSize="16sp"
                        android:fontFamily="@font/montserratregular"
                        android:lineSpacingExtra="8dp"/>
                </LinearLayout>

                <!-- РљРЅРѕРїРєР° "Р”РѕР±Р°РІРёС‚СЊ РІ РєРѕСЂР·РёРЅСѓ" -->
                <com.google.android.material.button.MaterialButton
                    android:id="@+id/addToCartButton"
                    android:layout_width="match_parent"
                    android:layout_height="50dp"
                    android:text="Р”РѕР±Р°РІРёС‚СЊ РІ РєРѕСЂР·РёРЅСѓ"
                    android:textColor="#FFFFFF"
                    android:textSize="18sp"
                    android:backgroundTint="#005BFF"
                    android:fontFamily="@font/montserratsemibold"
                    android:layout_marginBottom="24dp"
                    android:layout_gravity="center"
                    android:elevation="6dp"
                    android:importantForAccessibility="yes"
                    android:contentDescription="РљРЅРѕРїРєР° РґРѕР±Р°РІРёС‚СЊ РІ РєРѕСЂР·РёРЅСѓ"
                    app:cornerRadius="12dp"
                    app:iconTint="#FFFFFF"
                    app:iconGravity="start"
                    app:iconPadding="8dp"/>
            </LinearLayout>
        </androidx.core.widget.NestedScrollView>
    </androidx.cardview.widget.CardView>

    <!-- Р”РµРєРѕСЂР°С‚РёРІРЅС‹Рµ СЌР»РµРјРµРЅС‚С‹ -->
    <ImageView
        android:id="@+id/bottomBoxIcon"
        android:layout_width="120dp"
        android:layout_height="120dp"
        android:layout_marginStart="-30dp"
        android:layout_marginBottom="-40dp"
        android:alpha="0.35"
        android:contentDescription="Р”РµРєРѕСЂР°С‚РёРІРЅР°СЏ РёРєРѕРЅРєР° РєРѕСЂРѕР±РєРё"
        android:rotation="25"
        android:src="@drawable/ic_box"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintStart_toStartOf="parent" />

    <ImageView
        android:id="@+id/bottomToyIcon"
        android:layout_width="90dp"
        android:layout_height="90dp"
        android:layout_marginEnd="-40dp"
        android:layout_marginBottom="8dp"
        android:alpha="0.35"
        android:contentDescription="Р”РµРєРѕСЂР°С‚РёРІРЅР°СЏ РёРєРѕРЅРєР° РёРіСЂСѓС€РєРё"
        android:rotation="-20"
        android:src="@drawable/ic_toy"
        android:tint="#6097FF"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent" />
</androidx.constraintlayout.widget.ConstraintLayout>

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\res\layout\product_detail_seller_layout.xml
<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:background="#E6E6FA">

    <!-- Р”РµРєРѕСЂР°С‚РёРІРЅС‹Рµ СЌР»РµРјРµРЅС‚С‹ -->
    <ImageView
        android:id="@+id/topBagIcon"
        android:layout_width="110dp"
        android:layout_height="110dp"
        android:alpha="0.35"
        android:contentDescription="Р”РµРєРѕСЂР°С‚РёРІРЅР°СЏ РёРєРѕРЅРєР° СЃСѓРјРєРё"
        android:rotation="20"
        android:src="@drawable/ic_bag"
        android:layout_marginTop="-30dp"
        android:layout_marginEnd="-10dp"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintEnd_toEndOf="parent" />

    <!-- РћСЃРЅРѕРІРЅР°СЏ РєР°СЂС‚РѕС‡РєР° СЃ СЃРѕРґРµСЂР¶РёРјС‹Рј -->
    <androidx.cardview.widget.CardView
        android:layout_width="0dp"
        android:layout_height="0dp"
        android:layout_margin="16dp"
        app:cardCornerRadius="20dp"
        app:cardElevation="6dp"
        app:cardBackgroundColor="#FFFFFF"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintEnd_toEndOf="parent">

        <androidx.core.widget.NestedScrollView
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:fillViewport="true">

            <LinearLayout
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:orientation="vertical"
                android:padding="20dp">

                <!-- РР·РѕР±СЂР°Р¶РµРЅРёРµ С‚РѕРІР°СЂР° -->
                <ImageView
                    android:id="@+id/productImage"
                    android:layout_width="match_parent"
                    android:layout_height="250dp"
                    android:layout_marginBottom="20dp"
                    android:scaleType="centerCrop"
                    android:background="#F5F5F5"
                    app:cardCornerRadius="12dp"
                    android:elevation="4dp"
                    android:layout_gravity="center"
                    android:contentDescription="РР·РѕР±СЂР°Р¶РµРЅРёРµ С‚РѕРІР°СЂР°"/>

                <!-- РќР°Р·РІР°РЅРёРµ С‚РѕРІР°СЂР° -->
                <LinearLayout
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:orientation="horizontal"
                    android:gravity="center_vertical"
                    android:layout_marginBottom="12dp">

                    <ImageView
                        android:layout_width="28dp"
                        android:layout_height="28dp"
                        android:src="@drawable/ic_cart"
                        android:tint="#EC407A"
                        android:layout_marginEnd="12dp"/>

                    <TextView
                        android:id="@+id/productName"
                        android:layout_width="wrap_content"
                        android:layout_height="wrap_content"
                        android:text="РќР°Р·РІР°РЅРёРµ С‚РѕРІР°СЂР°"
                        android:textColor="#001A34"
                        android:textSize="28sp"
                        android:textStyle="bold"
                        android:fontFamily="@font/montserratsemibold"/>
                </LinearLayout>

                <!-- Р Р°Р·РґРµР»РёС‚РµР»СЊ -->
                <View
                    android:layout_width="match_parent"
                    android:layout_height="1dp"
                    android:background="#E6F0FF"
                    android:layout_marginBottom="16dp"/>

                <!-- Р¦РµРЅР° С‚РѕРІР°СЂР° СЃ РІС‹РґРµР»РµРЅРёРµРј -->
                <LinearLayout
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:orientation="horizontal"
                    android:gravity="center_vertical"
                    android:background="@drawable/price_background"
                    android:padding="8dp"
                    android:layout_marginBottom="16dp">

                    <ImageView
                        android:layout_width="24dp"
                        android:layout_height="24dp"
                        android:src="@drawable/ic_price"
                        android:tint="#EC407A"
                        android:layout_marginEnd="12dp"/>

                    <TextView
                        android:id="@+id/productPrice"
                        android:layout_width="wrap_content"
                        android:layout_height="wrap_content"
                        android:text="1000 в‚Ѕ"
                        android:textColor="#005BFF"
                        android:textSize="24sp"
                        android:fontFamily="@font/montserratsemibold"
                        android:textStyle="bold"/>
                </LinearLayout>

                <!-- Р Р°Р·РґРµР»РёС‚РµР»СЊ -->
                <View
                    android:layout_width="match_parent"
                    android:layout_height="1dp"
                    android:background="#E6F0FF"
                    android:layout_marginBottom="16dp"/>

                <!-- РўРёРї С‚РѕРІР°СЂР° -->
                <LinearLayout
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:orientation="horizontal"
                    android:gravity="center_vertical"
                    android:layout_marginBottom="16dp">

                    <ImageView
                        android:layout_width="24dp"
                        android:layout_height="24dp"
                        android:src="@drawable/ic_category"
                        android:tint="#EC407A"
                        android:layout_marginEnd="12dp"/>

                    <TextView
                        android:id="@+id/productType"
                        android:layout_width="wrap_content"
                        android:layout_height="wrap_content"
                        android:text="РўРёРї С‚РѕРІР°СЂР°: Р­Р»РµРєС‚СЂРѕРЅРёРєР°"
                        android:textColor="#555555"
                        android:textSize="18sp"
                        android:fontFamily="@font/montserratregular"/>
                </LinearLayout>

                <!-- Р Р°Р·РґРµР»РёС‚РµР»СЊ -->
                <View
                    android:layout_width="match_parent"
                    android:layout_height="1dp"
                    android:background="#E6F0FF"
                    android:layout_marginBottom="16dp"/>

                <!-- РћРїРёСЃР°РЅРёРµ С‚РѕРІР°СЂР° -->
                <LinearLayout
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:orientation="horizontal"
                    android:gravity="center_vertical"
                    android:layout_marginBottom="16dp">

                    <ImageView
                        android:layout_width="24dp"
                        android:layout_height="24dp"
                        android:src="@drawable/ic_info"
                        android:tint="#EC407A"
                        android:layout_marginEnd="12dp"/>

                    <TextView
                        android:id="@+id/productDescription"
                        android:layout_width="match_parent"
                        android:layout_height="wrap_content"
                        android:text="РћРїРёСЃР°РЅРёРµ С‚РѕРІР°СЂР°"
                        android:textColor="#333333"
                        android:textSize="16sp"
                        android:fontFamily="@font/montserratregular"
                        android:lineSpacingExtra="8dp"/>
                </LinearLayout>

                <!-- РљРѕР»РёС‡РµСЃС‚РІРѕ С‚РѕРІР°СЂР° -->
                <LinearLayout
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:orientation="horizontal"
                    android:gravity="center_vertical"
                    android:layout_marginBottom="16dp">

                    <ImageView
                        android:layout_width="24dp"
                        android:layout_height="24dp"
                        android:src="@drawable/ic_quantity"
                        android:tint="#EC407A"
                        android:layout_marginEnd="12dp"/>

                    <TextView
                        android:id="@+id/productQuantity"
                        android:layout_width="match_parent"
                        android:layout_height="wrap_content"
                        android:text="РљРѕР»РёС‡РµСЃС‚РІРѕ: "
                        android:textColor="#333333"
                        android:textSize="16sp"
                        android:fontFamily="@font/montserratregular"
                        android:lineSpacingExtra="8dp"/>
                </LinearLayout>

                <!-- Р Р°Р·РґРµР»РёС‚РµР»СЊ -->
                <View
                    android:layout_width="match_parent"
                    android:layout_height="1dp"
                    android:background="#E6F0FF"
                    android:layout_marginBottom="16dp"/>

                <!-- Р’С‹СЂСѓС‡РєР° РѕС‚ С‚РѕРІР°СЂР° -->
                <LinearLayout
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:orientation="horizontal"
                    android:gravity="center_vertical"
                    android:layout_marginBottom="2dp">

                    <ImageView
                        android:layout_width="24dp"
                        android:layout_height="24dp"
                        android:src="@drawable/ic_revenue"
                        android:tint="#EC407A"
                        android:layout_marginEnd="12dp"/>

                    <TextView
                        android:id="@+id/productRevenue"
                        android:layout_width="match_parent"
                        android:layout_height="wrap_content"
                        android:text="Р’С‹СЂСѓС‡РєР°"
                        android:textColor="#333333"
                        android:textSize="16sp"
                        android:fontFamily="@font/montserratregular"
                        android:lineSpacingExtra="8dp"/>
                </LinearLayout>

                <!-- РљРЅРѕРїРєР° "РР·РјРµРЅРёС‚СЊ" -->
                <com.google.android.material.button.MaterialButton
                    android:id="@+id/editProductButton"
                    android:layout_width="match_parent"
                    android:layout_height="50dp"
                    android:text="РР·РјРµРЅРёС‚СЊ"
                    android:textColor="#FFFFFF"
                    android:textSize="18sp"
                    android:backgroundTint="#005BFF"
                    android:fontFamily="@font/montserratsemibold"
                    android:layout_marginBottom="24dp"
                    android:layout_gravity="center"
                    android:elevation="6dp"
                    android:importantForAccessibility="yes"
                    android:contentDescription="РљРЅРѕРїРєР° РёР·РјРµРЅРёС‚СЊ С‚РѕРІР°СЂ"
                    app:cornerRadius="12dp"
                    app:iconTint="#FFFFFF"
                    app:iconGravity="start"
                    app:iconPadding="8dp"/>
            </LinearLayout>
        </androidx.core.widget.NestedScrollView>
    </androidx.cardview.widget.CardView>

    <!-- Р”РµРєРѕСЂР°С‚РёРІРЅС‹Рµ СЌР»РµРјРµРЅС‚С‹ -->
    <ImageView
        android:id="@+id/bottomBoxIcon"
        android:layout_width="120dp"
        android:layout_height="120dp"
        android:layout_marginStart="-30dp"
        android:layout_marginBottom="-40dp"
        android:alpha="0.35"
        android:contentDescription="Р”РµРєРѕСЂР°С‚РёРІРЅР°СЏ РёРєРѕРЅРєР° РєРѕСЂРѕР±РєРё"
        android:rotation="25"
        android:src="@drawable/ic_box"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintStart_toStartOf="parent" />

    <ImageView
        android:id="@+id/bottomToyIcon"
        android:layout_width="90dp"
        android:layout_height="90dp"
        android:layout_marginEnd="-40dp"
        android:layout_marginBottom="8dp"
        android:alpha="0.35"
        android:contentDescription="Р”РµРєРѕСЂР°С‚РёРІРЅР°СЏ РёРєРѕРЅРєР° РёРіСЂСѓС€РєРё"
        android:rotation="-20"
        android:src="@drawable/ic_toy"
        android:tint="#6097FF"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent" />
</androidx.constraintlayout.widget.ConstraintLayout>

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\res\layout\profile_activity.xml
<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:background="#E6E6FA">

    <!-- Р”РµРєРѕСЂР°С‚РёРІРЅС‹Рµ СЌР»РµРјРµРЅС‚С‹ -->
    <ImageView
        android:id="@+id/topBagIcon"
        android:layout_width="110dp"
        android:layout_height="110dp"
        android:alpha="0.35"
        android:contentDescription="Р”РµРєРѕСЂР°С‚РёРІРЅР°СЏ РёРєРѕРЅРєР° СЃСѓРјРєРё"
        android:rotation="20"
        android:src="@drawable/ic_bag"
        android:layout_marginTop="-30dp"
        android:layout_marginEnd="-10dp"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintEnd_toEndOf="parent" />

    <!-- РћСЃРЅРѕРІРЅР°СЏ РєР°СЂС‚РѕС‡РєР° СЃ СЃРѕРґРµСЂР¶РёРјС‹Рј -->
    <androidx.cardview.widget.CardView
        android:layout_width="0dp"
        android:layout_height="0dp"
        android:layout_margin="16dp"
        app:cardCornerRadius="20dp"
        app:cardElevation="6dp"
        app:cardBackgroundColor="#FFFFFF"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintEnd_toEndOf="parent">

        <androidx.core.widget.NestedScrollView
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:fillViewport="true">

            <LinearLayout
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:orientation="vertical"
                android:padding="20dp">

                <!-- Р’РµСЂС…РЅРµРµ РјРµРЅСЋ (Toolbar) -->
                <androidx.appcompat.widget.Toolbar
                    android:id="@+id/toolbar"
                    android:layout_width="match_parent"
                    android:layout_height="56dp"
                    android:background="#FFFFFF"
                    android:elevation="4dp"
                    android:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar"
                    app:popupTheme="@style/ThemeOverlay.AppCompat.Light">

                    <ImageView
                        android:layout_width="32dp"
                        android:layout_height="32dp"
                        android:src="@drawable/ic_user"
                        android:tint="#EC407A"
                        android:layout_marginEnd="12dp"/>

                    <TextView
                        android:layout_width="wrap_content"
                        android:layout_height="wrap_content"
                        android:text="РџСЂРѕС„РёР»СЊ"
                        android:textSize="24sp"
                        android:textStyle="bold"
                        android:textColor="#EC407A"
                        android:fontFamily="@font/montserratbold"/>

                    <!-- РРєРѕРЅРєР° СЃРїСЂР°РІР° -->
                    <ImageView
                        android:id="@+id/btnMenu"
                        android:layout_width="wrap_content"
                        android:layout_height="wrap_content"
                        android:layout_gravity="end"
                        android:padding="8dp"
                        android:src="@drawable/ic_menu"
                        android:tint="#005BFF"
                        android:contentDescription="РљРЅРѕРїРєР° РјРµРЅСЋ"/>
                </androidx.appcompat.widget.Toolbar>

                <!-- РРЅС„РѕСЂРјР°С†РёСЏ Рѕ РїРѕР»СЊР·РѕРІР°С‚РµР»Рµ -->
                <LinearLayout
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:orientation="horizontal"
                    android:gravity="center_vertical"
                    android:layout_marginTop="16dp"
                    android:layout_marginBottom="8dp">

                    <ImageView
                        android:layout_width="28dp"
                        android:layout_height="28dp"
                        android:src="@drawable/ic_user"
                        android:tint="#EC407A"
                        android:layout_marginEnd="12dp"/>

                    <TextView
                        android:id="@+id/tvUserName"
                        android:layout_width="wrap_content"
                        android:layout_height="wrap_content"
                        android:text="РРјСЏ РџРѕР»СЊР·РѕРІР°С‚РµР»СЏ"
                        android:textColor="#001A34"
                        android:textSize="20sp"
                        android:fontFamily="@font/montserratsemibold"/>
                </LinearLayout>

                <LinearLayout
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:orientation="horizontal"
                    android:gravity="center_vertical"
                    android:layout_marginBottom="8dp">

                    <ImageView
                        android:layout_width="24dp"
                        android:layout_height="24dp"
                        android:src="@drawable/ic_login"
                        android:tint="#EC407A"
                        android:layout_marginEnd="12dp"/>

                    <TextView
                        android:id="@+id/tvUserLogin"
                        android:layout_width="wrap_content"
                        android:layout_height="wrap_content"
                        android:text="Р›РѕРіРёРЅ: user123"
                        android:textColor="#001A34"
                        android:textSize="16sp"
                        android:fontFamily="@font/montserratregular"/>
                </LinearLayout>
                >

                <!-- Р Р°Р·РґРµР»РёС‚РµР»СЊ -->
                <View
                    android:layout_width="match_parent"
                    android:layout_height="1dp"
                    android:background="#E6F0FF"
                    android:layout_marginBottom="16dp"/>

                <!-- РЎРїРёСЃРѕРє РєР°СЂС‚ -->
                <LinearLayout
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:orientation="horizontal"
                    android:gravity="center_vertical"
                    android:layout_marginBottom="8dp">

                    <ImageView
                        android:layout_width="24dp"
                        android:layout_height="24dp"
                        android:src="@drawable/card"
                        android:tint="#EC407A"
                        android:layout_marginEnd="12dp"/>

                    <TextView
                        android:layout_width="wrap_content"
                        android:layout_height="wrap_content"
                        android:text="РњРѕРё РєР°СЂС‚С‹"
                        android:textColor="#001A34"
                        android:textSize="18sp"
                        android:fontFamily="@font/montserratregular"/>
                </LinearLayout>

                <LinearLayout
                    android:id="@+id/cardsContainer"
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:orientation="vertical"
                    android:background="@android:color/transparent"
                    android:layout_marginBottom="16dp"/>

                <!-- РљРЅРѕРїРєР° РґРѕР±Р°РІР»РµРЅРёСЏ РЅРѕРІРѕР№ РєР°СЂС‚С‹ -->
                <com.google.android.material.button.MaterialButton
                    android:id="@+id/btnAddCard"
                    android:layout_width="match_parent"
                    android:layout_height="50dp"
                    android:text="Р”РѕР±Р°РІРёС‚СЊ РєР°СЂС‚Сѓ"
                    android:backgroundTint="#005BFF"
                    android:textColor="#FFFFFF"
                    android:textSize="16sp"
                    android:fontFamily="@font/montserratsemibold"
                    android:layout_marginBottom="16dp"
                    app:cornerRadius="12dp"
                    app:icon="@drawable/ic_add_product"
                    app:iconTint="#FFFFFF"
                    app:iconGravity="start"
                    app:iconPadding="8dp"/>

                <!-- Р Р°Р·РґРµР»РёС‚РµР»СЊ -->
                <View
                    android:layout_width="match_parent"
                    android:layout_height="1dp"
                    android:background="#E6F0FF"
                    android:layout_marginBottom="16dp"/>

                <!-- Р—Р°РєР°Р·С‹ РІ РґРѕСЃС‚Р°РІРєРµ -->
                <LinearLayout
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:orientation="horizontal"
                    android:gravity="center_vertical"
                    android:layout_marginBottom="8dp">

                    <ImageView
                        android:layout_width="24dp"
                        android:layout_height="24dp"
                        android:src="@drawable/ic_delivery"
                        android:tint="#EC407A"
                        android:layout_marginEnd="12dp"/>

                    <TextView
                        android:layout_width="wrap_content"
                        android:layout_height="wrap_content"
                        android:text="Р—Р°РєР°Р·С‹ РІ РґРѕСЃС‚Р°РІРєРµ"
                        android:textColor="#001A34"
                        android:textSize="18sp"
                        android:fontFamily="@font/montserratsemibold"/>
                </LinearLayout>

                <LinearLayout
                    android:id="@+id/inDeliveryOrdersContainer"
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:orientation="vertical"
                    android:background="@android:color/transparent"
                    android:layout_marginBottom="16dp"/>

                <!-- Р Р°Р·РґРµР»РёС‚РµР»СЊ -->
                <View
                    android:layout_width="match_parent"
                    android:layout_height="1dp"
                    android:background="#E6F0FF"
                    android:layout_marginBottom="16dp"/>

                <!-- Р’С‹РїРѕР»РЅРµРЅРЅС‹Рµ Р·Р°РєР°Р·С‹ -->
                <LinearLayout
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:orientation="horizontal"
                    android:gravity="center_vertical"
                    android:layout_marginBottom="8dp">

                    <ImageView
                        android:layout_width="24dp"
                        android:layout_height="24dp"
                        android:src="@drawable/ic_check"
                        android:tint="#EC407A"
                        android:layout_marginEnd="12dp"/>

                    <TextView
                        android:layout_width="wrap_content"
                        android:layout_height="wrap_content"
                        android:text="Р’С‹РїРѕР»РЅРµРЅРЅС‹Рµ Р·Р°РєР°Р·С‹"
                        android:textColor="#001A34"
                        android:textSize="18sp"
                        android:fontFamily="@font/montserratsemibold"/>
                </LinearLayout>

                <LinearLayout
                    android:id="@+id/completedOrdersContainer"
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:orientation="vertical"
                    android:background="@android:color/transparent"
                    android:layout_marginBottom="16dp"/>
            </LinearLayout>
        </androidx.core.widget.NestedScrollView>
    </androidx.cardview.widget.CardView>

    <!-- Р”РµРєРѕСЂР°С‚РёРІРЅС‹Рµ СЌР»РµРјРµРЅС‚С‹ -->
    <ImageView
        android:id="@+id/bottomBoxIcon"
        android:layout_width="120dp"
        android:layout_height="120dp"
        android:layout_marginStart="-30dp"
        android:layout_marginBottom="-40dp"
        android:alpha="0.35"
        android:contentDescription="Р”РµРєРѕСЂР°С‚РёРІРЅР°СЏ РёРєРѕРЅРєР° РєРѕСЂРѕР±РєРё"
        android:rotation="25"
        android:src="@drawable/ic_box"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintStart_toStartOf="parent" />

    <ImageView
        android:id="@+id/bottomToyIcon"
        android:layout_width="90dp"
        android:layout_height="90dp"
        android:layout_marginEnd="-40dp"
        android:layout_marginBottom="8dp"
        android:alpha="0.35"
        android:contentDescription="Р”РµРєРѕСЂР°С‚РёРІРЅР°СЏ РёРєРѕРЅРєР° РёРіСЂСѓС€РєРё"
        android:rotation="-20"
        android:src="@drawable/ic_toy"
        android:tint="#6097FF"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent" />
</androidx.constraintlayout.widget.ConstraintLayout>

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\res\layout\registration.xml
<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:background="#E6E6FA">

    <!-- РРєРѕРЅРєР° СЃСѓРјРєРё СЃРІРµСЂС…Сѓ СЃРїСЂР°РІР° (РїРѕРІРµСЂРЅСѓС‚Р°СЏ) -->
    <ImageView
        android:id="@+id/topBagIcon"
        android:alpha="0.35"
        android:layout_width="110dp"
        android:layout_height="110dp"
        android:src="@drawable/ic_bag"
        android:contentDescription="Р”РµРєРѕСЂР°С‚РёРІРЅР°СЏ РёРєРѕРЅРєР° СЃСѓРјРєРё"
        android:rotation="20"
        android:layout_marginTop="-30dp"
        android:layout_marginEnd="-10dp"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintEnd_toEndOf="parent" />

    <!-- РРєРѕРЅРєР° СЃСѓРјРєРё СЃРІРµСЂС…Сѓ СЃР»РµРІР° (РґРѕРїРѕР»РЅРёС‚РµР»СЊРЅР°СЏ) -->

    <!-- РРєРѕРЅРєР° РёРіСЂСѓС€РєРё СЃРІРµСЂС…Сѓ СЃР»РµРІР° (РјРµРЅСЊС€Р°СЏ, РїРѕРІРµСЂРЅСѓС‚Р°СЏ) -->
    <ImageView
        android:id="@+id/bottomBoxIcon2"
        android:layout_width="220dp"
        android:layout_height="220dp"
        android:layout_marginEnd="-60dp"
        android:alpha="0.35"
        android:contentDescription="Р”РµРєРѕСЂР°С‚РёРІРЅР°СЏ РёРєРѕРЅРєР° РєРѕСЂРѕР±РєРё"
        android:rotation="25"
        android:src="@drawable/ic_box"
        android:tint="#4F8DFF"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintHorizontal_bias="1.0"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintVertical_bias="0.187" />

    <ImageView
        android:id="@+id/s"
        android:layout_width="150dp"
        android:layout_height="150dp"
        android:layout_marginTop="132dp"
        android:alpha="0.35"
        android:contentDescription="Р”РµРєРѕСЂР°С‚РёРІРЅР°СЏ РёРєРѕРЅРєР° СЃСѓРјРєРё"
        android:rotation="-200"
        android:src="@drawable/ic_bag"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintHorizontal_bias="0.061"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent" />

    <!-- РќРѕРІС‹Р№ Р»РѕРіРѕС‚РёРї "OZON" СЃ РіСЂР°РґРёРµРЅС‚РѕРј Рё Р»РёРЅРёРµР№ -->
    <!-- Р“СЂР°РґРёРµРЅС‚РЅС‹Р№ Р»РѕРіРѕС‚РёРї OZON -->
    <ImageView
        android:id="@+id/topToyIcon"
        android:layout_width="100dp"
        android:layout_height="100dp"
        android:layout_marginStart="4dp"
        android:layout_marginTop="-20dp"
        android:alpha="0.35"
        android:contentDescription="Р”РµРєРѕСЂР°С‚РёРІРЅР°СЏ РёРєРѕРЅРєР° РёРіСЂСѓС€РєРё"
        android:rotation="-30"
        android:src="@drawable/ic_toy"
        android:tint="#6097FF"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent" />

    <androidx.constraintlayout.widget.ConstraintLayout
        android:id="@+id/logoContainer"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginTop="80dp"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintEnd_toEndOf="parent">

        <!-- РўРµРєСЃС‚ OZON СЃ РіСЂР°РґРёРµРЅС‚РѕРј -->
        <TextView
            android:id="@+id/logoText"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="OZON"
            android:textSize="80sp"
            android:fontFamily="@font/montserratsemibold"
            android:textStyle="bold"
            android:includeFontPadding="false"
            android:paddingHorizontal="16dp"
            app:layout_constraintTop_toTopOf="parent"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintEnd_toEndOf="parent"/>
        <!-- Р“СЂР°РґРёРµРЅС‚РЅР°СЏ Р»РёРЅРёСЏ РїРѕРґ С‚РµРєСЃС‚РѕРј -->
        <View
            android:id="@+id/logoLine"
            android:layout_width="170dp"
            android:layout_height="4dp"
            android:background="@drawable/ozon_line"
            app:layout_constraintTop_toBottomOf="@id/logoText"
            app:layout_constraintStart_toStartOf="@id/logoText"
            app:layout_constraintEnd_toEndOf="@id/logoText"
            android:layout_marginTop="4dp" />

    </androidx.constraintlayout.widget.ConstraintLayout>

    <!-- РљР°СЂС‚РѕС‡РєР° С„РѕСЂРјС‹ -->



    <androidx.cardview.widget.CardView
        android:id="@+id/authCard"
        android:layout_width="0dp"
        android:layout_height="wrap_content"
        android:layout_marginHorizontal="16dp"
        android:layout_marginTop="24dp"
        app:cardCornerRadius="20dp"
        app:cardElevation="6dp"
        app:cardBackgroundColor="#FFFFFF"
        app:layout_constraintTop_toBottomOf="@id/logoContainer"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintEnd_toEndOf="parent">

        <LinearLayout
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:gravity="center"
            android:orientation="vertical"
            android:padding="40dp">

            <!-- Р—Р°РіРѕР»РѕРІРѕРє -->
            <TextView
                android:id="@+id/title"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_marginBottom="24dp"
                android:fontFamily="@font/montserratsemibold"
                android:text="Р РµРіРёСЃС‚СЂР°С†РёСЏ"
                android:textColor="#EC407A"
                android:textSize="30sp" />
            <com.google.android.material.textfield.TextInputLayout
                android:id="@+id/nameInputLayout"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginBottom="24dp"
                app:boxBackgroundMode="outline"
                app:boxCornerRadiusBottomEnd="10dp"
                style="@style/CustomTextInputLayout"
                app:boxCornerRadiusBottomStart="10dp"
                app:boxCornerRadiusTopEnd="10dp"
                app:boxCornerRadiusTopStart="10dp"
                app:boxStrokeColor="#42A5F5"
                app:hintTextColor="#90A4AE"
                app:startIconDrawable="@drawable/ic_user"
                app:startIconTint="#42A5F5">

                <com.google.android.material.textfield.TextInputEditText
                    android:id="@+id/nameField"
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    style="@style/CustomTextInputEditText"
                    android:contentDescription="РџРѕР»Рµ РґР»СЏ РІРІРѕРґР° Р»РѕРіРёРЅР°"
                    android:importantForAccessibility="yes"
                    android:inputType="text"
                    android:hint="РРјСЏ" />
            </com.google.android.material.textfield.TextInputLayout>


            <!-- РџРѕР»Рµ РґР»СЏ РІРІРѕРґР° Р»РѕРіРёРЅР° -->
            <com.google.android.material.textfield.TextInputLayout
                android:id="@+id/loginInputLayout"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginBottom="24dp"
                app:boxBackgroundMode="outline"
                app:boxCornerRadiusBottomEnd="10dp"
                style="@style/CustomTextInputLayout"
                app:boxCornerRadiusBottomStart="10dp"
                app:boxCornerRadiusTopEnd="10dp"
                app:boxCornerRadiusTopStart="10dp"
                app:boxStrokeColor="#42A5F5"
                app:hintTextColor="#90A4AE"
                app:startIconDrawable="@drawable/ic_email"
                app:startIconTint="#42A5F5">

                <com.google.android.material.textfield.TextInputEditText
                    android:id="@+id/loginField"
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    style="@style/CustomTextInputEditText"
                    android:contentDescription="РџРѕР»Рµ РґР»СЏ РІРІРѕРґР° Р»РѕРіРёРЅР°"
                    android:importantForAccessibility="yes"
                    android:inputType="text"
                    android:hint="Р›РѕРіРёРЅ" />
            </com.google.android.material.textfield.TextInputLayout>


            <!-- РџРѕР»Рµ РґР»СЏ РІРІРѕРґР° РїР°СЂРѕР»СЏ -->
            <com.google.android.material.textfield.TextInputLayout
                android:id="@+id/passwordInputLayout"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginBottom="24dp"
                app:boxBackgroundMode="outline"
                app:boxCornerRadiusBottomEnd="10dp"
                style="@style/CustomTextInputLayout"
                app:boxCornerRadiusBottomStart="10dp"
                app:boxCornerRadiusTopEnd="10dp"
                app:boxCornerRadiusTopStart="10dp"
                app:boxStrokeColor="#42A5F5"
                app:hintTextColor="#90A4AE"
                app:startIconDrawable="@drawable/ic_lock"
                app:startIconTint="#42A5F5">

                <com.google.android.material.textfield.TextInputEditText
                    android:id="@+id/passwordField"
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    style="@style/CustomTextInputEditText"
                    android:background="@null"
                    android:contentDescription="РџРѕР»Рµ РґР»СЏ РІРІРѕРґР° РїР°СЂРѕР»СЏ"
                    android:fontFamily="@font/montserratregular"
                    android:hint="РџР°СЂРѕР»СЊ"
                    android:importantForAccessibility="yes"
                    android:inputType="textPassword"
                    android:padding="12dp"
                    android:textColor="#37474F"
                    android:textSize="16sp" />
            </com.google.android.material.textfield.TextInputLayout>

            <!-- РљРЅРѕРїРєР° РІС…РѕРґР° -->
            <com.google.android.material.button.MaterialButton
                android:id="@+id/registerButton"
                android:layout_width="match_parent"
                android:layout_height="54dp"
                android:layout_marginBottom="24dp"
                android:backgroundTint="#EC407A"
                android:contentDescription="РљРЅРѕРїРєР° РІС…РѕРґР°"
                android:elevation="4dp"
                android:fontFamily="@font/montserratsemibold"
                android:importantForAccessibility="yes"
                android:text="Р—Р°СЂРµРіРёСЃС‚СЂРёСЂРѕРІР°С‚СЊСЃСЏ"
                android:textColor="#FFFFFF"
                android:textSize="13sp"
                app:cornerRadius="12dp"
                app:icon="@drawable/ic_login"
                app:iconGravity="end"
                app:iconTint="#FFFFFF"
                app:rippleColor="#80FFFFFF" />

            <!-- РЎСЃС‹Р»РєРё -->
            <TextView
                android:id="@+id/loginLink"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:background="@drawable/ripple_effect_pastel"
                android:contentDescription="РЎСЃС‹Р»РєР° РЅР° СЂРµРіРёСЃС‚СЂР°С†РёСЋ"
                android:fontFamily="@font/montserratregular"
                android:importantForAccessibility="yes"
                android:textAlignment="center"
                android:padding="8dp"
                android:text="Р—РЈР¶Рµ РµСЃС‚СЊ Р°РєРєР°СѓРЅС‚? Р’РѕР№С‚Рё РєР°Рє РїРѕРєСѓРїР°С‚РµР»СЊ"
                android:textColor="#42A5F5"
                android:textSize="14sp" />

            <TextView
                android:id="@+id/sellerAuthLink"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:background="@drawable/ripple_effect_pastel"
                android:contentDescription="РЎСЃС‹Р»РєР° РЅР° РІРѕСЃСЃС‚Р°РЅРѕРІР»РµРЅРёРµ РїР°СЂРѕР»СЏ"
                android:fontFamily="@font/montserratregular"
                android:importantForAccessibility="yes"
                android:padding="8dp"
                android:text="Р’РѕР№С‚Рё РєР°Рє РїСЂРѕРґР°РІРµС†"
                android:textColor="#EC407A"
                android:textSize="14sp" />
        </LinearLayout>
    </androidx.cardview.widget.CardView>

    <!-- РРєРѕРЅРєР° РєРѕСЂРѕР±РєРё СЃРЅРёР·Сѓ СЃР»РµРІР° (РїРѕРІРµСЂРЅСѓС‚Р°СЏ) -->

    <!-- РРєРѕРЅРєР° РёРіСЂСѓС€РєРё СЃРЅРёР·Сѓ СЃРїСЂР°РІР° (РјРµРЅСЊС€Р°СЏ, РїРѕРІРµСЂРЅСѓС‚Р°СЏ) -->

    <ImageView
        android:id="@+id/bottomBoxIcon"
        android:layout_width="120dp"
        android:layout_height="120dp"
        android:layout_marginTop="664dp"
        android:alpha="0.35"
        android:contentDescription="Р”РµРєРѕСЂР°С‚РёРІРЅР°СЏ РёРєРѕРЅРєР° РєРѕСЂРѕР±РєРё"
        android:rotation="120"
        android:src="@drawable/ic_box"
        android:tint="#4F8DFF"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintHorizontal_bias="0.12"
        app:layout_constraintStart_toEndOf="@+id/s"
        app:layout_constraintTop_toTopOf="parent" />

    <ImageView
        android:id="@+id/bottomBoxIcon3"
        android:layout_width="120dp"
        android:layout_height="120dp"
        android:layout_marginStart="-30dp"
        android:layout_marginBottom="-40dp"
        android:alpha="0.35"
        android:contentDescription="Р”РµРєРѕСЂР°С‚РёРІРЅР°СЏ РёРєРѕРЅРєР° РєРѕСЂРѕР±РєРё"
        android:rotation="25"
        android:src="@drawable/ic_box"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintStart_toStartOf="parent" />

    <ImageView
        android:id="@+id/bottomToyIcon"
        android:layout_width="90dp"
        android:layout_height="90dp"
        android:layout_marginEnd="-40dp"
        android:layout_marginBottom="8dp"
        android:alpha="0.35"
        android:contentDescription="Р”РµРєРѕСЂР°С‚РёРІРЅР°СЏ РёРєРѕРЅРєР° РёРіСЂСѓС€РєРё"
        android:rotation="-20"
        android:src="@drawable/ic_toy"
        android:tint="#6097FF"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent" />
</androidx.constraintlayout.widget.ConstraintLayout>

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\res\layout\seller_layout.xml
<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:layout_width="match_parent"
    android:layout_height="match_parent">
    <FrameLayout
        android:id="@+id/frameLayoutseller"
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:layout_above="@id/bottom_navigation" />
    <ProgressBar
        android:id="@+id/progressBar"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:visibility="gone"
        android:layout_gravity="center"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintEnd_toEndOf="parent" />

    <com.google.android.material.bottomnavigation.BottomNavigationView
        android:id="@+id/bottom_navigation"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_alignParentBottom="true"
        app:menu="@menu/botton_navigation_menu_seller"
        app:itemIconTint="@color/button_color" />

</RelativeLayout>

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\res\layout\seller_profile_layout.xml
<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:background="#E6E6FA">

    <!-- Р”РµРєРѕСЂР°С‚РёРІРЅС‹Рµ СЌР»РµРјРµРЅС‚С‹ -->
    <ImageView
        android:id="@+id/topBagIcon"
        android:layout_width="110dp"
        android:layout_height="110dp"
        android:alpha="0.35"
        android:contentDescription="Р”РµРєРѕСЂР°С‚РёРІРЅР°СЏ РёРєРѕРЅРєР° СЃСѓРјРєРё"
        android:rotation="20"
        android:src="@drawable/ic_bag"
        android:layout_marginTop="-30dp"
        android:layout_marginEnd="-10dp"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintEnd_toEndOf="parent" />

    <!-- РћСЃРЅРѕРІРЅР°СЏ РєР°СЂС‚РѕС‡РєР° СЃ СЃРѕРґРµСЂР¶РёРјС‹Рј -->
    <androidx.cardview.widget.CardView
        android:layout_width="0dp"
        android:layout_height="0dp"
        android:layout_margin="16dp"
        app:cardCornerRadius="20dp"
        app:cardElevation="6dp"
        app:cardBackgroundColor="#FFFFFF"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintEnd_toEndOf="parent">

        <androidx.core.widget.NestedScrollView
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:fillViewport="true">

            <LinearLayout
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:orientation="vertical"
                android:padding="20dp">

                <!-- Р’РµСЂС…РЅРµРµ РјРµРЅСЋ (Toolbar) -->
                <androidx.appcompat.widget.Toolbar
                    android:id="@+id/toolbar"
                    android:layout_width="match_parent"
                    android:layout_height="56dp"
                    android:background="#FFFFFF"
                    android:elevation="4dp"
                    android:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar"
                    app:popupTheme="@style/ThemeOverlay.AppCompat.Light">


                        <ImageView
                            android:layout_width="32dp"
                            android:layout_height="32dp"
                            android:src="@drawable/ic_user"
                            android:tint="#EC407A"
                            android:layout_marginEnd="12dp"/>

                        <TextView
                            android:layout_width="wrap_content"
                            android:layout_height="wrap_content"
                            android:text="РџСЂРѕС„РёР»СЊ"
                            android:textSize="24sp"
                            android:textStyle="bold"
                            android:textColor="#EC407A"
                            android:fontFamily="@font/montserratbold"/>


                    <!-- РРєРѕРЅРєР° СЃРїСЂР°РІР° -->
                    <ImageView
                        android:id="@+id/btnMenu"
                        android:layout_width="wrap_content"
                        android:layout_height="wrap_content"
                        android:layout_gravity="end"
                        android:padding="8dp"
                        android:src="@drawable/ic_menu"
                        android:tint="#005BFF"
                        android:contentDescription="РљРЅРѕРїРєР° РјРµРЅСЋ"/>
                </androidx.appcompat.widget.Toolbar>

                <!-- РРЅС„РѕСЂРјР°С†РёСЏ Рѕ РїСЂРѕРґР°РІС†Рµ -->
                <LinearLayout
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:orientation="horizontal"
                    android:gravity="center_vertical"
                    android:layout_marginTop="16dp"
                    android:layout_marginBottom="8dp">

                    <ImageView
                        android:layout_width="28dp"
                        android:layout_height="28dp"
                        android:src="@drawable/ic_user"
                        android:tint="#EC407A"
                        android:layout_marginEnd="12dp"/>

                    <TextView
                        android:id="@+id/tvSellerName"
                        android:layout_width="wrap_content"
                        android:layout_height="wrap_content"
                        android:text="РРјСЏ РџСЂРѕРґР°РІС†Р°"
                        android:textColor="#001A34"
                        android:textSize="20sp"
                        android:fontFamily="@font/montserratsemibold"/>
                </LinearLayout>

                <LinearLayout
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:orientation="horizontal"
                    android:gravity="center_vertical"
                    android:layout_marginBottom="8dp">

                    <ImageView
                        android:layout_width="24dp"
                        android:layout_height="24dp"
                        android:src="@drawable/ic_login"
                        android:tint="#EC407A"
                        android:layout_marginEnd="12dp"/>

                    <TextView
                        android:id="@+id/tvSellerLogin"
                        android:layout_width="wrap_content"
                        android:layout_height="wrap_content"
                        android:text="Р›РѕРіРёРЅ: seller123"
                        android:textColor="#001A34"
                        android:textSize="16sp"
                        android:fontFamily="@font/montserratregular"/>
                </LinearLayout>

                <LinearLayout
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:orientation="horizontal"
                    android:gravity="center_vertical"
                    android:layout_marginBottom="8dp">

                    <ImageView
                        android:layout_width="24dp"
                        android:layout_height="24dp"
                        android:src="@drawable/ic_store"
                        android:tint="#EC407A"
                        android:layout_marginEnd="12dp"/>

                    <TextView
                        android:id="@+id/tvSellerShop"
                        android:layout_width="wrap_content"
                        android:layout_height="wrap_content"
                        android:text="РњР°РіР°Р·РёРЅ: MyShop"
                        android:textColor="#001A34"
                        android:textSize="16sp"
                        android:fontFamily="@font/montserratregular"/>
                </LinearLayout>

                <LinearLayout
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:orientation="horizontal"
                    android:gravity="center_vertical"
                    android:layout_marginBottom="8dp">

                    <ImageView
                        android:layout_width="24dp"
                        android:layout_height="24dp"
                        android:src="@drawable/ic_document"
                        android:tint="#EC407A"
                        android:layout_marginEnd="12dp"/>

                    <TextView
                        android:id="@+id/tvSellerOGRNIP"
                        android:layout_width="wrap_content"
                        android:layout_height="wrap_content"
                        android:text="РћР“Р РќРРџ: 1234567890123"
                        android:textColor="#001A34"
                        android:textSize="16sp"
                        android:fontFamily="@font/montserratregular"/>
                </LinearLayout>

                <LinearLayout
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:orientation="horizontal"
                    android:gravity="center_vertical"
                    android:layout_marginBottom="16dp">

                    <ImageView
                        android:layout_width="24dp"
                        android:layout_height="24dp"
                        android:src="@drawable/ic_document"
                        android:tint="#EC407A"
                        android:layout_marginEnd="12dp"/>

                    <TextView
                        android:id="@+id/tvSellerINN"
                        android:layout_width="wrap_content"
                        android:layout_height="wrap_content"
                        android:text="РРќРќ: 1234567890"
                        android:textColor="#001A34"
                        android:textSize="16sp"
                        android:fontFamily="@font/montserratregular"/>
                </LinearLayout>

                <!-- Р—Р°РіРѕР»РѕРІРѕРє РґР»СЏ РіСЂР°С„РёРєР° -->
                <TextView
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"
                    android:text="Р’С‹СЂСѓС‡РєР° Р·Р° С‚РµРєСѓС‰РёР№ РјРµСЃСЏС†"
                    android:textColor="#001A34"
                    android:textSize="18sp"
                    android:fontFamily="@font/montserratsemibold"
                    android:layout_marginTop="16dp"
                    android:layout_marginBottom="8dp"/>

                <!-- Р’С‹РїР°РґР°СЋС‰РёР№ СЃРїРёСЃРѕРє РґР»СЏ РІС‹Р±РѕСЂР° РїСЂРѕРґСѓРєС‚Р° -->
                <com.google.android.material.textfield.TextInputLayout
                    android:id="@+id/productSpinnerLayout"
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:layout_marginBottom="16dp"
                    app:boxBackgroundMode="outline"
                    app:boxStrokeColor="#005BFF"
                    app:hintTextColor="#005BFF"
                    app:boxCornerRadiusTopStart="12dp"
                    app:boxCornerRadiusTopEnd="12dp"
                    app:boxCornerRadiusBottomStart="12dp"
                    app:boxCornerRadiusBottomEnd="12dp"
                    android:background="@drawable/spinner_background">

                    <Spinner
                        android:id="@+id/productSpinner"
                        android:layout_width="match_parent"
                        android:layout_height="wrap_content"
                        android:hint="Р’С‹Р±РµСЂРёС‚Рµ С‚РѕРІР°СЂ"
                        android:padding="10dp"
                        android:textSize="14sp"
                        android:textColor="#001A34"
                        android:fontFamily="@font/montserratregular"
                        android:contentDescription="Р’С‹РїР°РґР°СЋС‰РёР№ СЃРїРёСЃРѕРє РґР»СЏ РІС‹Р±РѕСЂР° С‚РѕРІР°СЂР°"
                        android:popupBackground="#FFFFFF"
                        android:spinnerMode="dropdown"
                        android:drawableEnd="@drawable/ic_dropdown"
                        android:drawableTint="#005BFF" />
                </com.google.android.material.textfield.TextInputLayout>

                <!-- Р“СЂР°С„РёРє РІС‹СЂСѓС‡РєРё -->
                <!-- Р“СЂР°С„РёРє РІС‹СЂСѓС‡РєРё -->
                <androidx.cardview.widget.CardView
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    app:cardCornerRadius="12dp"
                    app:cardElevation="4dp"
                    app:cardBackgroundColor="#FFFFFF"
                    android:layout_marginBottom="16dp">

                    <HorizontalScrollView
                        android:layout_width="match_parent"
                        android:layout_height="wrap_content"
                        android:scrollbars="horizontal"
                        android:scrollbarSize="8dp"
                        android:scrollbarThumbHorizontal="@android:color/darker_gray"
                        android:fillViewport="true">

                        <com.github.mikephil.charting.charts.LineChart
                            android:id="@+id/revenueChart"
                            android:layout_width="704dp"
                        android:layout_height="291dp"
                        android:background="@drawable/spinner_background"
                        android:padding="10dp" />

                    </HorizontalScrollView>
                </androidx.cardview.widget.CardView>
            </LinearLayout>
        </androidx.core.widget.NestedScrollView>
    </androidx.cardview.widget.CardView>
</androidx.constraintlayout.widget.ConstraintLayout>

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\res\layout\seller_registration_dialog.xml
<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:layout_width="match_parent"
    android:layout_height="wrap_content"
    android:orientation="vertical"
    android:padding="24dp"
    android:background="@drawable/bg_rounded_dialog">

    <!-- Р—Р°РіРѕР»РѕРІРѕРє -->
    <TextView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="Р РµРіРёСЃС‚СЂР°С†РёСЏ РїСЂРѕРґР°РІС†Р°"
        android:textColor="#001A34"
        android:textSize="20sp"
        android:fontFamily="@font/montserratbold"
        android:layout_marginBottom="16dp"/>

    <!-- РќР°РёРјРµРЅРѕРІР°РЅРёРµ РјР°РіР°Р·РёРЅР° -->
    <com.google.android.material.textfield.TextInputLayout
        android:id="@+id/storeNameInputLayout"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_marginBottom="16dp"
        app:boxBackgroundMode="outline"
        app:boxStrokeColor="#005BFF"
        app:hintTextColor="#005BFF"
        app:startIconDrawable="@drawable/ic_store"
        app:startIconTint="#005BFF"
        style="@style/CustomTextInputLayout">

        <com.google.android.material.textfield.TextInputEditText
            android:id="@+id/etStoreName"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:hint="РќР°РёРјРµРЅРѕРІР°РЅРёРµ РјР°РіР°Р·РёРЅР°"
            android:inputType="text"
            android:textColor="#001A34"
            android:textSize="16sp"
            android:fontFamily="@font/montserratregular"
            style="@style/CustomTextInputEditText"/>
    </com.google.android.material.textfield.TextInputLayout>

    <!-- Р¤Р°РјРёР»РёСЏ -->
    <com.google.android.material.textfield.TextInputLayout
        android:id="@+id/lastNameInputLayout"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_marginBottom="16dp"
        app:boxBackgroundMode="outline"
        app:boxStrokeColor="#005BFF"
        app:hintTextColor="#005BFF"
        app:startIconDrawable="@drawable/ic_user"
        app:startIconTint="#005BFF"
        style="@style/CustomTextInputLayout">

        <com.google.android.material.textfield.TextInputEditText
            android:id="@+id/etLastName"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:hint="Р¤Р°РјРёР»РёСЏ"
            android:inputType="textPersonName"
            android:textColor="#001A34"
            android:textSize="16sp"
            android:fontFamily="@font/montserratregular"
            style="@style/CustomTextInputEditText"/>
    </com.google.android.material.textfield.TextInputLayout>

    <!-- РРјСЏ -->
    <com.google.android.material.textfield.TextInputLayout
        android:id="@+id/firstNameInputLayout"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_marginBottom="16dp"
        app:boxBackgroundMode="outline"
        app:boxStrokeColor="#005BFF"
        app:hintTextColor="#005BFF"
        app:startIconDrawable="@drawable/ic_user"
        app:startIconTint="#005BFF"
        style="@style/CustomTextInputLayout">

        <com.google.android.material.textfield.TextInputEditText
            android:id="@+id/etFirstName"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:hint="РРјСЏ"
            android:inputType="textPersonName"
            android:textColor="#001A34"
            android:textSize="16sp"
            android:fontFamily="@font/montserratregular"
            style="@style/CustomTextInputEditText"/>
    </com.google.android.material.textfield.TextInputLayout>

    <!-- РћС‚С‡РµСЃС‚РІРѕ -->
    <com.google.android.material.textfield.TextInputLayout
        android:id="@+id/middleNameInputLayout"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_marginBottom="16dp"
        app:boxBackgroundMode="outline"
        app:boxStrokeColor="#005BFF"
        app:hintTextColor="#005BFF"
        app:startIconDrawable="@drawable/ic_user"
        app:startIconTint="#005BFF"
        style="@style/CustomTextInputLayout">

        <com.google.android.material.textfield.TextInputEditText
            android:id="@+id/etMiddleName"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:hint="РћС‚С‡РµСЃС‚РІРѕ"
            android:inputType="textPersonName"
            android:textColor="#001A34"
            android:textSize="16sp"
            android:fontFamily="@font/montserratregular"
            style="@style/CustomTextInputEditText"/>
    </com.google.android.material.textfield.TextInputLayout>

    <!-- РћР“Р РќРРџ -->
    <com.google.android.material.textfield.TextInputLayout
        android:id="@+id/ogrnipInputLayout"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_marginBottom="16dp"
        app:boxBackgroundMode="outline"
        app:boxStrokeColor="#005BFF"
        app:hintTextColor="#005BFF"
        app:startIconDrawable="@drawable/ic_document"
        app:startIconTint="#005BFF"
        style="@style/CustomTextInputLayout">

        <com.google.android.material.textfield.TextInputEditText
            android:id="@+id/etOGRNIP"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:maxLength="15"
            android:hint="РћР“Р РќРРџ"
            android:inputType="number"
            android:textColor="#001A34"
            android:textSize="16sp"
            android:fontFamily="@font/montserratregular"
            style="@style/CustomTextInputEditText"/>
    </com.google.android.material.textfield.TextInputLayout>

    <!-- РРќРќ -->
    <com.google.android.material.textfield.TextInputLayout
        android:id="@+id/innInputLayout"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_marginBottom="16dp"
        app:boxBackgroundMode="outline"
        app:boxStrokeColor="#005BFF"
        app:hintTextColor="#005BFF"
        app:startIconDrawable="@drawable/ic_document"
        app:startIconTint="#005BFF"
        style="@style/CustomTextInputLayout">

        <com.google.android.material.textfield.TextInputEditText
            android:id="@+id/etINN"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:hint="РРќРќ"
            android:maxLength="10"
            android:inputType="number"
            android:textColor="#001A34"
            android:textSize="16sp"
            android:fontFamily="@font/montserratregular"
            style="@style/CustomTextInputEditText"/>
    </com.google.android.material.textfield.TextInputLayout>

    <!-- РљРЅРѕРїРєРё -->
    <LinearLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:orientation="horizontal"
        android:layout_marginTop="8dp">

        <!-- РљРЅРѕРїРєР° "РћС‚РјРµРЅР°" -->
        <com.google.android.material.button.MaterialButton
            android:id="@+id/btnCancel"
            android:layout_width="0dp"
            android:layout_height="48dp"
            android:layout_weight="1"
            android:layout_marginEnd="4dp"
            android:text="РћС‚РјРµРЅР°"
            android:textColor="#005BFF"
            android:backgroundTint="#E6F0FF"
            android:textSize="16sp"
            android:fontFamily="@font/montserratsemibold"
            app:cornerRadius="8dp"/>

        <!-- РљРЅРѕРїРєР° "РЎРѕР·РґР°С‚СЊ Р°РєРєР°СѓРЅС‚" -->
        <com.google.android.material.button.MaterialButton
            android:id="@+id/btnCreateAccount"
            android:layout_width="0dp"
            android:layout_height="48dp"
            android:layout_weight="1"
            android:layout_marginStart="4dp"
            android:text="РЎРѕР·РґР°С‚СЊ Р°РєРєР°СѓРЅС‚"
            android:textColor="#FFFFFF"
            android:backgroundTint="#005BFF"
            android:textSize="12sp"
            android:fontFamily="@font/montserratsemibold"
            app:cornerRadius="8dp"/>
    </LinearLayout>
</LinearLayout>

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\res\menu\bottom_navigation_menu.xml
<?xml version="1.0" encoding="utf-8"?>
<menu xmlns:android="http://schemas.android.com/apk/res/android">
    <item
        android:id="@+id/nav_catalog"
        android:icon="@drawable/catalog"
        android:title="РљР°С‚Р°Р»РѕРі" />
    <item
        android:id="@+id/nav_cart"
        android:icon="@drawable/cart"
        android:title="РљРѕСЂР·РёРЅР°" />
    <item
        android:id="@+id/nav_profile"
        android:icon="@drawable/profile"
        android:title="РџСЂРѕС„РёР»СЊ" />
</menu>


Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\res\menu\botton_navigation_menu_seller.xml
<?xml version="1.0" encoding="utf-8"?>
<menu xmlns:android="http://schemas.android.com/apk/res/android">
    <item
        android:id="@+id/nav_catalog"
        android:icon="@drawable/catalog"
        android:title="РњРѕРё С‚РѕРІР°СЂС‹" />
    <item
        android:id="@+id/nav_cart"
        android:icon="@drawable/cart"
        android:title="Р”РѕР±Р°РІРёС‚СЊ С‚РѕРІР°СЂ" />
    <item
        android:id="@+id/nav_profile"
        android:icon="@drawable/profile"
        android:title="РџСЂРѕС„РёР»СЊ" />
</menu>


Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\res\menu\card_delete_menu.xml
<!-- res/menu/menu_card_options.xml -->
<menu xmlns:android="http://schemas.android.com/apk/res/android">
    <item
        android:id="@+id/action_delete_card"
        android:title="РЈРґР°Р»РёС‚СЊ РєР°СЂС‚Сѓ"
 />
</menu>

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\res\menu\menu_account.xml
<menu xmlns:android="http://schemas.android.com/apk/res/android">
    <item
        android:id="@+id/action_logout"
        android:title="Р’С‹Р№С‚Рё" />
    <item
        android:id="@+id/action_register_seller"
        android:title="РЎС‚Р°С‚СЊ РїСЂРѕРґР°РІС†РѕРј" />
    <item
        android:id="@+id/action_edit_account"
        android:title="РР·РјРµРЅРёС‚СЊ Р°РєРєР°СѓРЅС‚" />
    <item
        android:id="@+id/action_change_password"
        android:title="РР·РјРµРЅРёС‚СЊ РїР°СЂРѕР»СЊ" />
    <item
        android:id="@+id/action_delete_account"
        android:title="РЈРґР°Р»РёС‚СЊ Р°РєРєР°СѓРЅС‚" />
</menu>

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\res\menu\seller_profile_menu.xml
<?xml version="1.0" encoding="utf-8"?>
<menu xmlns:android="http://schemas.android.com/apk/res/android">
    <item
        android:id="@+id/action_edit_account"
        android:title="Р РµРґР°РєС‚РёСЂРѕРІР°С‚СЊ Р°РєРєР°СѓРЅС‚" />
    <item
        android:id="@+id/action_change_password"
        android:title="РЎРјРµРЅРёС‚СЊ РїР°СЂРѕР»СЊ" />
    <item
        android:id="@+id/action_delete_account"
        android:title="РЈРґР°Р»РёС‚СЊ Р°РєРєР°СѓРЅС‚" />
    <item
        android:id="@+id/action_logout"
        android:title="Р’С‹Р№С‚Рё" />

</menu>

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\res\mipmap-anydpi-v26\ic_launcher.xml
<?xml version="1.0" encoding="utf-8"?>
<adaptive-icon xmlns:android="http://schemas.android.com/apk/res/android">
    <background android:drawable="@drawable/ic_launcher_background" />
    <foreground android:drawable="@drawable/ic_launcher_foreground" />
    <monochrome android:drawable="@drawable/ic_launcher_foreground" />
</adaptive-icon>

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\res\mipmap-anydpi-v26\ic_launcher_round.xml
<?xml version="1.0" encoding="utf-8"?>
<adaptive-icon xmlns:android="http://schemas.android.com/apk/res/android">
    <background android:drawable="@drawable/ic_launcher_background" />
    <foreground android:drawable="@drawable/ic_launcher_foreground" />
    <monochrome android:drawable="@drawable/ic_launcher_foreground" />
</adaptive-icon>

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\res\values\colors.xml
<resources>
    <!-- Main Colors -->
    <color name="primary_color">#FFFFFF</color>
    <color name="button_color">#005BFF</color>
    <color name="secondary_color_1">#001A34</color>
    <color name="highlight_color">#F1117E</color>
    <color name="text_color_primary">#FFFFFF</color>
    <color name="text_color_secondary">#F1117E</color>
    <color name="light_gray">#CCCCCC</color>
    <color name="gradient_start">#2B67FF</color>  <!-- РЎРёРЅРёР№ -->
    <color name="gradient_end">#EC407A</color>    <!-- Р РѕР·РѕРІС‹Р№ -->
</resources>

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\res\values\strings.xml
<resources>
    <string name="app_name">Ozon</string>
    <string name="select_location_first">Р’С‹Р±РµСЂРёС‚Рµ РјРµСЃС‚Рѕ РЅР° РєР°СЂС‚Рµ</string>
    <string name="selected_location">Р’С‹Р±СЂР°РЅРѕ: %s</string>
    <string name="address_search_error">РћС€РёР±РєР° РїСЂРё РїРѕРёСЃРєРµ Р°РґСЂРµСЃР°</string>
    <string name="address_parse_error">РћС€РёР±РєР° РѕР±СЂР°Р±РѕС‚РєРё Р°РґСЂРµСЃР°</string>
    <string name="network_error">РќРµС‚ РёРЅС‚РµСЂРЅРµС‚-СЃРѕРµРґРёРЅРµРЅРёСЏ</string>
    <string name="server_error">РћС€РёР±РєР° СЃРµСЂРІРµСЂР°</string>
    <string name="location_permission_denied">Р”Р»СЏ С‚РѕС‡РЅРѕРіРѕ РѕРїСЂРµРґРµР»РµРЅРёСЏ РјРµСЃС‚РѕРїРѕР»РѕР¶РµРЅРёСЏ РЅСѓР¶РЅС‹ СЂР°Р·СЂРµС€РµРЅРёСЏ</string>

</resources>

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\res\values\styles.xml
<resources>
    <!-- РЎС‚РёР»СЊ РґР»СЏ Р·Р°РіРѕР»РѕРІРєРѕРІ -->
    <style name="HeaderTextStyle">
        <item name="android:fontFamily">@font/ramona_bold</item>
        <item name="android:textColor">#001A34</item>
        <item name="android:textSize">24sp</item>
        <item name="android:layout_marginBottom">24dp</item>
    </style>

    <!-- РЎС‚РёР»СЊ РґР»СЏ РѕР±С‹С‡РЅРѕРіРѕ С‚РµРєСЃС‚Р° -->
    <style name="BodyTextStyle">
        <item name="android:fontFamily">@font/ramona_light</item>
        <item name="android:textColor">#001A34</item>
        <item name="android:textSize">16sp</item>
    </style>

    <!-- РЎС‚РёР»СЊ РґР»СЏ РєРЅРѕРїРѕРє -->
    <style name="ButtonStyle">
        <item name="android:backgroundTint">#005BFF</item>
        <item name="android:textColor">#FFFFFF</item>
        <item name="android:textSize">18sp</item>
        <item name="android:fontFamily">@font/ramona_bold</item>
    </style>

    <!-- РЎС‚РёР»СЊ РґР»СЏ СЃСЃС‹Р»РѕРє -->
    <style name="LinkTextStyle">
        <item name="android:textColor">#00A2FF</item>
        <item name="android:textSize">14sp</item>
        <item name="android:fontFamily">@font/ramona_light</item>
    </style>

    <!-- РЎС‚РёР»СЊ РґР»СЏ СЃСЃС‹Р»РєРё РІРѕСЃСЃС‚Р°РЅРѕРІР»РµРЅРёСЏ РїР°СЂРѕР»СЏ -->
    <style name="ForgotPasswordStyle">
        <item name="android:textColor">#F1117E</item>
        <item name="android:textSize">14sp</item>
        <item name="android:fontFamily">@font/ramona_light</item>
    </style>
    <style name="GradientText" parent="TextAppearance.AppCompat.Large">
        <item name="android:textSize">60sp</item>
        <item name="android:fontFamily">@font/montserratsemibold</item>
        <item name="android:textStyle">bold</item>
        <item name="android:textColor">@drawable/gradient_text</item>
    </style>

        <style name="ButtonStyle2">
            <item name="android:background">@drawable/button_background</item> <!-- Custom background -->
            <item name="android:textColor">@color/primary_color</item>
            <item name="android:textSize">16sp</item>
            <item name="android:layout_marginBottom">16dp</item>
            <item name="android:fontFamily">@font/ramona_bold</item>
        </style>

        <!-- РЎС‚РёР»СЊ РґР»СЏ TextInputLayout -->
        <style name="CustomTextInputLayout" parent="Widget.MaterialComponents.TextInputLayout.OutlinedBox">
            <!-- Р¦РІРµС‚ РѕР±РІРѕРґРєРё -->
            <item name="boxStrokeColor">#42A5F5</item>
            <!-- Р Р°РґРёСѓСЃ СЃРєСЂСѓРіР»РµРЅРёСЏ СѓРіР»РѕРІ -->
            <item name="boxCornerRadiusTopStart">10dp</item>
            <item name="boxCornerRadiusTopEnd">10dp</item>
            <item name="boxCornerRadiusBottomStart">10dp</item>
            <item name="boxCornerRadiusBottomEnd">10dp</item>
            <!-- Р¦РІРµС‚ С‚РµРєСЃС‚Р° РїРѕРґСЃРєР°Р·РєРё -->
            <item name="hintTextColor">#90A4AE</item>
            <!-- РРєРѕРЅРєР° РІ РЅР°С‡Р°Р»Рµ РїРѕР»СЏ -->
        </style>

        <!-- РЎС‚РёР»СЊ РґР»СЏ TextInputEditText -->
        <style name="CustomTextInputEditText">
            <!-- Р¦РІРµС‚ С‚РµРєСЃС‚Р° РІ РїРѕР»Рµ РІРІРѕРґР° -->
            <item name="android:textColor">#37474F</item>
            <!-- Р Р°Р·РјРµСЂ С‚РµРєСЃС‚Р° -->
            <item name="android:textSize">16sp</item>
            <!-- РЁСЂРёС„С‚ -->
            <item name="android:fontFamily">@font/montserratregular</item>
            <!-- РџР°РґРґРёРЅРі РІРЅСѓС‚СЂРё РїРѕР»СЏ -->
            <item name="android:padding">12dp</item>
            <!-- Р¤РѕРЅ (СѓР±РёСЂР°РµРј С„РѕРЅ, С‡С‚РѕР±С‹ РѕРЅ СЃРѕРѕС‚РІРµС‚СЃС‚РІРѕРІР°Р» СЃС‚РёР»СЋ РѕР±РІРѕРґРєРё) -->
            <item name="android:background">@null</item>
        </style>




</resources>

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\res\values\themes.xml
<resources xmlns:tools="http://schemas.android.com/tools">
    <!-- Base application theme. -->
    <style name="Base.Theme.Ozon" parent="Theme.Material3.Light.NoActionBar">
        <!-- Customize your light theme here. -->
        <!-- <item name="colorPrimary">@color/my_light_primary</item> -->
    </style>
    <style name="Theme.Ozon" parent="Theme.MaterialComponents.Light.NoActionBar"/>

</resources>

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\res\values-night\themes.xml
<resources xmlns:tools="http://schemas.android.com/tools">
    <!-- Base application theme. -->
    <style name="Theme.Ozon.Light" parent="Theme.MaterialComponents.Light.NoActionBar">
        <!-- Customize your dark theme here. -->
        <!-- <item name="colorPrimary">@color/my_dark_primary</item> -->
    </style>
</resources>

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\res\xml\backup_rules.xml
<?xml version="1.0" encoding="utf-8"?><!--
   Sample backup rules file; uncomment and customize as necessary.
   See https://developer.android.com/guide/topics/data/autobackup
   for details.
   Note: This file is ignored for devices older that API 31
   See https://developer.android.com/about/versions/12/backup-restore
-->
<full-backup-content>
    <!--
   <include domain="sharedpref" path="."/>
   <exclude domain="sharedpref" path="device.xml"/>
-->
</full-backup-content>

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\res\xml\data_extraction_rules.xml
<?xml version="1.0" encoding="utf-8"?><!--
   Sample data extraction rules file; uncomment and customize as necessary.
   See https://developer.android.com/about/versions/12/backup-restore#xml-changes
   for details.
-->
<data-extraction-rules>
    <cloud-backup>
        <!-- TODO: Use <include> and <exclude> to control what is backed up.
        <include .../>
        <exclude .../>
        -->
    </cloud-backup>
    <!--
    <device-transfer>
        <include .../>
        <exclude .../>
    </device-transfer>
    -->
</data-extraction-rules>

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\res\xml\delivery_widget_info.xml
<?xml version="1.0" encoding="utf-8"?>
<appwidget-provider xmlns:android="http://schemas.android.com/apk/res/android"
    android:minWidth="250dp"
    android:minHeight="110dp"
    android:updatePeriodMillis="60000"
    android:initialLayout="@layout/delivery_widget"
    android:resizeMode="horizontal|vertical"
    android:widgetCategory="home_screen"/>

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\main\AndroidManifest.xml
<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools">
    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />
    <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" />
    <uses-permission android:name="android.permission.POST_NOTIFICATIONS" tools:node="merge" />
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
    <uses-permission android:name="android.permission.SCHEDULE_EXACT_ALARM" />
    <uses-permission android:name="android.permission.WAKE_LOCK" />
    <uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED" />

    <application
        android:allowBackup="true"
        android:dataExtractionRules="@xml/data_extraction_rules"
        android:fullBackupContent="@xml/backup_rules"
        android:icon="@drawable/logo"
        android:label="@string/app_name"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:supportsRtl="true"
        android:theme="@style/Theme.Ozon"
        tools:targetApi="31">
        <meta-data
            android:name="com.yandex.mapkit.apikey"
            android:value="3847ea55-35fb-4a64-a196-4839fac767be" />

        <!-- Р“Р»Р°РІРЅР°СЏ Р°РєС‚РёРІРЅРѕСЃС‚СЊ -->
        <activity
            android:name=".MainActivity"
            android:exported="true">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />
                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>

        <activity android:name=".AutorizationForSellerActivity" android:exported="true" />
        <activity android:name=".RegistrationActivity" android:exported="true" />
        <activity android:name=".CustomerMainActivity" android:exported="true" />
        <activity android:name=".CreateProductActivity" android:exported="true" />
        <activity android:name=".ProductDetail" android:exported="true" />
        <activity android:name=".SellerMainActivity" android:exported="true" />
        <activity
            android:name=".MapSelectionActivity"
            android:exported="true"
            android:theme="@style/Theme.Ozon" />

        <receiver android:name=".DeliveryReminderReceiver" android:exported="false" />
        <receiver
            android:name=".DeliveryWidgetProvider"
            android:exported="false">
            <intent-filter>
                <action android:name="android.appwidget.action.APPWIDGET_UPDATE" />
                <action android:name="com.example.ozon.UPDATE_WIDGET" />
            </intent-filter>
            <meta-data
                android:name="android.appwidget.provider"
                android:resource="@xml/delivery_widget_info" />
        </receiver>
    </application>
</manifest>

Название файла: C:\Users\user1\AndroidStudioProjects\Ozon\app\src\test\java\com\example\ozon\ExampleUnitTest.java
package com.example.ozon;

import org.junit.Test;

import static org.junit.Assert.*;

/**
 * Example local unit test, which will execute on the development machine (host).
 *
 * @see <a href="http://d.android.com/tools/testing">Testing documentation</a>
 */
public class ExampleUnitTest {
    @Test
    public void addition_isCorrect() {
        assertEquals(4, 2 + 2);
    }
}

